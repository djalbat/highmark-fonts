(() => {
  var __commonJS = (callback, module) => () => {
    if (!module) {
      module = {exports: {}};
      callback(module.exports, module);
    }
    return module.exports;
  };

  // node_modules/easy/lib/offset.js
  var require_offset = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Offset;
      }
    });
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Offset = /* @__PURE__ */ function() {
      function Offset2(top, left) {
        _class_call_check(this, Offset2);
        this.top = top;
        this.left = left;
      }
      _create_class(Offset2, [
        {
          key: "getTop",
          value: function getTop() {
            return this.top;
          }
        },
        {
          key: "getLeft",
          value: function getLeft() {
            return this.left;
          }
        }
      ], [
        {
          key: "fromDOMElement",
          value: function fromDOMElement(domElement) {
            var offsetTop = domElement.offsetTop, offsetLeft = domElement.offsetLeft, top = offsetTop, left = offsetLeft, offset = new Offset2(top, left);
            return offset;
          }
        }
      ]);
      return Offset2;
    }();
  });

  // node_modules/easy/lib/bounds.js
  var require_bounds = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Bounds;
      }
    });
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Bounds = /* @__PURE__ */ function() {
      function Bounds2(top, left, right, bottom) {
        _class_call_check(this, Bounds2);
        this.top = top;
        this.left = left;
        this.right = right;
        this.bottom = bottom;
      }
      _create_class(Bounds2, [
        {
          key: "getTop",
          value: function getTop() {
            return this.top;
          }
        },
        {
          key: "getLeft",
          value: function getLeft() {
            return this.left;
          }
        },
        {
          key: "getRight",
          value: function getRight() {
            return this.right;
          }
        },
        {
          key: "getBottom",
          value: function getBottom() {
            return this.bottom;
          }
        },
        {
          key: "getWidth",
          value: function getWidth() {
            var width = this.right - this.left;
            return width;
          }
        },
        {
          key: "getHeight",
          value: function getHeight() {
            var height = this.bottom - this.top;
            return height;
          }
        },
        {
          key: "setTop",
          value: function setTop(top) {
            this.top = top;
          }
        },
        {
          key: "setLeft",
          value: function setLeft(left) {
            this.left = left;
          }
        },
        {
          key: "setRight",
          value: function setRight(right) {
            this.right = right;
          }
        },
        {
          key: "setBottom",
          value: function setBottom(bottom) {
            this.bottom = bottom;
          }
        },
        {
          key: "areOverlapping",
          value: function areOverlapping(bounds) {
            var bottom = bounds.getBottom(), right = bounds.getRight(), left = bounds.getLeft(), top = bounds.getTop(), overlapping = this.top < bottom && this.left < right && this.right > left && this.bottom > top;
            return overlapping;
          }
        },
        {
          key: "areOverlappingByTopAndLeft",
          value: function areOverlappingByTopAndLeft(top, left) {
            var overlapping = this.top <= top && this.left <= left && this.right > left && this.bottom > top;
            return overlapping;
          }
        }
      ], [
        {
          key: "fromDOMElement",
          value: function fromDOMElement(domElement) {
            var pageXOffset = window.pageXOffset, pageYOffset = window.pageYOffset, boundingClientRect = domElement.getBoundingClientRect(), windowScrollTop = pageYOffset, windowScrollLeft = pageXOffset, top = boundingClientRect.top + windowScrollTop, left = boundingClientRect.left + windowScrollLeft, right = boundingClientRect.right + windowScrollLeft, bottom = boundingClientRect.bottom + windowScrollTop, bounds = new Bounds2(top, left, right, bottom);
            return bounds;
          }
        },
        {
          key: "fromTopLeftWidthAndHeight",
          value: function fromTopLeftWidthAndHeight(top, left, width, height) {
            var bottom = top + height, right = left + width, bounds = new Bounds2(top, left, right, bottom);
            return bounds;
          }
        }
      ]);
      return Bounds2;
    }();
  });

  // node_modules/easy/lib/constants.js
  var require_constants = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get BLOCK() {
        return BLOCK;
      },
      get BODY() {
        return BODY;
      },
      get BOOLEAN() {
        return BOOLEAN;
      },
      get CLASS() {
        return CLASS;
      },
      get CLASS_NAME() {
        return CLASS_NAME;
      },
      get DEFAULT_PROPERTIES() {
        return DEFAULT_PROPERTIES;
      },
      get DISABLED() {
        return DISABLED;
      },
      get DISPLAY() {
        return DISPLAY;
      },
      get EMPTY_STRING() {
        return EMPTY_STRING;
      },
      get FOR() {
        return FOR;
      },
      get FUNCTION() {
        return FUNCTION;
      },
      get HEIGHT() {
        return HEIGHT;
      },
      get HTML_FOR() {
        return HTML_FOR;
      },
      get IGNORED_PROPERTIES() {
        return IGNORED_PROPERTIES;
      },
      get NONE() {
        return NONE;
      },
      get OBJECT() {
        return OBJECT;
      },
      get SPACE() {
        return SPACE;
      },
      get STRING() {
        return STRING;
      },
      get SVG_NAMESPACE_URI() {
        return SVG_NAMESPACE_URI;
      },
      get UNDEFINED() {
        return UNDEFINED;
      },
      get WIDTH() {
        return WIDTH;
      },
      get WILDCARD() {
        return WILDCARD;
      }
    });
    var FOR = "for";
    var BODY = "body";
    var NONE = "none";
    var SPACE = " ";
    var CLASS = "class";
    var WIDTH = "width";
    var BLOCK = "block";
    var HEIGHT = "height";
    var OBJECT = "object";
    var STRING = "string";
    var DISPLAY = "display";
    var BOOLEAN = "boolean";
    var DISABLED = "disabled";
    var FUNCTION = "function";
    var WILDCARD = "*";
    var HTML_FOR = "htmlFor";
    var UNDEFINED = "undefined";
    var CLASS_NAME = "className";
    var EMPTY_STRING = "";
    var SVG_NAMESPACE_URI = "http://www.w3.org/2000/svg";
    var DEFAULT_PROPERTIES = "defaultProperties";
    var IGNORED_PROPERTIES = "ignoredProperties";
  });

  // node_modules/easy/lib/utilities/object.js
  var require_object = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get combine() {
        return combine;
      },
      get prune() {
        return prune;
      }
    });
    var _constants = require_constants();
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _object_spread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
          ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
          }));
        }
        ownKeys.forEach(function(key) {
          _define_property(target, key, source[key]);
        });
      }
      return target;
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function combine(target) {
      var source = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      target = _object_spread({}, target);
      var names = Object.keys(source);
      names.forEach(function(name) {
        var targetValue = target[name], sourceValue = source[name], targetHasOwnProperty = target.hasOwnProperty(name);
        target[name] = targetHasOwnProperty ? combineValues(targetValue, sourceValue) : sourceValue;
      });
      return target;
    }
    function prune(target) {
      var names = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
      target = _object_spread({}, target);
      names.forEach(function(name) {
        var targetHasOwnProperty = target.hasOwnProperty(name);
        if (targetHasOwnProperty) {
          delete target[name];
        }
      });
      return target;
    }
    function combineValues(targetValue, sourceValue) {
      var targetValueBoolean = isValueBoolean(targetValue), sourceValueBoolean = isValueBoolean(sourceValue), combinedValue = targetValueBoolean && sourceValueBoolean ? targetValue : "".concat(targetValue, " ").concat(sourceValue);
      return combinedValue;
    }
    function isValueBoolean(value) {
      var valueBoolean = (typeof value === "undefined" ? "undefined" : _type_of(value)) === _constants.BOOLEAN;
      return valueBoolean;
    }
  });

  // node_modules/easy/lib/utilities/array.js
  var require_array = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get augment() {
        return augment;
      },
      get first() {
        return first;
      },
      get flatten() {
        return flatten;
      },
      get guarantee() {
        return guarantee;
      },
      get push() {
        return push;
      }
    });
    function _array_like_to_array(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _array_without_holes(arr) {
      if (Array.isArray(arr))
        return _array_like_to_array(arr);
    }
    function _instanceof(left, right) {
      if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
        return !!right[Symbol.hasInstance](left);
      } else {
        return left instanceof right;
      }
    }
    function _iterable_to_array(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _non_iterable_spread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _to_consumable_array(arr) {
      return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
    }
    function _unsupported_iterable_to_array(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _array_like_to_array(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _array_like_to_array(o, minLen);
    }
    function first(array) {
      return array[0];
    }
    function push(array1, array2) {
      Array.prototype.push.apply(array1, array2);
    }
    function augment(array1, array2, test) {
      array1 = _to_consumable_array(array1);
      array2.forEach(function(element, index) {
        var passed = test(element, index);
        if (passed) {
          array1.push(element);
        }
      });
      return array1;
    }
    function flatten(array) {
      return array.reduce(function(array2, element) {
        array2 = array2.concat(element);
        return array2;
      }, []);
    }
    function guarantee(arrayOrElement) {
      arrayOrElement = arrayOrElement || [];
      return _instanceof(arrayOrElement, Array) ? arrayOrElement : [
        arrayOrElement
      ];
    }
  });

  // node_modules/easy/lib/utilities/string.js
  var require_string = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "camelCaseToSnakeCase", {
      enumerable: true,
      get: function() {
        return camelCaseToSnakeCase;
      }
    });
    function camelCaseToSnakeCase(string) {
      return string.replace(/([A-Z]+)/g, function(match, characters) {
        var upperCaseCharacters = characters.toLowerCase(), snakeCaseCharacters = "-".concat(upperCaseCharacters);
        return snakeCaseCharacters;
      });
    }
  });

  // node_modules/easy/lib/utilities/name.js
  var require_name = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get isHTMLAttributeName() {
        return isHTMLAttributeName;
      },
      get isSVGAttributeName() {
        return isSVGAttributeName;
      },
      get isSVGTagName() {
        return isSVGTagName;
      }
    });
    function isSVGTagName(tagName) {
      return svgTagNames.includes(tagName);
    }
    function isSVGAttributeName(attributeName) {
      return svgAttributeNames.includes(attributeName);
    }
    function isHTMLAttributeName(attributeName) {
      return htmlAttributeNames.includes(attributeName);
    }
    var svgTagNames = [
      "altGlyph",
      "animate",
      "animateColor",
      "animateMotion",
      "animateTransform",
      "animation",
      "audio",
      "circle",
      "clipPath",
      "color-profile",
      "cursor",
      "defs",
      "desc",
      "discard",
      "ellipse",
      "feBlend",
      "feColorMatrix",
      "feComponentTransfer",
      "feComposite",
      "feConvolveMatrix",
      "feDiffuseLighting",
      "feDisplacementMap",
      "feDistantLight",
      "feDropShadow",
      "feFlood",
      "feFuncA",
      "feFuncB",
      "feFuncG",
      "feFuncR",
      "feGaussianBlur",
      "feImage",
      "feMerge",
      "feMergeNode",
      "feMorphology",
      "feOffset",
      "fePointLight",
      "feSpecularLighting",
      "feSpotLight",
      "feTile",
      "feTurbulence",
      "filter",
      "font",
      "font-face",
      "font-face-format",
      "font-face-name",
      "font-face-uri",
      "foreignObject",
      "g",
      "glyph",
      "glyphRef",
      "handler",
      "hatch",
      "hatchpath",
      "hkern",
      "image",
      "line",
      "linearGradient",
      "listener",
      "marker",
      "mask",
      "mesh",
      "meshgradient",
      "meshpatch",
      "meshrow",
      "metadata",
      "missing-glyph",
      "mpath",
      "path",
      "pattern",
      "polygon",
      "polyline",
      "prefetch",
      "radialGradient",
      "rect",
      "script",
      "set",
      "solidcolor",
      "stop",
      "style",
      "svg",
      "switch",
      "symbol",
      "tbreak",
      "text",
      "textArea",
      "textPath",
      "title",
      "tref",
      "tspan",
      "unknown",
      "use",
      "video",
      "view",
      "vkern"
    ];
    var svgAttributeNames = [
      "accent-height",
      "accumulate",
      "additive",
      "alignment-baseline",
      "alphabetic",
      "amplitude",
      "arabic-form",
      "ascent",
      "attributeName",
      "attributeType",
      "azimuth",
      "bandwidth",
      "baseFrequency",
      "baseProfile",
      "baseline-shift",
      "bbox",
      "begin",
      "bias",
      "by",
      "calcMode",
      "cap-height",
      "clip",
      "className",
      "clip-path",
      "clip-rule",
      "clipPathUnits",
      "color",
      "color-interpolation",
      "color-interpolation-filters",
      "color-profile",
      "color-rendering",
      "contentScriptType",
      "contentStyleType",
      "crossorigin",
      "cursor",
      "cx",
      "cy",
      "d",
      "defaultAction",
      "descent",
      "diffuseConstant",
      "direction",
      "display",
      "divisor",
      "dominant-baseline",
      "download",
      "dur",
      "dx",
      "dy",
      "edgeMode",
      "editable",
      "elevation",
      "enable-background",
      "end",
      "event",
      "exponent",
      "externalResourcesRequired",
      "fill",
      "fill-opacity",
      "fill-rule",
      "filter",
      "filterRes",
      "filterUnits",
      "flood-color",
      "flood-opacity",
      "focusHighlight",
      "focusable",
      "font-family",
      "font-size",
      "font-size-adjust",
      "font-stretch",
      "font-style",
      "font-variant",
      "font-weight",
      "format",
      "fr",
      "from",
      "fx",
      "fy",
      "g1",
      "g2",
      "glyph-name",
      "glyph-orientation-horizontal",
      "glyph-orientation-vertical",
      "glyphRef",
      "gradientTransform",
      "gradientUnits",
      "handler",
      "hanging",
      "hatchContentUnits",
      "hatchUnits",
      "height",
      "horiz-adv-x",
      "horiz-origin-x",
      "horiz-origin-y",
      "href",
      "hreflang",
      "id",
      "ideographic",
      "image-rendering",
      "in",
      "in2",
      "initialVisibility",
      "intercept",
      "k",
      "k1",
      "k2",
      "k3",
      "k4",
      "kernelMatrix",
      "kernelUnitLength",
      "kerning",
      "keyPoints",
      "keySplines",
      "keyTimes",
      "lengthAdjust",
      "letter-spacing",
      "lighting-color",
      "limitingConeAngle",
      "local",
      "marker-end",
      "marker-mid",
      "marker-start",
      "markerHeight",
      "markerUnits",
      "markerWidth",
      "mask",
      "maskContentUnits",
      "maskUnits",
      "mathematical",
      "max",
      "media",
      "mediaCharacterEncoding",
      "mediaContentEncodings",
      "mediaSize",
      "mediaTime",
      "method",
      "min",
      "mode",
      "name",
      "nav-down",
      "nav-down-left",
      "nav-down-right",
      "nav-left",
      "nav-next",
      "nav-prev",
      "nav-right",
      "nav-up",
      "nav-up-left",
      "nav-up-right",
      "numOctaves",
      "observer",
      "offset",
      "opacity",
      "operator",
      "order",
      "orient",
      "orientation",
      "origin",
      "overflow",
      "overlay",
      "overline-position",
      "overline-thickness",
      "panose-1",
      "path",
      "pathLength",
      "patternContentUnits",
      "patternTransform",
      "patternUnits",
      "phase",
      "pitch",
      "playbackOrder",
      "playbackorder",
      "pointer-events",
      "points",
      "pointsAtX",
      "pointsAtY",
      "pointsAtZ",
      "preserveAlpha",
      "preserveAspectRatio",
      "primitiveUnits",
      "propagate",
      "r",
      "radius",
      "refX",
      "refY",
      "rendering-intent",
      "repeatCount",
      "repeatDur",
      "requiredExtensions",
      "requiredFeatures",
      "requiredFonts",
      "requiredFormats",
      "restart",
      "result",
      "rotate",
      "rx",
      "ry",
      "scale",
      "seed",
      "shape-rendering",
      "side",
      "slope",
      "snapshotTime",
      "spacing",
      "specularConstant",
      "specularExponent",
      "spreadMethod",
      "src",
      "startOffset",
      "stdDeviation",
      "stemh",
      "stemv",
      "stitchTiles",
      "stop-color",
      "stop-opacity",
      "strikethrough-position",
      "strikethrough-thickness",
      "string",
      "stroke",
      "stroke-dasharray",
      "stroke-dashoffset",
      "stroke-linecap",
      "stroke-linejoin",
      "stroke-miterlimit",
      "stroke-opacity",
      "stroke-width",
      "style",
      "surfaceScale",
      "syncBehavior",
      "syncBehaviorDefault",
      "syncMaster",
      "syncTolerance",
      "syncToleranceDefault",
      "systemLanguage",
      "tableValues",
      "target",
      "targetX",
      "targetY",
      "text-anchor",
      "text-decoration",
      "text-rendering",
      "textLength",
      "timelineBegin",
      "timelinebegin",
      "title",
      "to",
      "transform",
      "transformBehavior",
      "type",
      "u1",
      "u2",
      "underline-position",
      "underline-thickness",
      "unicode",
      "unicode-bidi",
      "unicode-range",
      "units-per-em",
      "v-alphabetic",
      "v-hanging",
      "v-ideographic",
      "v-mathematical",
      "values",
      "version",
      "vert-adv-y",
      "vert-origin-x",
      "vert-origin-y",
      "viewBox",
      "viewTarget",
      "visibility",
      "width",
      "widths",
      "word-spacing",
      "writing-mode",
      "x",
      "x-height",
      "x1",
      "x2",
      "xChannelSelector",
      "y",
      "y1",
      "y2",
      "yChannelSelector",
      "z",
      "zoomAndPan"
    ];
    var htmlAttributeNames = [
      "accept",
      "acceptCharset",
      "accessKey",
      "action",
      "allow",
      "allowFullScreen",
      "allowTransparency",
      "alt",
      "async",
      "autoComplete",
      "autoFocus",
      "autoPlay",
      "capture",
      "cellPadding",
      "cellSpacing",
      "challenge",
      "charSet",
      "checked",
      "cite",
      "classID",
      "className",
      "colSpan",
      "cols",
      "content",
      "contentEditable",
      "contextMenu",
      "controls",
      "coords",
      "crossOrigin",
      "data",
      "dateTime",
      "default",
      "defer",
      "dir",
      "disabled",
      "download",
      "draggable",
      "encType",
      "form",
      "formAction",
      "formEncType",
      "formMethod",
      "formNoValidate",
      "formTarget",
      "frameBorder",
      "headers",
      "height",
      "hidden",
      "high",
      "href",
      "hrefLang",
      "htmlFor",
      "httpEquiv",
      "icon",
      "id",
      "inputMode",
      "integrity",
      "is",
      "keyParams",
      "keyType",
      "kind",
      "label",
      "lang",
      "list",
      "loop",
      "low",
      "manifest",
      "marginHeight",
      "marginWidth",
      "max",
      "maxLength",
      "media",
      "mediaGroup",
      "method",
      "min",
      "minLength",
      "multiple",
      "muted",
      "name",
      "noValidate",
      "nonce",
      "open",
      "optimum",
      "pattern",
      "placeholder",
      "poster",
      "preload",
      "profile",
      "radioGroup",
      "readOnly",
      "rel",
      "required",
      "reversed",
      "role",
      "rowSpan",
      "rows",
      "sandbox",
      "scope",
      "scoped",
      "scrolling",
      "seamless",
      "selected",
      "shape",
      "size",
      "sizes",
      "span",
      "spellCheck",
      "src",
      "srcDoc",
      "srcLang",
      "srcSet",
      "start",
      "step",
      "style",
      "summary",
      "tabIndex",
      "target",
      "title",
      "type",
      "useMap",
      "value",
      "width",
      "wmode",
      "wrap"
    ];
  });

  // node_modules/easy/lib/utilities/element.js
  var require_element = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get constructElement() {
        return constructElement;
      },
      get default() {
        return _default;
      },
      get destroyElement() {
        return destroyElement;
      },
      get mountElement() {
        return mountElement;
      },
      get unmountElement() {
        return unmountElement;
      }
    });
    function _array_like_to_array(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _array_without_holes(arr) {
      if (Array.isArray(arr))
        return _array_like_to_array(arr);
    }
    function _iterable_to_array(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _non_iterable_spread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _to_consumable_array(arr) {
      return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
    }
    function _unsupported_iterable_to_array(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _array_like_to_array(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _array_like_to_array(o, minLen);
    }
    function constructElement(element, domElement) {
      element.domElement = domElement;
      domElement.__element__ = element;
    }
    function destroyElement(element) {
      var descendantElements = element.getDescendantElements(), elements = [
        element
      ].concat(_to_consumable_array(descendantElements));
      elements.forEach(function(element2) {
        var domElement = element2.getDOMElement();
        delete element2.domElement;
        delete domElement.__element__;
      });
    }
    function mountElement(element) {
      var descendantElements = element.getDescendantElements(), elements = [
        element
      ].concat(_to_consumable_array(descendantElements));
      elements.reverse();
      elements.forEach(function(element2) {
        element2.didMount && element2.didMount();
      });
    }
    function unmountElement(element) {
      var descendantElements = element.getDescendantElements(), elements = [
        element
      ].concat(_to_consumable_array(descendantElements));
      elements.forEach(function(element2) {
        element2.willUnmount && element2.willUnmount();
      });
    }
    var _default = {
      constructElement,
      destroyElement,
      mountElement,
      unmountElement
    };
  });

  // node_modules/easy/lib/utilities/dom.js
  var require_dom = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get ascendantDOMNodesFromDOMNode() {
        return ascendantDOMNodesFromDOMNode;
      },
      get descendantDOMNodesFromDOMNode() {
        return descendantDOMNodesFromDOMNode;
      },
      get domNodeMatchesSelector() {
        return domNodeMatchesSelector;
      },
      get elementsFromDOMElements() {
        return elementsFromDOMElements;
      },
      get filterDOMNodes() {
        return filterDOMNodes;
      },
      get filterDOMNodesBySelector() {
        return filterDOMNodesBySelector;
      }
    });
    var _array = require_array();
    var _constants = require_constants();
    function elementsFromDOMElements(domElements) {
      var domElementsWithElements = filterDOMNodes(domElements, function(domElement) {
        if (domElement.__element__) {
          return true;
        }
      }), elements = domElementsWithElements.map(function(domElement) {
        var element = domElement.__element__;
        return element;
      });
      return elements;
    }
    function ascendantDOMNodesFromDOMNode(domNode, height) {
      var ascendantDOMNodes = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      if (height > 0) {
        var parentDOMNode = domNode.parentElement;
        if (parentDOMNode !== null) {
          ascendantDOMNodes.push(parentDOMNode);
          height--;
          ascendantDOMNodesFromDOMNode(parentDOMNode, height, ascendantDOMNodes);
        }
      }
      return ascendantDOMNodes;
    }
    function descendantDOMNodesFromDOMNode(domNode, depth) {
      var descendantDOMNodes = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      if (depth > 0) {
        var childDOMNodes = domNode.childNodes;
        (0, _array.push)(descendantDOMNodes, childDOMNodes);
        depth--;
        childDOMNodes.forEach(function(childDOMNode) {
          descendantDOMNodesFromDOMNode(childDOMNode, depth, descendantDOMNodes);
        });
      }
      return descendantDOMNodes;
    }
    function filterDOMNodesBySelector(domNodes, selector) {
      var filteredDOMNodes = filterDOMNodes(domNodes, function(domNode) {
        if (domNodeMatchesSelector(domNode, selector)) {
          return true;
        }
      });
      return filteredDOMNodes;
    }
    function domNodeMatchesSelector(domNode, selector) {
      var domNodeType = domNode.nodeType;
      switch (domNodeType) {
        case Node.ELEMENT_NODE: {
          var domElement = domNode;
          return domElement.matches(selector);
        }
        case Node.TEXT_NODE: {
          if (selector === _constants.WILDCARD) {
            return true;
          }
        }
      }
      return false;
    }
    function filterDOMNodes(domNodes, test) {
      var filteredDOMNodes = [], domNodesLength = domNodes.length;
      for (var index = 0; index < domNodesLength; index++) {
        var domNode = domNodes[index], result = test(domNode);
        if (result) {
          filteredDOMNodes.push(domNode);
        }
      }
      return filteredDOMNodes;
    }
  });

  // node_modules/easy/lib/mixins/element.js
  var require_element2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return _default;
      },
      get getAscendantElements() {
        return getAscendantElements;
      },
      get getChildElements() {
        return getChildElements;
      },
      get getDescendantElements() {
        return getDescendantElements;
      },
      get getNextSiblingElement() {
        return getNextSiblingElement;
      },
      get getParentElement() {
        return getParentElement;
      },
      get getPreviousSiblingElement() {
        return getPreviousSiblingElement;
      }
    });
    var _array = require_array();
    var _constants = require_constants();
    var _dom = require_dom();
    function getParentElement() {
      var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.WILDCARD;
      var parentElement = null;
      var parentDOMElement = this.domElement.parentElement;
      if (parentDOMElement !== null) {
        if (parentDOMElement.matches(selector)) {
          var parentDOMElements = [
            parentDOMElement
          ], parentElements = (0, _dom.elementsFromDOMElements)(parentDOMElements), firstParentElement = (0, _array.first)(parentElements);
          parentElement = firstParentElement || null;
        }
      }
      return parentElement;
    }
    function getChildElements() {
      var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.WILDCARD;
      var childDOMNodes = this.domElement.childNodes, childDOMElements = (0, _dom.filterDOMNodesBySelector)(childDOMNodes, selector), childElements = (0, _dom.elementsFromDOMElements)(childDOMElements);
      return childElements;
    }
    function getAscendantElements() {
      var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.WILDCARD, maximumHeight = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
      var height = maximumHeight, domNode = this.domElement, ascendantDOMNodes = (0, _dom.ascendantDOMNodesFromDOMNode)(domNode, height), ascendantDOMElements = (0, _dom.filterDOMNodesBySelector)(ascendantDOMNodes, selector), ascendantElements = (0, _dom.elementsFromDOMElements)(ascendantDOMElements);
      return ascendantElements;
    }
    function getDescendantElements() {
      var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.WILDCARD, maximumDepth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
      var depth = maximumDepth, domNode = this.domElement, descendantDOMNodes = (0, _dom.descendantDOMNodesFromDOMNode)(domNode, depth), descendantDOMElements = (0, _dom.filterDOMNodesBySelector)(descendantDOMNodes, selector), descendantElements = (0, _dom.elementsFromDOMElements)(descendantDOMElements);
      return descendantElements;
    }
    function getNextSiblingElement() {
      var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.WILDCARD;
      var nextSiblingElement = null;
      var nextSiblingDOMNode = this.domElement.nextSibling;
      if (nextSiblingDOMNode !== null && (0, _dom.domNodeMatchesSelector)(nextSiblingDOMNode, selector)) {
        nextSiblingElement = nextSiblingDOMNode.__element__ || null;
      }
      return nextSiblingElement;
    }
    function getPreviousSiblingElement() {
      var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.WILDCARD;
      var previousSiblingElement = null;
      var previousSiblingDOMNode = this.domElement.previousSibling;
      if (previousSiblingDOMNode !== null && (0, _dom.domNodeMatchesSelector)(previousSiblingDOMNode, selector)) {
        previousSiblingElement = previousSiblingDOMNode.__element__ || null;
      }
      return previousSiblingElement;
    }
    var elementMixins = {
      getParentElement,
      getChildElements,
      getAscendantElements,
      getDescendantElements,
      getNextSiblingElement,
      getPreviousSiblingElement
    };
    var _default = elementMixins;
  });

  // node_modules/easy/lib/textElement.js
  var require_textElement = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return TextElement;
      }
    });
    var _offset = /* @__PURE__ */ _interop_require_default(require_offset());
    var _bounds = /* @__PURE__ */ _interop_require_default(require_bounds());
    var _element = require_element();
    var _element1 = require_element2();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var TextElement = /* @__PURE__ */ function() {
      function TextElement2(text) {
        _class_call_check(this, TextElement2);
        var element = this, domElement = document.createTextNode(text);
        (0, _element.constructElement)(element, domElement);
      }
      _create_class(TextElement2, [
        {
          key: "getDOMElement",
          value: function getDOMElement() {
            return this.domElement;
          }
        },
        {
          key: "getOffset",
          value: function getOffset() {
            var offset = _offset.default.fromDOMElement(this.domElement);
            return offset;
          }
        },
        {
          key: "getBounds",
          value: function getBounds() {
            var bounds = _bounds.default.fromDOMElement(this.domElement);
            return bounds;
          }
        },
        {
          key: "getWidth",
          value: function getWidth() {
            return this.domElement.offsetWidth;
          }
        },
        {
          key: "getHeight",
          value: function getHeight() {
            return this.domElement.offsetHeight;
          }
        },
        {
          key: "getText",
          value: function getText() {
            var nodeValue = this.domElement.nodeValue, text = nodeValue;
            return text;
          }
        },
        {
          key: "setText",
          value: function setText(text) {
            var nodeValue = text;
            this.domElement.nodeValue = nodeValue;
          }
        },
        {
          key: "prependTo",
          value: function prependTo(parentElement) {
            parentElement.prepend(this);
          }
        },
        {
          key: "appendTo",
          value: function appendTo(parentElement) {
            parentElement.append(this);
          }
        },
        {
          key: "addTo",
          value: function addTo(parentElement) {
            parentElement.add(this);
          }
        },
        {
          key: "removeFrom",
          value: function removeFrom(parentElement) {
            parentElement.remove(this);
          }
        },
        {
          key: "insertBefore",
          value: function insertBefore(siblingElement) {
            var parentDOMNode = siblingElement.domElement.parentNode, siblingDOMElement = siblingElement.domElement;
            parentDOMNode.insertBefore(this.domElement, siblingDOMElement);
          }
        },
        {
          key: "insertAfter",
          value: function insertAfter(siblingElement) {
            var parentDOMNode = siblingElement.domElement.parentNode, siblingDOMElement = siblingElement.domElement;
            parentDOMNode.insertBefore(this.domElement, siblingDOMElement.nextSibling);
          }
        },
        {
          key: "remove",
          value: function remove() {
            this.domElement.remove();
          }
        },
        {
          key: "destroy",
          value: function destroy() {
            var element = this;
            (0, _element.destroyElement)(element);
          }
        }
      ]);
      return TextElement2;
    }();
    Object.assign(TextElement.prototype, {
      getParentElement: _element1.getParentElement,
      getAscendantElements: _element1.getAscendantElements,
      getNextSiblingElement: _element1.getNextSiblingElement,
      getPreviousSiblingElement: _element1.getPreviousSiblingElement
    });
  });

  // node_modules/easy/lib/utilities/elements.js
  var require_elements = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get removeFalseyElements() {
        return removeFalseyElements;
      },
      get replaceStringsWithTextElements() {
        return replaceStringsWithTextElements;
      }
    });
    var _textElement = /* @__PURE__ */ _interop_require_default(require_textElement());
    var _constants = require_constants();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function removeFalseyElements(elements) {
      elements = elements.reduce(function(elements2, element) {
        if (element) {
          elements2.push(element);
        }
        return elements2;
      }, []);
      return elements;
    }
    function replaceStringsWithTextElements(elements) {
      elements = elements.map(function(element) {
        if ((typeof element === "undefined" ? "undefined" : _type_of(element)) === _constants.STRING) {
          var text = element, textElement = new _textElement.default(text);
          element = textElement;
        }
        return element;
      });
      return elements;
    }
  });

  // node_modules/easy/lib/eventTypes.js
  var require_eventTypes = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get AUXCLICK_EVENT_TYPE() {
        return AUXCLICK_EVENT_TYPE;
      },
      get BLUR_EVENT_TYPE() {
        return BLUR_EVENT_TYPE;
      },
      get CHANGE_EVENT_TYPE() {
        return CHANGE_EVENT_TYPE;
      },
      get CLICK_EVENT_TYPE() {
        return CLICK_EVENT_TYPE;
      },
      get CONTEXTMENU_EVENT_TYPE() {
        return CONTEXTMENU_EVENT_TYPE;
      },
      get COPY_EVENT_TYPE() {
        return COPY_EVENT_TYPE;
      },
      get CUT_EVENT_TYPE() {
        return CUT_EVENT_TYPE;
      },
      get DBLCLICK_EVENT_TYPE() {
        return DBLCLICK_EVENT_TYPE;
      },
      get ERROR_EVENT_TYPE() {
        return ERROR_EVENT_TYPE;
      },
      get FOCUS_EVENT_TYPE() {
        return FOCUS_EVENT_TYPE;
      },
      get FULLSCREENCHANGE_EVENT_TYPE() {
        return FULLSCREENCHANGE_EVENT_TYPE;
      },
      get INPUT_EVENT_TYPE() {
        return INPUT_EVENT_TYPE;
      },
      get KEYDOWN_EVENT_TYPE() {
        return KEYDOWN_EVENT_TYPE;
      },
      get KEYUP_EVENT_TYPE() {
        return KEYUP_EVENT_TYPE;
      },
      get MOUSEDOWN_EVENT_TYPE() {
        return MOUSEDOWN_EVENT_TYPE;
      },
      get MOUSEMOVE_EVENT_TYPE() {
        return MOUSEMOVE_EVENT_TYPE;
      },
      get MOUSEOUT_EVENT_TYPE() {
        return MOUSEOUT_EVENT_TYPE;
      },
      get MOUSEOVER_EVENT_TYPE() {
        return MOUSEOVER_EVENT_TYPE;
      },
      get MOUSEUP_EVENT_TYPE() {
        return MOUSEUP_EVENT_TYPE;
      },
      get PASTE_EVENT_TYPE() {
        return PASTE_EVENT_TYPE;
      },
      get RESIZE_EVENT_TYPE() {
        return RESIZE_EVENT_TYPE;
      },
      get SCROLL_EVENT_TYPE() {
        return SCROLL_EVENT_TYPE;
      },
      get SELECTIONCHANGE_EVENT_TYPE() {
        return SELECTIONCHANGE_EVENT_TYPE;
      },
      get SELECT_EVENT_TYPE() {
        return SELECT_EVENT_TYPE;
      },
      get TOUCHEND_EVENT_TYPE() {
        return TOUCHEND_EVENT_TYPE;
      },
      get TOUCHMOVE_EVENT_TYPE() {
        return TOUCHMOVE_EVENT_TYPE;
      },
      get TOUCHSTART_EVENT_TYPE() {
        return TOUCHSTART_EVENT_TYPE;
      },
      get UNHANDLEDREJECTION_EVENT_TYPE() {
        return UNHANDLEDREJECTION_EVENT_TYPE;
      },
      get WHEEL_EVENT_TYPE() {
        return WHEEL_EVENT_TYPE;
      },
      get default() {
        return _default;
      }
    });
    var CUT_EVENT_TYPE = "cut";
    var COPY_EVENT_TYPE = "copy";
    var BLUR_EVENT_TYPE = "blur";
    var ERROR_EVENT_TYPE = "error";
    var PASTE_EVENT_TYPE = "paste";
    var WHEEL_EVENT_TYPE = "wheel";
    var INPUT_EVENT_TYPE = "input";
    var FOCUS_EVENT_TYPE = "focus";
    var CLICK_EVENT_TYPE = "click";
    var KEYUP_EVENT_TYPE = "keyup";
    var SELECT_EVENT_TYPE = "select";
    var CHANGE_EVENT_TYPE = "change";
    var RESIZE_EVENT_TYPE = "resize";
    var SCROLL_EVENT_TYPE = "scroll";
    var KEYDOWN_EVENT_TYPE = "keydown";
    var MOUSEUP_EVENT_TYPE = "mouseup";
    var AUXCLICK_EVENT_TYPE = "auxclick";
    var MOUSEOUT_EVENT_TYPE = "mouseout";
    var DBLCLICK_EVENT_TYPE = "dblclick";
    var TOUCHEND_EVENT_TYPE = "touchend";
    var TOUCHMOVE_EVENT_TYPE = "touchmove";
    var MOUSEOVER_EVENT_TYPE = "mouseover";
    var MOUSEDOWN_EVENT_TYPE = "mousedown";
    var MOUSEMOVE_EVENT_TYPE = "mousemove";
    var TOUCHSTART_EVENT_TYPE = "touchstart";
    var CONTEXTMENU_EVENT_TYPE = "contextmenu";
    var SELECTIONCHANGE_EVENT_TYPE = "selectionchange";
    var FULLSCREENCHANGE_EVENT_TYPE = "fullscreenchange";
    var UNHANDLEDREJECTION_EVENT_TYPE = "unhandledrejection";
    var _default = {
      CUT_EVENT_TYPE,
      COPY_EVENT_TYPE,
      BLUR_EVENT_TYPE,
      ERROR_EVENT_TYPE,
      PASTE_EVENT_TYPE,
      WHEEL_EVENT_TYPE,
      INPUT_EVENT_TYPE,
      FOCUS_EVENT_TYPE,
      CLICK_EVENT_TYPE,
      KEYUP_EVENT_TYPE,
      SELECT_EVENT_TYPE,
      CHANGE_EVENT_TYPE,
      RESIZE_EVENT_TYPE,
      SCROLL_EVENT_TYPE,
      KEYDOWN_EVENT_TYPE,
      MOUSEUP_EVENT_TYPE,
      AUXCLICK_EVENT_TYPE,
      MOUSEOUT_EVENT_TYPE,
      DBLCLICK_EVENT_TYPE,
      TOUCHEND_EVENT_TYPE,
      TOUCHMOVE_EVENT_TYPE,
      MOUSEOVER_EVENT_TYPE,
      MOUSEDOWN_EVENT_TYPE,
      MOUSEMOVE_EVENT_TYPE,
      TOUCHSTART_EVENT_TYPE,
      CONTEXTMENU_EVENT_TYPE,
      SELECTIONCHANGE_EVENT_TYPE,
      FULLSCREENCHANGE_EVENT_TYPE,
      UNHANDLEDREJECTION_EVENT_TYPE
    };
  });

  // node_modules/easy/lib/mixins/jsx.js
  var require_jsx = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _object = require_object();
    var _array = require_array();
    var _string = require_string();
    var _name = require_name();
    var _elements = require_elements();
    var _eventTypes = require_eventTypes();
    var _constants = require_constants();
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    var DOUBLE_CLICK_EVENT_TYPE = "doubleclick";
    var SELECTION_CHANGE_EVENT_TYPE = "selectionChange";
    var FULL_SCREEN_CHANGE_EVENT_TYPE = "fullScreenChange";
    function applyProperties(properties, defaultProperties, ignoredProperties) {
      var _this = this;
      this.properties = (0, _object.combine)(properties, defaultProperties);
      properties = (0, _object.prune)(this.properties, ignoredProperties);
      var namespaceURI = this.domElement.namespaceURI, svg = namespaceURI === _constants.SVG_NAMESPACE_URI, propertiesKeys = Object.keys(properties), names = propertiesKeys;
      names.forEach(function(name) {
        var value = properties[name], nameHandlerName = isNameHandlerName(name), nameCustomHandlerName = isNameCustomHandlerName(name);
        if (false) {
        } else if (nameHandlerName) {
          addHandler(_this, name, value);
        } else if (nameCustomHandlerName) {
          addCustomHandler(_this, name, value);
        } else {
          var nameAttributeName = isNameAttributeName(name, svg);
          if (nameAttributeName) {
            addAttribute(_this, name, value);
          }
        }
      });
      var childElements = childElementsFromElement(this) || properties.childElements, context = {};
      childElements.forEach(function(childElement) {
        updateContext(childElement, context);
        _this.add(childElement);
      });
      this.context = context;
    }
    function getProperties() {
      return this.properties;
    }
    function getContext() {
      return this.context;
    }
    function assignContext(names) {
      var _this = this;
      if (names === void 0) {
        names = Object.keys(this.context);
      }
      names.forEach(function(name) {
        var value = _this.context[name], propertyName = name, descriptor = {
          value
        };
        Object.defineProperty(_this, propertyName, descriptor);
        delete _this.context[name];
      });
    }
    var jsxMixins = {
      applyProperties,
      getProperties,
      getContext,
      assignContext
    };
    var _default = jsxMixins;
    function childElementsFromElement(element) {
      var childElements = null;
      if (_type_of(element.childElements) === _constants.FUNCTION) {
        childElements = element.childElements.call(element);
        childElements = (0, _array.guarantee)(childElements);
        childElements = (0, _elements.removeFalseyElements)(childElements);
        childElements = (0, _elements.replaceStringsWithTextElements)(childElements);
      }
      return childElements;
    }
    function updateContext(childElement, context) {
      var parentContext = _type_of(childElement.parentContext) === _constants.FUNCTION ? childElement.parentContext() : childElement.context;
      Object.assign(context, parentContext);
    }
    function addHandler(element, name, value) {
      var eventType = name.substring(2).toLowerCase();
      switch (eventType) {
        case DOUBLE_CLICK_EVENT_TYPE: {
          eventType = _eventTypes.DBLCLICK_EVENT_TYPE;
          break;
        }
        case SELECTION_CHANGE_EVENT_TYPE: {
          eventType = _eventTypes.SELECTIONCHANGE_EVENT_TYPE;
          break;
        }
        case FULL_SCREEN_CHANGE_EVENT_TYPE: {
          eventType = _eventTypes.FULLSCREENCHANGE_EVENT_TYPE;
          break;
        }
      }
      var handler = value;
      element.onEvent(eventType, handler);
    }
    function addCustomHandler(element, name, value) {
      var customEventType = (0, _string.camelCaseToSnakeCase)(name).replace(/on-custom-/, ""), customHandler = value;
      element.onCustomEvent(customEventType, customHandler);
    }
    function addAttribute(element, name, value) {
      if (name === _constants.CLASS_NAME) {
        name = _constants.CLASS;
      }
      if (name === _constants.HTML_FOR) {
        name = _constants.FOR;
      }
      if ((typeof value === "undefined" ? "undefined" : _type_of(value)) === _constants.OBJECT) {
        var keys = Object.keys(value);
        keys.forEach(function(key) {
          element.domElement[name][key] = value[key];
        });
      } else if ((typeof value === "undefined" ? "undefined" : _type_of(value)) === _constants.BOOLEAN) {
        if (value) {
          value = name;
          element.addAttribute(name, value);
        }
      } else {
        element.addAttribute(name, value);
      }
    }
    function isNameHandlerName(name) {
      var nameHandlerName = /^on(?!Custom)/.test(name);
      return nameHandlerName;
    }
    function isNameAttributeName(name, svg) {
      var nameAttributeName = svg ? (0, _name.isSVGAttributeName)(name) : (0, _name.isHTMLAttributeName)(name);
      return nameAttributeName;
    }
    function isNameCustomHandlerName(name) {
      var nameCustomHandlerName = /^onCustom/.test(name);
      return nameCustomHandlerName;
    }
  });

  // node_modules/easy/lib/mixins/key.js
  var require_key = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _eventTypes = require_eventTypes();
    function onKeyUp(keyUpHandler, element) {
      this.onEvent(_eventTypes.KEYUP_EVENT_TYPE, keyUpHandler, element);
    }
    function offKeyUp(keyUpHandler, element) {
      this.offEvent(_eventTypes.KEYUP_EVENT_TYPE, keyUpHandler, element);
    }
    function onKeyDown(keyDownHandler, element) {
      this.onEvent(_eventTypes.KEYDOWN_EVENT_TYPE, keyDownHandler, element);
    }
    function offKeyDown(keyDownHandler, element) {
      this.offEvent(_eventTypes.KEYDOWN_EVENT_TYPE, keyDownHandler, element);
    }
    var keyMixins = {
      onKeyUp,
      offKeyUp,
      onKeyDown,
      offKeyDown
    };
    var _default = keyMixins;
  });

  // node_modules/easy/lib/mixins/state.js
  var require_state = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    function getState() {
      return this.state;
    }
    function setState(state) {
      this.state = state;
    }
    function updateState(state) {
      this.state === void 0 ? this.state = state : Object.assign(this.state, state);
    }
    var stateMixins = {
      getState,
      setState,
      updateState
    };
    var _default = stateMixins;
  });

  // node_modules/easy/lib/mixins/event.js
  var require_event = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _constants = require_constants();
    var _eventTypes = require_eventTypes();
    function onEvent(eventTypes, handler) {
      var _this = this;
      var element = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this;
      eventTypes = eventTypes.split(_constants.SPACE);
      eventTypes.forEach(function(eventType) {
        if (eventType === _eventTypes.RESIZE_EVENT_TYPE) {
          var resizeEventListeners = _this.findEventListeners(_eventTypes.RESIZE_EVENT_TYPE), resizeEventListenersLength = resizeEventListeners.length;
          if (resizeEventListenersLength === 0) {
            _this.resizeObserver = new ResizeObserver(function(entries) {
              var resizeEventListeners2 = _this.findEventListeners(_eventTypes.RESIZE_EVENT_TYPE);
              resizeEventListeners2.forEach(function(resizeEventListener) {
                var event = null;
                resizeEventListener(event);
              });
            });
            _this.resizeObserver.observe(_this.domElement);
          }
          _this.addEventListener(eventType, handler, element);
        } else {
          var eventListener = _this.addEventListener(eventType, handler, element);
          _this.domElement.addEventListener(eventType, eventListener);
        }
      });
    }
    function offEvent(eventTypes, handler) {
      var _this = this;
      var element = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this;
      eventTypes = eventTypes.split(_constants.SPACE);
      eventTypes.forEach(function(eventType) {
        if (eventType === _eventTypes.RESIZE_EVENT_TYPE) {
          _this.removeEventListener(eventType, handler, element);
          var resizeEventListeners = _this.findEventListeners(_eventTypes.RESIZE_EVENT_TYPE), resizeEventListenersLength = resizeEventListeners.length;
          if (resizeEventListenersLength === 0) {
            _this.resizeObserver.unobserve(_this.domElement);
            delete _this.resizeObserver;
          }
        } else {
          var eventListener = _this.removeEventListener(eventType, handler, element);
          _this.domElement.removeEventListener(eventType, eventListener);
        }
      });
    }
    function addEventListener(eventType, handler, element) {
      var eventListener = this.createEventListener(eventType, handler, element);
      if (!this.eventListeners) {
        this.eventListeners = [];
      }
      this.eventListeners.push(eventListener);
      return eventListener;
    }
    function removeEventListener(eventType, handler, element) {
      var eventListener = this.findEventListener(eventType, handler, element), index = this.eventListeners.indexOf(eventListener), start = index, deleteCount = 1;
      this.eventListeners.splice(start, deleteCount);
      if (this.eventListeners.length === 0) {
        delete this.eventListeners;
      }
      return eventListener;
    }
    function findEventListener(eventType, handler, element) {
      var eventListener = this.eventListeners.find(function(eventListener2) {
        if (eventListener2.element === element && eventListener2.handler === handler && eventListener2.eventType === eventType) {
          return true;
        }
      });
      return eventListener;
    }
    function findEventListeners(eventType) {
      var eventListeners = [];
      if (this.eventListeners) {
        this.eventListeners.forEach(function(eventListener) {
          var found = eventListener.eventType === eventType;
          if (found) {
            eventListeners.push(eventListener);
          }
        });
      }
      return eventListeners;
    }
    function createEventListener(eventType, handler, element) {
      var _this = this;
      var eventListener;
      var handlerElement = element;
      eventListener = function(event) {
        var _$element = _this;
        handler.call(handlerElement, event, _$element);
      };
      Object.assign(eventListener, {
        element,
        handler,
        eventType
      });
      return eventListener;
    }
    var eventMixins = {
      onEvent,
      offEvent,
      addEventListener,
      removeEventListener,
      findEventListener,
      findEventListeners,
      createEventListener
    };
    var _default = eventMixins;
  });

  // node_modules/easy/lib/mixins/mouse.js
  var require_mouse = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _eventTypes = require_eventTypes();
    function onMouseUp(mouseUpHandler, element) {
      this.onEvent(_eventTypes.MOUSEUP_EVENT_TYPE, mouseUpHandler, element);
    }
    function offMouseUp(mouseUpHandler, element) {
      this.offEvent(_eventTypes.MOUSEUP_EVENT_TYPE, mouseUpHandler, element);
    }
    function onMouseOut(mouseOutHandler, element) {
      this.onEvent(_eventTypes.MOUSEOUT_EVENT_TYPE, mouseOutHandler, element);
    }
    function offMouseOut(mouseOutHandler, element) {
      this.offEvent(_eventTypes.MOUSEOUT_EVENT_TYPE, mouseOutHandler, element);
    }
    function onMouseDown(mouseDownHandler, element) {
      this.onEvent(_eventTypes.MOUSEDOWN_EVENT_TYPE, mouseDownHandler, element);
    }
    function offMouseDown(mouseDownHandler, element) {
      this.offEvent(_eventTypes.MOUSEDOWN_EVENT_TYPE, mouseDownHandler, element);
    }
    function onMouseOver(mouseOverHandler, element) {
      this.onEvent(_eventTypes.MOUSEOVER_EVENT_TYPE, mouseOverHandler, element);
    }
    function offMouseOver(mouseOverHandler, element) {
      this.offEvent(_eventTypes.MOUSEOVER_EVENT_TYPE, mouseOverHandler, element);
    }
    function onMouseMove(mouseMoveHandler, element) {
      this.onEvent(_eventTypes.MOUSEMOVE_EVENT_TYPE, mouseMoveHandler, element);
    }
    function offMouseMove(mouseMoveHandler, element) {
      this.offEvent(_eventTypes.MOUSEMOVE_EVENT_TYPE, mouseMoveHandler, element);
    }
    var mouseMixins = {
      onMouseUp,
      offMouseUp,
      onMouseOut,
      offMouseOut,
      onMouseDown,
      offMouseDown,
      onMouseOver,
      offMouseOver,
      onMouseMove,
      offMouseMove
    };
    var _default = mouseMixins;
  });

  // node_modules/easy/lib/mixins/click.js
  var require_click = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _eventTypes = require_eventTypes();
    function onClick(clickHandler, element) {
      this.onEvent(_eventTypes.CLICK_EVENT_TYPE, clickHandler, element);
    }
    function offClick(clickHandler, element) {
      this.offEvent(_eventTypes.CLICK_EVENT_TYPE, clickHandler, element);
    }
    function onAuxClick(auxClickHandler, element) {
      this.onEvent(_eventTypes.AUXCLICK_EVENT_TYPE, auxClickHandler, element);
    }
    function offAuxClick(auxClickHandler, element) {
      this.offEvent(_eventTypes.AUXCLICK_EVENT_TYPE, auxClickHandler, element);
    }
    function onDoubleClick(doubleClickHandler, element) {
      this.onEvent(_eventTypes.DBLCLICK_EVENT_TYPE, doubleClickHandler, element);
    }
    function offDoubleClick(doubleClickHandler, element) {
      this.offEvent(_eventTypes.DBLCLICK_EVENT_TYPE, doubleClickHandler, element);
    }
    var clickMixins = {
      onClick,
      offClick,
      onAuxClick,
      offAuxClick,
      onDoubleClick,
      offDoubleClick
    };
    var _default = clickMixins;
  });

  // node_modules/easy/lib/mixins/touch.js
  var require_touch = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _eventTypes = require_eventTypes();
    function onTouchStart(touchStartHandler) {
      this.onEvent(_eventTypes.TOUCHSTART_EVENT_TYPE, touchStartHandler);
    }
    function offTouchStart(touchStartHandler) {
      this.offEvent(_eventTypes.TOUCHSTART_EVENT_TYPE, touchStartHandler);
    }
    function onTouchMove(touchStartHandler) {
      this.onEvent(_eventTypes.TOUCHMOVE_EVENT_TYPE, touchStartHandler);
    }
    function offTouchMove(touchStartHandler) {
      this.offEvent(_eventTypes.TOUCHMOVE_EVENT_TYPE, touchStartHandler);
    }
    function onTouchEnd(touchStartHandler) {
      this.onEvent(_eventTypes.TOUCHEND_EVENT_TYPE, touchStartHandler);
    }
    function offTouchEnd(touchStartHandler) {
      this.offEvent(_eventTypes.TOUCHEND_EVENT_TYPE, touchStartHandler);
    }
    var clickMixins = {
      onTouchStart,
      offTouchStart,
      onTouchMove,
      offTouchMove,
      onTouchEnd,
      offTouchEnd
    };
    var _default = clickMixins;
  });

  // node_modules/easy/lib/mixins/scroll.js
  var require_scroll = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return _default;
      },
      get offScroll() {
        return offScroll;
      },
      get onScroll() {
        return onScroll;
      }
    });
    var _eventTypes = require_eventTypes();
    function onScroll(scrollHandler, element) {
      this.onEvent(_eventTypes.SCROLL_EVENT_TYPE, scrollHandler, element);
    }
    function offScroll(scrollHandler, element) {
      this.offEvent(_eventTypes.SCROLL_EVENT_TYPE, scrollHandler, element);
    }
    function scrollTo(scrollTop, scrollLeft) {
      this.domElement.scrollTo(scrollLeft, scrollTop);
    }
    function getScrollTop() {
      return this.domElement.scrollTop;
    }
    function getScrollLeft() {
      return this.domElement.scrollLeft;
    }
    function setScrollTop(scrollTop) {
      this.domElement.scrollTop = scrollTop;
    }
    function setScrollLeft(scrollLeft) {
      this.domElement.scrollLeft = scrollLeft;
    }
    var scrollMixins = {
      onScroll,
      offScroll,
      scrollTo,
      getScrollTop,
      getScrollLeft,
      setScrollTop,
      setScrollLeft
    };
    var _default = scrollMixins;
  });

  // node_modules/easy/lib/mixins/resize.js
  var require_resize = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _eventTypes = require_eventTypes();
    function onResize(resizeHandler, element) {
      this.onEvent(_eventTypes.RESIZE_EVENT_TYPE, resizeHandler, element);
    }
    function offResize(resizeHandler, element) {
      this.offEvent(_eventTypes.RESIZE_EVENT_TYPE, resizeHandler, element);
    }
    var resizeMixins = {
      onResize,
      offResize
    };
    var _default = resizeMixins;
  });

  // node_modules/easy/lib/mixins/fullScreen.js
  var require_fullScreen = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _eventTypes = require_eventTypes();
    function onFullScreenChange(fullScreenChangeHandler, element) {
      this.onEvent(_eventTypes.FULLSCREENCHANGE_EVENT_TYPE, fullScreenChangeHandler, element);
    }
    function offFullScreenChange(fullScreenChangeHandler, element) {
      this.offEvent(_eventTypes.FULLSCREENCHANGE_EVENT_TYPE, fullScreenChangeHandler, element);
    }
    function requestFullScreen(errorHandler) {
      var domElement = this.getDOMElement();
      domElement.requestFullscreen().catch(errorHandler);
    }
    function exitFullScreen() {
      document.exitFullscreen();
    }
    function isFullScreen() {
      var fullscreenElement = document.fullscreenElement, fullScreen = fullscreenElement !== null;
      return fullScreen;
    }
    var fullscreenMixins = {
      onFullScreenChange,
      offFullScreenChange,
      requestFullScreen,
      exitFullScreen,
      isFullScreen
    };
    var _default = fullscreenMixins;
  });

  // node_modules/easy/lib/utilities/async.js
  var require_async = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "forEach", {
      enumerable: true,
      get: function() {
        return forEach;
      }
    });
    function forEach(array, operation, done, context) {
      var length = array.length;
      var count = -1;
      function next() {
        count++;
        var terminate = count === length;
        if (terminate) {
          done();
        } else {
          var index = count, element = array[index];
          operation(element, next, done, context, index);
        }
      }
      next();
    }
  });

  // node_modules/easy/lib/mixins/customEvent.js
  var require_customEvent = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _constants = require_constants();
    var _async = require_async();
    function _array_like_to_array(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _array_without_holes(arr) {
      if (Array.isArray(arr))
        return _array_like_to_array(arr);
    }
    function _iterable_to_array(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _non_iterable_spread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _to_consumable_array(arr) {
      return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
    }
    function _unsupported_iterable_to_array(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _array_like_to_array(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _array_like_to_array(o, minLen);
    }
    function onCustomEvent(customEventTypes, customHandler) {
      var _this = this;
      var element = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this;
      customEventTypes = customEventTypes.split(_constants.SPACE);
      customEventTypes.forEach(function(customEventType) {
        _this.addCustomEventListener(customEventType, customHandler, element);
      });
    }
    function offCustomEvent(customEventTypes, customHandler) {
      var _this = this;
      var element = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this;
      customEventTypes = customEventTypes.split(_constants.SPACE);
      customEventTypes.forEach(function(customEventType) {
        _this.removeCustomEventListener(customEventType, customHandler, element);
      });
    }
    function callCustomHandlers(customEventType) {
      for (var _len = arguments.length, remainingArguments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        remainingArguments[_key - 1] = arguments[_key];
      }
      var customEventListeners = this.findCustomEventListeners(customEventType);
      customEventListeners.forEach(function(customEventListener) {
        var _customHandler;
        var customHandler = customEventListener.customHandler, customHandlerElement = customEventListener.element;
        (_customHandler = customHandler).call.apply(_customHandler, [
          customHandlerElement
        ].concat(_to_consumable_array(remainingArguments)));
      });
    }
    function callCustomHandlersAsync(customEventType) {
      for (var _len = arguments.length, remainingArguments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        remainingArguments[_key - 1] = arguments[_key];
      }
      var customEventListeners = this.findCustomEventListeners(customEventType), done = remainingArguments.pop();
      (0, _async.forEach)(customEventListeners, function(customEventListener, next) {
        var _customHandler;
        var customHandler = customEventListener.customHandler, customHandlerElement = customEventListener.element, done2 = next;
        (_customHandler = customHandler).call.apply(_customHandler, [
          customHandlerElement
        ].concat(_to_consumable_array(remainingArguments), [
          done2
        ]));
      }, done);
    }
    function addCustomEventListener(customEventType, customHandler, element) {
      var customEventListener = this.createCustomEventListener(customEventType, customHandler, element);
      if (!this.customEventListeners) {
        this.customEventListeners = [];
      }
      this.customEventListeners.push(customEventListener);
      return customEventListener;
    }
    function removeCustomEventListener(customEventType, customHandler, element) {
      var customEventListener = this.findCustomEventListener(customEventType, customHandler, element), index = this.customEventListeners.indexOf(customEventListener), start = index, deleteCount = 1;
      this.customEventListeners.splice(start, deleteCount);
      if (this.customEventListeners.length === 0) {
        delete this.customEventListeners;
      }
      return customEventListener;
    }
    function findCustomEventListener(customEventType, customHandler, element) {
      var customEventListener = this.customEventListeners.find(function(customEventListener2) {
        if (customEventListener2.element === element && customEventListener2.customHandler === customHandler && customEventListener2.customEventType === customEventType) {
          return true;
        }
      });
      return customEventListener;
    }
    function findCustomEventListeners(customEventType) {
      var customEventListeners = [];
      if (this.customEventListeners) {
        this.customEventListeners.forEach(function(customEventListener) {
          var found = customEventListener.customEventType === customEventType;
          if (found) {
            customEventListeners.push(customEventListener);
          }
        });
      }
      return customEventListeners;
    }
    function createCustomEventListener(customEventType, customHandler, element) {
      var customEventListener;
      customEventListener = function() {
      };
      Object.assign(customEventListener, {
        element,
        customHandler,
        customEventType
      });
      return customEventListener;
    }
    var customEventMixins = {
      onCustomEvent,
      offCustomEvent,
      callCustomHandlers,
      callCustomHandlersAsync,
      addCustomEventListener,
      removeCustomEventListener,
      findCustomEventListener,
      findCustomEventListeners,
      createCustomEventListener
    };
    var _default = customEventMixins;
  });

  // node_modules/easy/lib/element.js
  var require_element3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Element;
      }
    });
    var _offset = /* @__PURE__ */ _interop_require_default(require_offset());
    var _bounds = /* @__PURE__ */ _interop_require_default(require_bounds());
    var _jsx = /* @__PURE__ */ _interop_require_default(require_jsx());
    var _key = /* @__PURE__ */ _interop_require_default(require_key());
    var _state = /* @__PURE__ */ _interop_require_default(require_state());
    var _event = /* @__PURE__ */ _interop_require_default(require_event());
    var _mouse = /* @__PURE__ */ _interop_require_default(require_mouse());
    var _click = /* @__PURE__ */ _interop_require_default(require_click());
    var _touch = /* @__PURE__ */ _interop_require_default(require_touch());
    var _scroll = /* @__PURE__ */ _interop_require_default(require_scroll());
    var _resize = /* @__PURE__ */ _interop_require_default(require_resize());
    var _element = /* @__PURE__ */ _interop_require_default(require_element2());
    var _fullScreen = /* @__PURE__ */ _interop_require_default(require_fullScreen());
    var _customEvent = /* @__PURE__ */ _interop_require_default(require_customEvent());
    var _object = require_object();
    var _name = require_name();
    var _array = require_array();
    var _element1 = require_element();
    var _constants = require_constants();
    function _array_like_to_array(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _array_without_holes(arr) {
      if (Array.isArray(arr))
        return _array_like_to_array(arr);
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _iterable_to_array(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _non_iterable_spread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _to_consumable_array(arr) {
      return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _unsupported_iterable_to_array(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _array_like_to_array(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _array_like_to_array(o, minLen);
    }
    var Element = /* @__PURE__ */ function() {
      function Element2(selector) {
        _class_call_check(this, Element2);
        if (selector !== null) {
          var element = this, domElement = document.querySelector(selector);
          (0, _element1.constructElement)(element, domElement);
        }
      }
      _create_class(Element2, [
        {
          key: "getDOMElement",
          value: function getDOMElement() {
            return this.domElement;
          }
        },
        {
          key: "getOffset",
          value: function getOffset() {
            var offset = _offset.default.fromDOMElement(this.domElement);
            return offset;
          }
        },
        {
          key: "getBounds",
          value: function getBounds() {
            var bounds = _bounds.default.fromDOMElement(this.domElement);
            return bounds;
          }
        },
        {
          key: "getWidth",
          value: function getWidth() {
            return this.domElement.offsetWidth;
          }
        },
        {
          key: "getHeight",
          value: function getHeight() {
            return this.domElement.offsetHeight;
          }
        },
        {
          key: "getInnerWidth",
          value: function getInnerWidth() {
            return this.domElement.clientWidth;
          }
        },
        {
          key: "getInnerHeight",
          value: function getInnerHeight() {
            return this.domElement.clientHeight;
          }
        },
        {
          key: "setWidth",
          value: function setWidth(width) {
            width = "".concat(width, "px");
            this.style(_constants.WIDTH, width);
          }
        },
        {
          key: "setHeight",
          value: function setHeight(height) {
            height = "".concat(height, "px");
            this.style(_constants.HEIGHT, height);
          }
        },
        {
          key: "hasAttribute",
          value: function hasAttribute(name) {
            return this.domElement.hasAttribute(name);
          }
        },
        {
          key: "getAttribute",
          value: function getAttribute(name) {
            return this.domElement.getAttribute(name);
          }
        },
        {
          key: "setAttribute",
          value: function setAttribute(name, value) {
            this.domElement.setAttribute(name, value);
          }
        },
        {
          key: "clearAttribute",
          value: function clearAttribute(name) {
            this.domElement.removeAttribute(name);
          }
        },
        {
          key: "addAttribute",
          value: function addAttribute(name, value) {
            this.setAttribute(name, value);
          }
        },
        {
          key: "removeAttribute",
          value: function removeAttribute(name) {
            this.clearAttribute(name);
          }
        },
        {
          key: "hasClass",
          value: function hasClass(className) {
            return this.domElement.classList.contains(className);
          }
        },
        {
          key: "setClass",
          value: function setClass(className) {
            this.domElement.className = className;
          }
        },
        {
          key: "addClass",
          value: function addClass(className) {
            this.domElement.classList.add(className);
          }
        },
        {
          key: "removeClass",
          value: function removeClass(className) {
            this.domElement.classList.remove(className);
          }
        },
        {
          key: "toggleClass",
          value: function toggleClass(className) {
            this.domElement.classList.toggle(className);
          }
        },
        {
          key: "removeAllClasses",
          value: function removeAllClasses() {
            this.domElement.className = _constants.EMPTY_STRING;
          }
        },
        {
          key: "addTo",
          value: function addTo(parentElement) {
            parentElement.add(this);
          }
        },
        {
          key: "appendTo",
          value: function appendTo(parentElement) {
            parentElement.append(this);
          }
        },
        {
          key: "prependTo",
          value: function prependTo(parentElement) {
            parentElement.prepend(this);
          }
        },
        {
          key: "removeFrom",
          value: function removeFrom(parentElement) {
            parentElement.remove(this);
          }
        },
        {
          key: "insert",
          value: function insert(element) {
            this.append(element);
          }
        },
        {
          key: "add",
          value: function add(element) {
            this.append(element);
          }
        },
        {
          key: "remove",
          value: function remove(element) {
            if (element) {
              element.remove();
              return;
            }
            this.domElement.remove();
          }
        },
        {
          key: "prepend",
          value: function prepend(element) {
            var domElement = element.domElement, referenceDOMElement = this.domElement.firstChild;
            this.domElement.insertBefore(domElement, referenceDOMElement);
          }
        },
        {
          key: "append",
          value: function append(element) {
            var domElement = element.domElement, referenceDOMElement = null;
            this.domElement.insertBefore(domElement, referenceDOMElement);
          }
        },
        {
          key: "insertBefore",
          value: function insertBefore(siblingElement) {
            var parentDOMNode = siblingElement.domElement.parentNode, referenceDOMElement = siblingElement.domElement;
            parentDOMNode.insertBefore(this.domElement, referenceDOMElement);
          }
        },
        {
          key: "insertAfter",
          value: function insertAfter(siblingElement) {
            var parentDOMNode = siblingElement.domElement.parentNode, referenceDOMElement = siblingElement.domElement.nextSibling;
            parentDOMNode.insertBefore(this.domElement, referenceDOMElement);
          }
        },
        {
          key: "mount",
          value: function mount(element) {
            this.add(element);
            (0, _element1.mountElement)(element);
          }
        },
        {
          key: "unmount",
          value: function unmount(element) {
            (0, _element1.unmountElement)(element);
            this.remove(element);
          }
        },
        {
          key: "mountBefore",
          value: function mountBefore(siblingElement) {
            this.insertBefore(siblingElement);
            var element = this;
            (0, _element1.mountElement)(element);
          }
        },
        {
          key: "mountAfter",
          value: function mountAfter(siblingElement) {
            this.insertAfter(siblingElement);
            var element = this;
            (0, _element1.mountElement)(element);
          }
        },
        {
          key: "show",
          value: function show() {
            var displayStyle = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.BLOCK;
            this.display(displayStyle);
          }
        },
        {
          key: "hide",
          value: function hide() {
            this.style(_constants.DISPLAY, _constants.NONE);
          }
        },
        {
          key: "display",
          value: function display(display) {
            this.style(_constants.DISPLAY, display);
          }
        },
        {
          key: "enable",
          value: function enable() {
            this.clearAttribute(_constants.DISABLED);
          }
        },
        {
          key: "disable",
          value: function disable() {
            this.setAttribute(_constants.DISABLED, _constants.DISABLED);
          }
        },
        {
          key: "isEnabled",
          value: function isEnabled() {
            var disabled = this.isDisabled(), enabled = !disabled;
            return enabled;
          }
        },
        {
          key: "isDisabled",
          value: function isDisabled() {
            var disabled = this.hasAttribute(_constants.DISABLED);
            return disabled;
          }
        },
        {
          key: "isDisplayed",
          value: function isDisplayed() {
            var display = this.css(_constants.DISPLAY), displayed = display !== _constants.NONE;
            return displayed;
          }
        },
        {
          key: "isShowing",
          value: function isShowing() {
            var displayed = this.isDisplayed(), showing = displayed;
            return showing;
          }
        },
        {
          key: "isHidden",
          value: function isHidden() {
            var displayed = this.isDisplayed(), hidden = !displayed;
            return hidden;
          }
        },
        {
          key: "style",
          value: function style(name) {
            var value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
            if (value !== null) {
              this.domElement.style[name] = value;
              return;
            }
            var style2 = this.domElement.style[name];
            return style2;
          }
        },
        {
          key: "html",
          value: function html() {
            var html2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
            if (html2 !== null) {
              var innerHTML = html2;
              this.domElement.innerHTML = innerHTML;
              return;
            }
            var innerHTML1 = this.domElement.innerHTML;
            html2 = innerHTML1;
            return html2;
          }
        },
        {
          key: "css",
          value: function css() {
            var _this = this;
            var css2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
            if (css2 === null) {
              css2 = {};
              var computedStyles = getComputedStyle(this.domElement);
              for (var index = 0; index < computedStyles.length; index++) {
                var computedStyle = computedStyles[index], name = computedStyle, value = computedStyles.getPropertyValue(name);
                css2[name] = value;
              }
            } else if ((typeof css2 === "undefined" ? "undefined" : _type_of(css2)) === _constants.STRING) {
              var name1 = css2;
              var computedStyles1 = getComputedStyle(this.domElement), value1 = computedStyles1.getPropertyValue(name1);
              css2 = value1;
            } else {
              var names = Object.keys(css2);
              names.forEach(function(name2) {
                var value2 = css2[name2];
                _this.style(name2, value2);
              });
            }
            return css2;
          }
        },
        {
          key: "destroy",
          value: function destroy() {
            var element = this;
            (0, _element1.destroyElement)(element);
          }
        }
      ], [
        {
          key: "fromClass",
          value: function fromClass(Class, properties) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key2 = 2; _key2 < _len; _key2++) {
              remainingArguments[_key2 - 2] = arguments[_key2];
            }
            var tagName = Class.tagName, element = elementFromTagName.apply(void 0, [
              Class,
              tagName
            ].concat(_to_consumable_array(remainingArguments))), defaultProperties = defaultPropertiesFromClass(Class), ignoredProperties = ignoredPropertiesFromClass(Class);
            element.applyProperties(properties, defaultProperties, ignoredProperties);
            element.initialise && element.initialise();
            return element;
          }
        },
        {
          key: "fromTagName",
          value: function fromTagName(tagName, properties) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key2 = 2; _key2 < _len; _key2++) {
              remainingArguments[_key2 - 2] = arguments[_key2];
            }
            var Class = Element2, element = elementFromTagName.apply(void 0, [
              Class,
              tagName
            ].concat(_to_consumable_array(remainingArguments))), defaultProperties = {}, ignoredProperties = [];
            element.applyProperties(properties, defaultProperties, ignoredProperties);
            element.initialise && element.initialise();
            return element;
          }
        }
      ]);
      return Element2;
    }();
    Object.assign(Element.prototype, _jsx.default);
    Object.assign(Element.prototype, _key.default);
    Object.assign(Element.prototype, _mouse.default);
    Object.assign(Element.prototype, _click.default);
    Object.assign(Element.prototype, _state.default);
    Object.assign(Element.prototype, _event.default);
    Object.assign(Element.prototype, _touch.default);
    Object.assign(Element.prototype, _scroll.default);
    Object.assign(Element.prototype, _resize.default);
    Object.assign(Element.prototype, _element.default);
    Object.assign(Element.prototype, _fullScreen.default);
    Object.assign(Element.prototype, _customEvent.default);
    function elementFromTagName(Class, tagName) {
      for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key2 = 2; _key2 < _len; _key2++) {
        remainingArguments[_key2 - 2] = arguments[_key2];
      }
      var _Function_prototype_bind;
      var selector = null, element = new ((_Function_prototype_bind = Function.prototype.bind).call.apply(_Function_prototype_bind, [
        Class,
        null,
        selector
      ].concat(_to_consumable_array(remainingArguments))))(), domElement = (0, _name.isSVGTagName)(tagName) ? document.createElementNS(_constants.SVG_NAMESPACE_URI, tagName) : document.createElement(tagName);
      (0, _element1.constructElement)(element, domElement);
      return element;
    }
    function defaultPropertiesFromClass(Class) {
      var defaultProperties = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      if (Class.hasOwnProperty(_constants.DEFAULT_PROPERTIES)) {
        defaultProperties = (0, _object.combine)(defaultProperties, Class[_constants.DEFAULT_PROPERTIES]);
      }
      var superClass = Object.getPrototypeOf(Class);
      if (superClass !== null) {
        defaultProperties = defaultPropertiesFromClass(superClass, defaultProperties);
      }
      return defaultProperties;
    }
    function ignoredPropertiesFromClass(Class) {
      var ignoredProperties = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
      if (Class.hasOwnProperty(_constants.IGNORED_PROPERTIES)) {
        ignoredProperties = (0, _array.augment)(ignoredProperties, Class[_constants.IGNORED_PROPERTIES], function(ignoredProperty) {
          if (!ignoredProperties.includes(ignoredProperty)) {
            return true;
          }
        });
      }
      var superClass = Object.getPrototypeOf(Class);
      if (superClass !== null) {
        ignoredProperties = ignoredPropertiesFromClass(superClass, ignoredProperties);
      }
      return ignoredProperties;
    }
  });

  // node_modules/easy/lib/react.js
  var require_react = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _element = /* @__PURE__ */ _interop_require_default(require_element3());
    var _array = require_array();
    var _constants = require_constants();
    var _elements = require_elements();
    function _instanceof(left, right) {
      if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
        return !!right[Symbol.hasInstance](left);
      } else {
        return left instanceof right;
      }
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function createElement(firstArgument, properties) {
      for (var _len = arguments.length, childElements = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        childElements[_key - 2] = arguments[_key];
      }
      var element = null;
      if (firstArgument) {
        childElements = sanitiseChildElements(childElements);
        properties = Object.assign({
          childElements
        }, properties);
        if (false) {
        } else if (isSubclassOf(firstArgument, _element.default)) {
          var Class = firstArgument;
          element = Class.fromClass(Class, properties);
        } else if ((typeof firstArgument === "undefined" ? "undefined" : _type_of(firstArgument)) === _constants.STRING) {
          var tagName = firstArgument;
          element = _element.default.fromTagName(tagName, properties);
        } else if ((typeof firstArgument === "undefined" ? "undefined" : _type_of(firstArgument)) === _constants.FUNCTION) {
          var elementFunction = firstArgument;
          element = elementFunction(properties);
        }
      }
      return element;
    }
    var React2 = {
      createElement
    };
    var _default = React2;
    function sanitiseChildElements(childElements) {
      childElements = (0, _array.flatten)(childElements);
      childElements = (0, _elements.removeFalseyElements)(childElements);
      childElements = (0, _elements.replaceStringsWithTextElements)(childElements);
      return childElements;
    }
    function isSubclassOf(argument, Class) {
      var subclassOf = _instanceof(argument.prototype, Class);
      return subclassOf;
    }
  });

  // node_modules/easy/lib/mouseButtons.js
  var require_mouseButtons = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get LEFT_MOUSE_BUTTON() {
        return LEFT_MOUSE_BUTTON;
      },
      get MIDDLE_MOUSE_BUTTON() {
        return MIDDLE_MOUSE_BUTTON;
      },
      get RIGHT_MOUSE_BUTTON() {
        return RIGHT_MOUSE_BUTTON;
      },
      get default() {
        return _default;
      }
    });
    var LEFT_MOUSE_BUTTON = 0;
    var RIGHT_MOUSE_BUTTON = 2;
    var MIDDLE_MOUSE_BUTTON = 1;
    var _default = {
      LEFT_MOUSE_BUTTON,
      RIGHT_MOUSE_BUTTON,
      MIDDLE_MOUSE_BUTTON
    };
  });

  // node_modules/easy/lib/mixins/input.js
  var require_input = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _eventTypes = require_eventTypes();
    function onInput(inputHandler, element) {
      this.onEvent(_eventTypes.INPUT_EVENT_TYPE, inputHandler, element);
    }
    function offInput(inputHandler, element) {
      this.offEvent(_eventTypes.INPUT_EVENT_TYPE, inputHandler, element);
    }
    function onChange(changeHandler, element) {
      this.onEvent(_eventTypes.CHANGE_EVENT_TYPE, changeHandler, element);
    }
    function offChange(changeHandler, element) {
      this.offEvent(_eventTypes.CHANGE_EVENT_TYPE, changeHandler, element);
    }
    function getValue() {
      return this.domElement.value;
    }
    function setValue(value) {
      this.domElement.value = value;
    }
    function isReadOnly() {
      return this.domElement.readOnly;
    }
    function setReadOnly(readOnly) {
      this.domElement.readOnly = readOnly;
    }
    var inputMixins = {
      onInput,
      offInput,
      onChange,
      offChange,
      getValue,
      setValue,
      isReadOnly,
      setReadOnly
    };
    var _default = inputMixins;
  });

  // node_modules/easy/lib/mixins/focus.js
  var require_focus = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _eventTypes = require_eventTypes();
    function onBlur(blurHandler, element) {
      this.onEvent(_eventTypes.BLUR_EVENT_TYPE, blurHandler, element);
    }
    function offBlur(blurHandler, element) {
      this.offEvent(_eventTypes.BLUR_EVENT_TYPE, blurHandler, element);
    }
    function onFocus(focusHandler, element) {
      this.onEvent(_eventTypes.FOCUS_EVENT_TYPE, focusHandler, element);
    }
    function offFocus(focusHandler, element) {
      this.offEvent(_eventTypes.FOCUS_EVENT_TYPE, focusHandler, element);
    }
    function blur() {
      this.domElement.blur();
    }
    function focus() {
      this.domElement.focus();
    }
    function hasFocus() {
      var _$focus = document.activeElement === this.domElement;
      return _$focus;
    }
    var focusMixins = {
      onBlur,
      offBlur,
      onFocus,
      offFocus,
      blur,
      focus,
      hasFocus
    };
    var _default = focusMixins;
  });

  // node_modules/easy/lib/mixins/selection.js
  var require_selection = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _eventTypes = require_eventTypes();
    function onCut(cutHandler, element) {
      this.onEvent(_eventTypes.CUT_EVENT_TYPE, cutHandler, element);
    }
    function offCut(cutHandler, element) {
      this.offEvent(_eventTypes.CUT_EVENT_TYPE, cutHandler, element);
    }
    function onCopy(copyHandler, element) {
      this.onEvent(_eventTypes.COPY_EVENT_TYPE, copyHandler, element);
    }
    function offCopy(copyHandler, element) {
      this.offEvent(_eventTypes.COPY_EVENT_TYPE, copyHandler, element);
    }
    function onPaste(pasteHandler, element) {
      this.onEvent(_eventTypes.PASTE_EVENT_TYPE, pasteHandler, element);
    }
    function offPaste(pasteHandler, element) {
      this.offEvent(_eventTypes.PASTE_EVENT_TYPE, pasteHandler, element);
    }
    function getSelectionStart() {
      return this.domElement.selectionStart;
    }
    function getSelectionEnd() {
      return this.domElement.selectionEnd;
    }
    function setSelectionStart(selectionStart) {
      this.domElement.selectionStart = selectionStart;
    }
    function setSelectionEnd(selectionEnd) {
      this.domElement.selectionEnd = selectionEnd;
    }
    function select() {
      this.domElement.select();
    }
    var selectionMixins = {
      onCut,
      offCut,
      onCopy,
      offCopy,
      onPaste,
      offPaste,
      getSelectionStart,
      getSelectionEnd,
      setSelectionStart,
      setSelectionEnd,
      select
    };
    var _default = selectionMixins;
  });

  // node_modules/easy/lib/document.js
  var require_document = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _key = /* @__PURE__ */ _interop_require_default(require_key());
    var _event = /* @__PURE__ */ _interop_require_default(require_event());
    var _mouse = /* @__PURE__ */ _interop_require_default(require_mouse());
    var _click = /* @__PURE__ */ _interop_require_default(require_click());
    var _selection = /* @__PURE__ */ _interop_require_default(require_selection());
    var _constants = require_constants();
    var _eventTypes = require_eventTypes();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    var Document = /* @__PURE__ */ function() {
      function Document2() {
        _class_call_check(this, Document2);
        this.domElement = document;
      }
      _create_class(Document2, [
        {
          key: "getDOMElement",
          value: function getDOMElement() {
            return this.domElement;
          }
        },
        {
          key: "getInnerWidth",
          value: function getInnerWidth() {
            return this.domElement.clientWidth;
          }
        },
        {
          key: "getInnerHeight",
          value: function getInnerHeight() {
            return this.domElement.clientHeight;
          }
        },
        {
          key: "getSelection",
          value: function getSelection() {
            return this.domElement.getSelection();
          }
        },
        {
          key: "createRange",
          value: function createRange() {
            return this.domElement.createRange();
          }
        },
        {
          key: "createTextNode",
          value: function createTextNode(data) {
            return this.domElement.createTextNode(data);
          }
        },
        {
          key: "onSelectionChange",
          value: function onSelectionChange(selectionChangeHandler, element) {
            this.onEvent(_eventTypes.SELECTIONCHANGE_EVENT_TYPE, selectionChangeHandler, element);
          }
        },
        {
          key: "offSelectionChange",
          value: function offSelectionChange(selectionChangeHandler, element) {
            this.offEvent(_eventTypes.SELECTIONCHANGE_EVENT_TYPE, selectionChangeHandler, element);
          }
        },
        {
          key: "createEventListener",
          value: function createEventListener(eventType, handler, element) {
            var _this = this;
            var eventListener;
            var handlerElement = element;
            eventListener = function(event) {
              if (eventType === _eventTypes.SELECTIONCHANGE_EVENT_TYPE) {
                var domElement = handlerElement.domElement, currentTarget = event.currentTarget, activeElement = currentTarget.activeElement;
                if (domElement !== activeElement) {
                  return;
                }
              }
              var _$element = _this;
              handler.call(handlerElement, event, _$element);
            };
            Object.assign(eventListener, {
              element,
              handler,
              eventType
            });
            return eventListener;
          }
        }
      ]);
      return Document2;
    }();
    Object.assign(Document.prototype, _key.default);
    Object.assign(Document.prototype, _event.default);
    Object.assign(Document.prototype, _mouse.default);
    Object.assign(Document.prototype, _click.default);
    Object.assign(Document.prototype, _selection.default);
    var _default = (typeof document === "undefined" ? "undefined" : _type_of(document)) === _constants.UNDEFINED ? void 0 : new Document();
  });

  // node_modules/easy/lib/window.js
  var require_window = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _key = /* @__PURE__ */ _interop_require_default(require_key());
    var _event = /* @__PURE__ */ _interop_require_default(require_event());
    var _mouse = /* @__PURE__ */ _interop_require_default(require_mouse());
    var _click = /* @__PURE__ */ _interop_require_default(require_click());
    var _focus = /* @__PURE__ */ _interop_require_default(require_focus());
    var _constants = require_constants();
    var _eventTypes = require_eventTypes();
    var _scroll = require_scroll();
    function _array_like_to_array(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _array_without_holes(arr) {
      if (Array.isArray(arr))
        return _array_like_to_array(arr);
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _iterable_to_array(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _non_iterable_spread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _to_consumable_array(arr) {
      return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _unsupported_iterable_to_array(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _array_like_to_array(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _array_like_to_array(o, minLen);
    }
    var Window = /* @__PURE__ */ function() {
      function Window2() {
        _class_call_check(this, Window2);
        this.domElement = window;
      }
      _create_class(Window2, [
        {
          key: "getDOMElement",
          value: function getDOMElement() {
            return this.domElement;
          }
        },
        {
          key: "assign",
          value: function assign() {
            for (var _len = arguments.length, sources = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
              sources[_key2] = arguments[_key2];
            }
            var _Object;
            var target = this.domElement;
            (_Object = Object).assign.apply(_Object, [
              target
            ].concat(_to_consumable_array(sources)));
          }
        },
        {
          key: "reload",
          value: function reload() {
            window.location.reload();
          }
        },
        {
          key: "getWidth",
          value: function getWidth() {
            return this.domElement.innerWidth;
          }
        },
        {
          key: "getHeight",
          value: function getHeight() {
            return this.domElement.innerHeight;
          }
        },
        {
          key: "getScrollTop",
          value: function getScrollTop() {
            return this.domElement.pageYOffset;
          }
        },
        {
          key: "getScrollLeft",
          value: function getScrollLeft() {
            return this.domElement.pageXOffset;
          }
        },
        {
          key: "getSelection",
          value: function getSelection() {
            return this.domElement.getSelection();
          }
        },
        {
          key: "getScreenWidth",
          value: function getScreenWidth() {
            return this.domElement.screen.width;
          }
        },
        {
          key: "getScreenHeight",
          value: function getScreenHeight() {
            return this.domElement.screen.height;
          }
        },
        {
          key: "onResize",
          value: function onResize(resizeHandler, element) {
            var eventType = _eventTypes.RESIZE_EVENT_TYPE, eventListener = this.addEventListener(eventType, resizeHandler, element);
            this.domElement.addEventListener(eventType, eventListener);
          }
        },
        {
          key: "offResize",
          value: function offResize(resizeHandler, element) {
            var eventType = _eventTypes.RESIZE_EVENT_TYPE, eventListener = this.removeEventListener(eventType, resizeHandler, element);
            this.domElement.removeEventListener(eventType, eventListener);
          }
        }
      ]);
      return Window2;
    }();
    Object.assign(Window.prototype, _key.default);
    Object.assign(Window.prototype, _event.default);
    Object.assign(Window.prototype, _mouse.default);
    Object.assign(Window.prototype, _click.default);
    Object.assign(Window.prototype, _focus.default);
    Object.assign(Window.prototype, {
      onScroll: _scroll.onScroll,
      offScroll: _scroll.offScroll
    });
    var _default = (typeof window === "undefined" ? "undefined" : _type_of(window)) === _constants.UNDEFINED ? void 0 : new Window();
  });

  // node_modules/easy/lib/element/body.js
  var require_body = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Body;
      }
    });
    var _element = /* @__PURE__ */ _interop_require_default(require_element3());
    var _constants = require_constants();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _is_native_function(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _wrap_native_super(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrap_native_super = function wrapNativeSuper(Class2) {
        if (Class2 === null || !_is_native_function(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _get_prototype_of(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _set_prototype_of(Wrapper, Class2);
      };
      return _wrap_native_super(Class);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var Body = /* @__PURE__ */ function(Element) {
      _inherits(Body2, Element);
      function Body2() {
        var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _constants.BODY;
        _class_call_check(this, Body2);
        return _call_super(this, Body2, [
          selector
        ]);
      }
      return Body2;
    }(_wrap_native_super(_element.default));
    _define_property(Body, "tagName", "body");
  });

  // node_modules/easy/lib/element/link.js
  var require_link = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Link;
      }
    });
    var _element = /* @__PURE__ */ _interop_require_default(require_element3());
    var _focus = /* @__PURE__ */ _interop_require_default(require_focus());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _is_native_function(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _wrap_native_super(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrap_native_super = function wrapNativeSuper(Class2) {
        if (Class2 === null || !_is_native_function(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _get_prototype_of(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _set_prototype_of(Wrapper, Class2);
      };
      return _wrap_native_super(Class);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var Link = /* @__PURE__ */ function(Element) {
      _inherits(Link2, Element);
      function Link2() {
        _class_call_check(this, Link2);
        return _call_super(this, Link2, arguments);
      }
      _create_class(Link2, [
        {
          key: "getHRef",
          value: function getHRef() {
            return this.getAttribute("href");
          }
        },
        {
          key: "setHRef",
          value: function setHRef(href) {
            return this.setAttribute("href", href);
          }
        }
      ]);
      return Link2;
    }(_wrap_native_super(_element.default));
    _define_property(Link, "tagName", "a");
    Object.assign(Link.prototype, _focus.default);
  });

  // node_modules/easy/lib/element/input.js
  var require_input2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Input;
      }
    });
    var _element = /* @__PURE__ */ _interop_require_default(require_element3());
    var _input = /* @__PURE__ */ _interop_require_default(require_input());
    var _focus = /* @__PURE__ */ _interop_require_default(require_focus());
    var _selection = /* @__PURE__ */ _interop_require_default(require_selection());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _is_native_function(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _wrap_native_super(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrap_native_super = function wrapNativeSuper(Class2) {
        if (Class2 === null || !_is_native_function(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _get_prototype_of(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _set_prototype_of(Wrapper, Class2);
      };
      return _wrap_native_super(Class);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var Input = /* @__PURE__ */ function(Element) {
      _inherits(Input2, Element);
      function Input2() {
        _class_call_check(this, Input2);
        return _call_super(this, Input2, arguments);
      }
      return Input2;
    }(_wrap_native_super(_element.default));
    _define_property(Input, "tagName", "input");
    Object.assign(Input.prototype, _input.default);
    Object.assign(Input.prototype, _focus.default);
    Object.assign(Input.prototype, _selection.default);
  });

  // node_modules/easy/lib/element/button.js
  var require_button = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Button;
      }
    });
    var _element = /* @__PURE__ */ _interop_require_default(require_element3());
    var _focus = /* @__PURE__ */ _interop_require_default(require_focus());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _is_native_function(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _wrap_native_super(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrap_native_super = function wrapNativeSuper(Class2) {
        if (Class2 === null || !_is_native_function(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _get_prototype_of(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _set_prototype_of(Wrapper, Class2);
      };
      return _wrap_native_super(Class);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var Button = /* @__PURE__ */ function(Element) {
      _inherits(Button2, Element);
      function Button2() {
        _class_call_check(this, Button2);
        return _call_super(this, Button2, arguments);
      }
      return Button2;
    }(_wrap_native_super(_element.default));
    _define_property(Button, "tagName", "button");
    Object.assign(Button.prototype, _focus.default);
  });

  // node_modules/easy/lib/element/select.js
  var require_select = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Select;
      }
    });
    var _element = /* @__PURE__ */ _interop_require_default(require_element3());
    var _input = /* @__PURE__ */ _interop_require_default(require_input());
    var _focus = /* @__PURE__ */ _interop_require_default(require_focus());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _is_native_function(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _wrap_native_super(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrap_native_super = function wrapNativeSuper(Class2) {
        if (Class2 === null || !_is_native_function(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _get_prototype_of(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _set_prototype_of(Wrapper, Class2);
      };
      return _wrap_native_super(Class);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var Select = /* @__PURE__ */ function(Element) {
      _inherits(Select2, Element);
      function Select2() {
        _class_call_check(this, Select2);
        return _call_super(this, Select2, arguments);
      }
      return Select2;
    }(_wrap_native_super(_element.default));
    _define_property(Select, "tagName", "select");
    Object.assign(Select.prototype, _input.default);
    Object.assign(Select.prototype, _focus.default);
  });

  // node_modules/easy/lib/element/checkbox.js
  var require_checkbox = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Checkbox;
      }
    });
    var _element = /* @__PURE__ */ _interop_require_default(require_element3());
    var _input = /* @__PURE__ */ _interop_require_default(require_input());
    var _focus = /* @__PURE__ */ _interop_require_default(require_focus());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _is_native_function(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _wrap_native_super(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrap_native_super = function wrapNativeSuper(Class2) {
        if (Class2 === null || !_is_native_function(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _get_prototype_of(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _set_prototype_of(Wrapper, Class2);
      };
      return _wrap_native_super(Class);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var Checkbox = /* @__PURE__ */ function(Element) {
      _inherits(Checkbox2, Element);
      function Checkbox2() {
        _class_call_check(this, Checkbox2);
        return _call_super(this, Checkbox2, arguments);
      }
      _create_class(Checkbox2, [
        {
          key: "isChecked",
          value: function isChecked() {
            return this.domElement.checked;
          }
        },
        {
          key: "check",
          value: function check() {
            var checked = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
            this.domElement.checked = checked;
          }
        }
      ]);
      return Checkbox2;
    }(_wrap_native_super(_element.default));
    _define_property(Checkbox, "tagName", "input");
    _define_property(Checkbox, "defaultProperties", {
      type: "checkbox"
    });
    Object.assign(Checkbox.prototype, _input.default);
    Object.assign(Checkbox.prototype, _focus.default);
  });

  // node_modules/easy/lib/element/textarea.js
  var require_textarea = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Textarea;
      }
    });
    var _element = /* @__PURE__ */ _interop_require_default(require_element3());
    var _input = /* @__PURE__ */ _interop_require_default(require_input());
    var _focus = /* @__PURE__ */ _interop_require_default(require_focus());
    var _selection = /* @__PURE__ */ _interop_require_default(require_selection());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _is_native_function(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _wrap_native_super(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrap_native_super = function wrapNativeSuper(Class2) {
        if (Class2 === null || !_is_native_function(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _get_prototype_of(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _set_prototype_of(Wrapper, Class2);
      };
      return _wrap_native_super(Class);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var Textarea = /* @__PURE__ */ function(Element) {
      _inherits(Textarea2, Element);
      function Textarea2() {
        _class_call_check(this, Textarea2);
        return _call_super(this, Textarea2, arguments);
      }
      return Textarea2;
    }(_wrap_native_super(_element.default));
    _define_property(Textarea, "tagName", "textarea");
    Object.assign(Textarea.prototype, _input.default);
    Object.assign(Textarea.prototype, _focus.default);
    Object.assign(Textarea.prototype, _selection.default);
  });

  // node_modules/easy/lib/index.js
  var require_lib = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get Body() {
        return _body.default;
      },
      get Bounds() {
        return _bounds.default;
      },
      get Button() {
        return _button.default;
      },
      get Checkbox() {
        return _checkbox.default;
      },
      get Element() {
        return _element1.default;
      },
      get Input() {
        return _input1.default;
      },
      get Link() {
        return _link.default;
      },
      get Offset() {
        return _offset.default;
      },
      get React() {
        return _react.default;
      },
      get Select() {
        return _select.default;
      },
      get TextElement() {
        return _textElement.default;
      },
      get Textarea() {
        return _textarea.default;
      },
      get customEventMixins() {
        return _customEvent.default;
      },
      get document() {
        return _document.default;
      },
      get elementUtilities() {
        return _element.default;
      },
      get eventTypes() {
        return _eventTypes.default;
      },
      get focusMixins() {
        return _focus.default;
      },
      get inputMixins() {
        return _input.default;
      },
      get mouseButtons() {
        return _mouseButtons.default;
      },
      get selectionMixins() {
        return _selection.default;
      },
      get window() {
        return _window.default;
      }
    });
    var _react = /* @__PURE__ */ _interop_require_default(require_react());
    var _bounds = /* @__PURE__ */ _interop_require_default(require_bounds());
    var _offset = /* @__PURE__ */ _interop_require_default(require_offset());
    var _eventTypes = /* @__PURE__ */ _interop_require_default(require_eventTypes());
    var _mouseButtons = /* @__PURE__ */ _interop_require_default(require_mouseButtons());
    var _element = /* @__PURE__ */ _interop_require_default(require_element());
    var _input = /* @__PURE__ */ _interop_require_default(require_input());
    var _focus = /* @__PURE__ */ _interop_require_default(require_focus());
    var _selection = /* @__PURE__ */ _interop_require_default(require_selection());
    var _customEvent = /* @__PURE__ */ _interop_require_default(require_customEvent());
    var _element1 = /* @__PURE__ */ _interop_require_default(require_element3());
    var _textElement = /* @__PURE__ */ _interop_require_default(require_textElement());
    var _document = /* @__PURE__ */ _interop_require_default(require_document());
    var _window = /* @__PURE__ */ _interop_require_default(require_window());
    var _body = /* @__PURE__ */ _interop_require_default(require_body());
    var _link = /* @__PURE__ */ _interop_require_default(require_link());
    var _input1 = /* @__PURE__ */ _interop_require_default(require_input2());
    var _button = /* @__PURE__ */ _interop_require_default(require_button());
    var _select = /* @__PURE__ */ _interop_require_default(require_select());
    var _checkbox = /* @__PURE__ */ _interop_require_default(require_checkbox());
    var _textarea = /* @__PURE__ */ _interop_require_default(require_textarea());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // node_modules/juxtapose/lib/juxtapose.js
  var require_juxtapose = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _easy = require_lib();
    Object.assign(globalThis, {
      React: _easy.React
    });
  });

  // node_modules/juxtapose/lib/index.js
  var require_lib2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    require_juxtapose();
  });

  // node_modules/with-style/lib/tagNames.js
  var require_tagNames = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var tagNames = [
      "a",
      "abbr",
      "address",
      "aside",
      "audio",
      "b",
      "base",
      "bdi",
      "bdo",
      "blockquote",
      "body",
      "br",
      "button",
      "canvas",
      "caption",
      "cite",
      "code",
      "col",
      "colgroup",
      "data",
      "datalist",
      "dd",
      "del",
      "details",
      "dfn",
      "dialog",
      "div",
      "dl",
      "dt",
      "em",
      "embed",
      "fieldset",
      "figcaption",
      "figure",
      "footer",
      "form",
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6",
      "head",
      "header",
      "hr",
      "html",
      "i",
      "iframe",
      "img",
      "input",
      "ins",
      "kbd",
      "label",
      "legend",
      "li",
      "link",
      "main",
      "map",
      "mark",
      "meta",
      "meter",
      "nav",
      "noscript",
      "object",
      "ol",
      "optgroup",
      "option",
      "output",
      "p",
      "param",
      "picture",
      "pre",
      "progress",
      "q",
      "rp",
      "rt",
      "ruby",
      "s",
      "samp",
      "script",
      "section",
      "select",
      "small",
      "source",
      "span",
      "strong",
      "style",
      "sub",
      "summary",
      "sup",
      "svg",
      "table",
      "tbody",
      "td",
      "template",
      "textarea",
      "tfoot",
      "th",
      "thead",
      "time",
      "title",
      "tr",
      "track",
      "u",
      "ul",
      "var",
      "video",
      "wbr"
    ];
    var _default = tagNames;
  });

  // node_modules/necessary/lib/levels.js
  var require_levels = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get DEBUG_LEVEL() {
        return DEBUG_LEVEL;
      },
      get ERROR_LEVEL() {
        return ERROR_LEVEL;
      },
      get FATAL_LEVEL() {
        return FATAL_LEVEL;
      },
      get INFO_LEVEL() {
        return INFO_LEVEL;
      },
      get TRACE_LEVEL() {
        return TRACE_LEVEL;
      },
      get WARNING_LEVEL() {
        return WARNING_LEVEL;
      },
      get default() {
        return _default;
      }
    });
    var TRACE_LEVEL = "trace";
    var DEBUG_LEVEL = "debug";
    var INFO_LEVEL = "info";
    var WARNING_LEVEL = "warning";
    var ERROR_LEVEL = "error";
    var FATAL_LEVEL = "fatal";
    var _default = {
      TRACE_LEVEL,
      DEBUG_LEVEL,
      INFO_LEVEL,
      WARNING_LEVEL,
      ERROR_LEVEL,
      FATAL_LEVEL
    };
  });

  // node_modules/necessary/lib/methods.js
  var require_methods = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get DELETE_METHOD() {
        return DELETE_METHOD;
      },
      get GET_METHOD() {
        return GET_METHOD;
      },
      get OPTIONS_METHOD() {
        return OPTIONS_METHOD;
      },
      get PATCH_METHOD() {
        return PATCH_METHOD;
      },
      get POST_METHOD() {
        return POST_METHOD;
      },
      get default() {
        return _default;
      }
    });
    var GET_METHOD = "GET";
    var POST_METHOD = "POST";
    var PATCH_METHOD = "PATCH";
    var DELETE_METHOD = "DELETE";
    var OPTIONS_METHOD = "OPTIONS";
    var _default = {
      GET_METHOD,
      POST_METHOD,
      PATCH_METHOD,
      DELETE_METHOD,
      OPTIONS_METHOD
    };
  });

  // node_modules/necessary/lib/headers.js
  var require_headers = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get ACCEPT_HEADER() {
        return ACCEPT_HEADER;
      },
      get ACCESS_CONTROL_ALLOW_HEADERS_HEADER() {
        return ACCESS_CONTROL_ALLOW_HEADERS_HEADER;
      },
      get ACCESS_CONTROL_ALLOW_METHODS_HEADER() {
        return ACCESS_CONTROL_ALLOW_METHODS_HEADER;
      },
      get ACCESS_CONTROL_ALLOW_ORIGIN_HEADER() {
        return ACCESS_CONTROL_ALLOW_ORIGIN_HEADER;
      },
      get ACCESS_CONTROL_REQUEST_METHOD_HEADER() {
        return ACCESS_CONTROL_REQUEST_METHOD_HEADER;
      },
      get AUTHORIZATION_HEADER() {
        return AUTHORIZATION_HEADER;
      },
      get CACHE_CONTROL_HEADER() {
        return CACHE_CONTROL_HEADER;
      },
      get CONTENT_DISPOSITION_HEADER() {
        return CONTENT_DISPOSITION_HEADER;
      },
      get CONTENT_LENGTH_HEADER() {
        return CONTENT_LENGTH_HEADER;
      },
      get CONTENT_TYPE_HEADER() {
        return CONTENT_TYPE_HEADER;
      },
      get LOCATION_HEADER() {
        return LOCATION_HEADER;
      },
      get PRAGMA_HEADER() {
        return PRAGMA_HEADER;
      },
      get TRANSFER_ENCODING_HEADER() {
        return TRANSFER_ENCODING_HEADER;
      },
      get USER_AGENT_HEADER() {
        return USER_AGENT_HEADER;
      },
      get default() {
        return _default;
      }
    });
    var PRAGMA_HEADER = "pragma";
    var ACCEPT_HEADER = "accept";
    var LOCATION_HEADER = "location";
    var USER_AGENT_HEADER = "user-agent";
    var CONTENT_TYPE_HEADER = "content-type";
    var AUTHORIZATION_HEADER = "authorization";
    var CACHE_CONTROL_HEADER = "cache-control";
    var CONTENT_LENGTH_HEADER = "content-length";
    var TRANSFER_ENCODING_HEADER = "transfer-encoding";
    var CONTENT_DISPOSITION_HEADER = "content-disposition";
    var ACCESS_CONTROL_ALLOW_ORIGIN_HEADER = "access-control-allow-origin";
    var ACCESS_CONTROL_ALLOW_METHODS_HEADER = "access-control-allow-methods";
    var ACCESS_CONTROL_ALLOW_HEADERS_HEADER = "access-control-allow-headers";
    var ACCESS_CONTROL_REQUEST_METHOD_HEADER = "access-control-request-method";
    var _default = {
      PRAGMA_HEADER,
      ACCEPT_HEADER,
      LOCATION_HEADER,
      USER_AGENT_HEADER,
      CONTENT_TYPE_HEADER,
      AUTHORIZATION_HEADER,
      CACHE_CONTROL_HEADER,
      CONTENT_LENGTH_HEADER,
      TRANSFER_ENCODING_HEADER,
      CONTENT_DISPOSITION_HEADER,
      ACCESS_CONTROL_ALLOW_ORIGIN_HEADER,
      ACCESS_CONTROL_ALLOW_METHODS_HEADER,
      ACCESS_CONTROL_ALLOW_HEADERS_HEADER,
      ACCESS_CONTROL_REQUEST_METHOD_HEADER
    };
  });

  // node_modules/necessary/lib/keyCodes.js
  var require_keyCodes = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get ARROW_DOWN_KEY_CODE() {
        return ARROW_DOWN_KEY_CODE;
      },
      get ARROW_LEFT_KEY_CODE() {
        return ARROW_LEFT_KEY_CODE;
      },
      get ARROW_RIGHT_KEY_CODE() {
        return ARROW_RIGHT_KEY_CODE;
      },
      get ARROW_UP_KEY_CODE() {
        return ARROW_UP_KEY_CODE;
      },
      get BACKSPACE_KEY_CODE() {
        return BACKSPACE_KEY_CODE;
      },
      get DELETE_KEY_CODE() {
        return DELETE_KEY_CODE;
      },
      get ENTER_KEY_CODE() {
        return ENTER_KEY_CODE;
      },
      get ESCAPE_KEY_CODE() {
        return ESCAPE_KEY_CODE;
      },
      get SHIFT_KEY_CODE() {
        return SHIFT_KEY_CODE;
      },
      get TAB_KEY_CODE() {
        return TAB_KEY_CODE;
      },
      get default() {
        return _default;
      }
    });
    var TAB_KEY_CODE = 9;
    var SHIFT_KEY_CODE = 16;
    var ENTER_KEY_CODE = 13;
    var ESCAPE_KEY_CODE = 27;
    var DELETE_KEY_CODE = 46;
    var BACKSPACE_KEY_CODE = 8;
    var ARROW_UP_KEY_CODE = 38;
    var ARROW_DOWN_KEY_CODE = 40;
    var ARROW_LEFT_KEY_CODE = 37;
    var ARROW_RIGHT_KEY_CODE = 39;
    var _default = {
      TAB_KEY_CODE,
      SHIFT_KEY_CODE,
      ENTER_KEY_CODE,
      ESCAPE_KEY_CODE,
      DELETE_KEY_CODE,
      BACKSPACE_KEY_CODE,
      ARROW_UP_KEY_CODE,
      ARROW_DOWN_KEY_CODE,
      ARROW_LEFT_KEY_CODE,
      ARROW_RIGHT_KEY_CODE
    };
  });

  // node_modules/necessary/lib/encodings.js
  var require_encodings = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get BASE64_ENCODING() {
        return BASE64_ENCODING;
      },
      get UTF8_ENCODING() {
        return UTF8_ENCODING;
      },
      get UTF_8_ENCODING() {
        return UTF_8_ENCODING;
      },
      get default() {
        return _default;
      }
    });
    var UTF8_ENCODING = "utf8";
    var UTF_8_ENCODING = "utf-8";
    var BASE64_ENCODING = "base64";
    var _default = {
      UTF8_ENCODING,
      UTF_8_ENCODING,
      BASE64_ENCODING
    };
  });

  // node_modules/necessary/lib/characters.js
  var require_characters = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get AMPERSAND_CHARACTER() {
        return AMPERSAND_CHARACTER;
      },
      get ASTERISK_CHARACTER() {
        return ASTERISK_CHARACTER;
      },
      get BACKSLASH_CHARACTER() {
        return BACKSLASH_CHARACTER;
      },
      get BACKSPACE_CHARACTER() {
        return BACKSPACE_CHARACTER;
      },
      get BACKTICK_DELIMITER() {
        return BACKTICK_DELIMITER;
      },
      get BAR_CHARACTER() {
        return BAR_CHARACTER;
      },
      get CARRIAGE_RETURN_CHARACTER() {
        return CARRIAGE_RETURN_CHARACTER;
      },
      get CLOSING_BRACKET_CHARACTER() {
        return CLOSING_BRACKET_CHARACTER;
      },
      get CLOSING_CURLY_BRACKET_CHARACTER() {
        return CLOSING_CURLY_BRACKET_CHARACTER;
      },
      get CLOSING_SQUARE_BRACKET_CHARACTER() {
        return CLOSING_SQUARE_BRACKET_CHARACTER;
      },
      get COLON_CHARACTER() {
        return COLON_CHARACTER;
      },
      get COMMA_CHARACTER() {
        return COMMA_CHARACTER;
      },
      get CTRL_C_CHARACTER() {
        return CTRL_C_CHARACTER;
      },
      get DASH_CHARACTER() {
        return DASH_CHARACTER;
      },
      get DOLLAR_CHARACTER() {
        return DOLLAR_CHARACTER;
      },
      get DOWN_CHARACTER() {
        return DOWN_CHARACTER;
      },
      get ESCAPE_CHARACTER() {
        return ESCAPE_CHARACTER;
      },
      get ETX_CHARACTER() {
        return ETX_CHARACTER;
      },
      get EXCLAMATION_MARK_CHARACTER() {
        return EXCLAMATION_MARK_CHARACTER;
      },
      get FORWARD_SLASH_CHARACTER() {
        return FORWARD_SLASH_CHARACTER;
      },
      get HAT_CHARACTER() {
        return HAT_CHARACTER;
      },
      get LEFT_CHARACTER() {
        return LEFT_CHARACTER;
      },
      get NEW_LINE_CHARACTER() {
        return NEW_LINE_CHARACTER;
      },
      get OPENING_BRACKET_CHARACTER() {
        return OPENING_BRACKET_CHARACTER;
      },
      get OPENING_CURLY_BRACKET_CHARACTER() {
        return OPENING_CURLY_BRACKET_CHARACTER;
      },
      get OPENING_SQUARE_BRACKET_CHARACTER() {
        return OPENING_SQUARE_BRACKET_CHARACTER;
      },
      get PERIOD_CHARACTER() {
        return PERIOD_CHARACTER;
      },
      get PLUS_CHARACTER() {
        return PLUS_CHARACTER;
      },
      get QUESTION_MARK_CHARACTER() {
        return QUESTION_MARK_CHARACTER;
      },
      get RIGHT_CHARACTER() {
        return RIGHT_CHARACTER;
      },
      get SPACE_CHARACTER() {
        return SPACE_CHARACTER;
      },
      get UP_CHARACTER() {
        return UP_CHARACTER;
      },
      get WILDCARD_CHARACTER() {
        return WILDCARD_CHARACTER;
      },
      get default() {
        return _default;
      }
    });
    var UP_CHARACTER = "[A";
    var ETX_CHARACTER = "";
    var BAR_CHARACTER = "|";
    var HAT_CHARACTER = "^";
    var PLUS_CHARACTER = "+";
    var DASH_CHARACTER = "-";
    var DOWN_CHARACTER = "[B";
    var LEFT_CHARACTER = "[D";
    var RIGHT_CHARACTER = "[C";
    var SPACE_CHARACTER = " ";
    var COMMA_CHARACTER = ",";
    var COLON_CHARACTER = ":";
    var PERIOD_CHARACTER = ".";
    var DOLLAR_CHARACTER = "$";
    var CTRL_C_CHARACTER = "^C";
    var ESCAPE_CHARACTER = "";
    var ASTERISK_CHARACTER = "*";
    var WILDCARD_CHARACTER = "*";
    var BACKTICK_DELIMITER = "`";
    var NEW_LINE_CHARACTER = "\n";
    var AMPERSAND_CHARACTER = "&";
    var BACKSLASH_CHARACTER = "\\";
    var BACKSPACE_CHARACTER = String.fromCharCode(127);
    var QUESTION_MARK_CHARACTER = "?";
    var FORWARD_SLASH_CHARACTER = "/";
    var OPENING_BRACKET_CHARACTER = "(";
    var CLOSING_BRACKET_CHARACTER = ")";
    var CARRIAGE_RETURN_CHARACTER = "\r";
    var EXCLAMATION_MARK_CHARACTER = "!";
    var OPENING_CURLY_BRACKET_CHARACTER = "{";
    var CLOSING_CURLY_BRACKET_CHARACTER = "}";
    var OPENING_SQUARE_BRACKET_CHARACTER = "[";
    var CLOSING_SQUARE_BRACKET_CHARACTER = "]";
    var _default = {
      UP_CHARACTER,
      ETX_CHARACTER,
      BAR_CHARACTER,
      HAT_CHARACTER,
      PLUS_CHARACTER,
      DASH_CHARACTER,
      DOWN_CHARACTER,
      LEFT_CHARACTER,
      RIGHT_CHARACTER,
      SPACE_CHARACTER,
      COMMA_CHARACTER,
      COLON_CHARACTER,
      PERIOD_CHARACTER,
      DOLLAR_CHARACTER,
      CTRL_C_CHARACTER,
      ESCAPE_CHARACTER,
      ASTERISK_CHARACTER,
      WILDCARD_CHARACTER,
      BACKTICK_DELIMITER,
      NEW_LINE_CHARACTER,
      AMPERSAND_CHARACTER,
      BACKSLASH_CHARACTER,
      BACKSPACE_CHARACTER,
      QUESTION_MARK_CHARACTER,
      FORWARD_SLASH_CHARACTER,
      OPENING_BRACKET_CHARACTER,
      CLOSING_BRACKET_CHARACTER,
      CARRIAGE_RETURN_CHARACTER,
      EXCLAMATION_MARK_CHARACTER,
      OPENING_CURLY_BRACKET_CHARACTER,
      CLOSING_CURLY_BRACKET_CHARACTER,
      OPENING_SQUARE_BRACKET_CHARACTER,
      CLOSING_SQUARE_BRACKET_CHARACTER
    };
  });

  // node_modules/necessary/lib/statusCodes.js
  var require_statusCodes = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get BAD_GATEWAY_502_STATUS_CODE() {
        return BAD_GATEWAY_502_STATUS_CODE;
      },
      get BAD_REQUEST_400_STATUS_CODE() {
        return BAD_REQUEST_400_STATUS_CODE;
      },
      get CREATED_201_STATUS_CODE() {
        return CREATED_201_STATUS_CODE;
      },
      get FORBIDDEN_403_STATUS_CODE() {
        return FORBIDDEN_403_STATUS_CODE;
      },
      get FOUND_302_STATUS_CODE() {
        return FOUND_302_STATUS_CODE;
      },
      get INTERNAL_SERVER_ERROR_500_STATUS_CODE() {
        return INTERNAL_SERVER_ERROR_500_STATUS_CODE;
      },
      get NOT_FOUND_404_STATUS_CODE() {
        return NOT_FOUND_404_STATUS_CODE;
      },
      get NO_CONTENT_204_STATUS_CODE() {
        return NO_CONTENT_204_STATUS_CODE;
      },
      get OK_200_STATUS_CODE() {
        return OK_200_STATUS_CODE;
      },
      get REQUEST_TIMEOUT_408_STATUS_CODE() {
        return REQUEST_TIMEOUT_408_STATUS_CODE;
      },
      get SEE_OTHER_303_STATUS_CODE() {
        return SEE_OTHER_303_STATUS_CODE;
      },
      get SERVICE_UNAVAILABLE_503_STATUS_CODE() {
        return SERVICE_UNAVAILABLE_503_STATUS_CODE;
      },
      get TOO_MANY_REQUESTS_429_STATUS_CODE() {
        return TOO_MANY_REQUESTS_429_STATUS_CODE;
      },
      get UNAUTHORIZED_401_STATUS_CODE() {
        return UNAUTHORIZED_401_STATUS_CODE;
      },
      get ZERO_0_STATUS_CODE() {
        return ZERO_0_STATUS_CODE;
      },
      get default() {
        return _default;
      }
    });
    var ZERO_0_STATUS_CODE = 0;
    var OK_200_STATUS_CODE = 200;
    var FOUND_302_STATUS_CODE = 302;
    var CREATED_201_STATUS_CODE = 201;
    var SEE_OTHER_303_STATUS_CODE = 303;
    var FORBIDDEN_403_STATUS_CODE = 403;
    var NOT_FOUND_404_STATUS_CODE = 404;
    var NO_CONTENT_204_STATUS_CODE = 204;
    var BAD_GATEWAY_502_STATUS_CODE = 502;
    var BAD_REQUEST_400_STATUS_CODE = 400;
    var UNAUTHORIZED_401_STATUS_CODE = 401;
    var REQUEST_TIMEOUT_408_STATUS_CODE = 408;
    var TOO_MANY_REQUESTS_429_STATUS_CODE = 429;
    var SERVICE_UNAVAILABLE_503_STATUS_CODE = 503;
    var INTERNAL_SERVER_ERROR_500_STATUS_CODE = 500;
    var _default = {
      ZERO_0_STATUS_CODE,
      OK_200_STATUS_CODE,
      FOUND_302_STATUS_CODE,
      CREATED_201_STATUS_CODE,
      SEE_OTHER_303_STATUS_CODE,
      FORBIDDEN_403_STATUS_CODE,
      NOT_FOUND_404_STATUS_CODE,
      NO_CONTENT_204_STATUS_CODE,
      BAD_GATEWAY_502_STATUS_CODE,
      BAD_REQUEST_400_STATUS_CODE,
      UNAUTHORIZED_401_STATUS_CODE,
      REQUEST_TIMEOUT_408_STATUS_CODE,
      TOO_MANY_REQUESTS_429_STATUS_CODE,
      SERVICE_UNAVAILABLE_503_STATUS_CODE,
      INTERNAL_SERVER_ERROR_500_STATUS_CODE
    };
  });

  // node_modules/necessary/lib/contentTypes.js
  var require_contentTypes = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get APPLICATION_JSON_CHARSET_UTF_8_CONTENT_TYPE() {
        return APPLICATION_JSON_CHARSET_UTF_8_CONTENT_TYPE;
      },
      get APPLICATION_JSON_CONTENT_TYPE() {
        return APPLICATION_JSON_CONTENT_TYPE;
      },
      get APPLICATION_OCTET_STREAM_CONTENT_TYPE() {
        return APPLICATION_OCTET_STREAM_CONTENT_TYPE;
      },
      get APPLICATION_X_WWW_FORM_ENCODED_CHARSET_UTF_8_CONTENT_TYPE() {
        return APPLICATION_X_WWW_FORM_ENCODED_CHARSET_UTF_8_CONTENT_TYPE;
      },
      get APPLICATION_X_WWW_FORM_ENCODED_CONTENT_TYPE() {
        return APPLICATION_X_WWW_FORM_ENCODED_CONTENT_TYPE;
      },
      get TEXT_HTML_CHARSET_UTF_8_CONTENT_TYPE() {
        return TEXT_HTML_CHARSET_UTF_8_CONTENT_TYPE;
      },
      get TEXT_HTML_CONTENT_TYPE() {
        return TEXT_HTML_CONTENT_TYPE;
      },
      get TEXT_PLAIN_CHARSET_UTF_8_CONTENT_TYPE() {
        return TEXT_PLAIN_CHARSET_UTF_8_CONTENT_TYPE;
      },
      get TEXT_PLAIN_CONTENT_TYPE() {
        return TEXT_PLAIN_CONTENT_TYPE;
      },
      get default() {
        return _default;
      }
    });
    var TEXT_HTML_CONTENT_TYPE = "text/html";
    var TEXT_PLAIN_CONTENT_TYPE = "text/plain";
    var APPLICATION_JSON_CONTENT_TYPE = "application/json";
    var TEXT_HTML_CHARSET_UTF_8_CONTENT_TYPE = "text/html; charset=utf-8";
    var TEXT_PLAIN_CHARSET_UTF_8_CONTENT_TYPE = "text/plain; charset=utf-8";
    var APPLICATION_OCTET_STREAM_CONTENT_TYPE = "application/octet-stream";
    var APPLICATION_X_WWW_FORM_ENCODED_CONTENT_TYPE = "application/x-www-form-urlencoded";
    var APPLICATION_JSON_CHARSET_UTF_8_CONTENT_TYPE = "application/json; charset=utf-8";
    var APPLICATION_X_WWW_FORM_ENCODED_CHARSET_UTF_8_CONTENT_TYPE = "application/x-www-form-urlencoded; charset=utf-8";
    var _default = {
      TEXT_HTML_CONTENT_TYPE,
      TEXT_PLAIN_CONTENT_TYPE,
      APPLICATION_JSON_CONTENT_TYPE,
      TEXT_HTML_CHARSET_UTF_8_CONTENT_TYPE,
      TEXT_PLAIN_CHARSET_UTF_8_CONTENT_TYPE,
      APPLICATION_OCTET_STREAM_CONTENT_TYPE,
      APPLICATION_JSON_CHARSET_UTF_8_CONTENT_TYPE,
      APPLICATION_X_WWW_FORM_ENCODED_CONTENT_TYPE,
      APPLICATION_X_WWW_FORM_ENCODED_CHARSET_UTF_8_CONTENT_TYPE
    };
  });

  // node_modules/necessary/lib/statusMessages.js
  var require_statusMessages = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get BAD_GATEWAY_502_STATUS_MESSAGE() {
        return BAD_GATEWAY_502_STATUS_MESSAGE;
      },
      get BAD_REQUEST_400_STATUS_MESSAGE() {
        return BAD_REQUEST_400_STATUS_MESSAGE;
      },
      get CREATED_201_STATUS_MESSAGE() {
        return CREATED_201_STATUS_MESSAGE;
      },
      get FORBIDDEN_403_STATUS_MESSAGE() {
        return FORBIDDEN_403_STATUS_MESSAGE;
      },
      get FOUND_302_STATUS_MESSAGE() {
        return FOUND_302_STATUS_MESSAGE;
      },
      get INTERNAL_SERVER_ERROR_500_STATUS_MESSAGE() {
        return INTERNAL_SERVER_ERROR_500_STATUS_MESSAGE;
      },
      get NOT_FOUND_404_STATUS_MESSAGE() {
        return NOT_FOUND_404_STATUS_MESSAGE;
      },
      get NO_CONTENT_204_STATUS_MESSAGE() {
        return NO_CONTENT_204_STATUS_MESSAGE;
      },
      get OK_200_STATUS_MESSAGE() {
        return OK_200_STATUS_MESSAGE;
      },
      get REQUEST_TIMEOUT_408_STATUS_MESSAGE() {
        return REQUEST_TIMEOUT_408_STATUS_MESSAGE;
      },
      get SEE_OTHER_303_STATUS_MESSAGE() {
        return SEE_OTHER_303_STATUS_MESSAGE;
      },
      get SERVICE_UNAVAILABLE_503_STATUS_MESSAGE() {
        return SERVICE_UNAVAILABLE_503_STATUS_MESSAGE;
      },
      get TOO_MANY_REQUESTS_429_STATUS_MESSAGE() {
        return TOO_MANY_REQUESTS_429_STATUS_MESSAGE;
      },
      get UNAUTHORIZED_401_STATUS_MESSAGE() {
        return UNAUTHORIZED_401_STATUS_MESSAGE;
      },
      get ZERO_0_STATUS_MESSAGE() {
        return ZERO_0_STATUS_MESSAGE;
      },
      get default() {
        return _default;
      }
    });
    var ZERO_0_STATUS_MESSAGE = "";
    var OK_200_STATUS_MESSAGE = "OK";
    var FOUND_302_STATUS_MESSAGE = "Found";
    var CREATED_201_STATUS_MESSAGE = "Created";
    var SEE_OTHER_303_STATUS_MESSAGE = "See other";
    var FORBIDDEN_403_STATUS_MESSAGE = "Forbidden";
    var NOT_FOUND_404_STATUS_MESSAGE = "Not found";
    var NO_CONTENT_204_STATUS_MESSAGE = "No content";
    var BAD_GATEWAY_502_STATUS_MESSAGE = "Bad gateway";
    var BAD_REQUEST_400_STATUS_MESSAGE = "Bad request";
    var UNAUTHORIZED_401_STATUS_MESSAGE = "Unauthorized";
    var REQUEST_TIMEOUT_408_STATUS_MESSAGE = "Request timeout";
    var TOO_MANY_REQUESTS_429_STATUS_MESSAGE = "Too many requests";
    var SERVICE_UNAVAILABLE_503_STATUS_MESSAGE = "Service unavailable";
    var INTERNAL_SERVER_ERROR_500_STATUS_MESSAGE = "Internal server error";
    var _default = {
      ZERO_0_STATUS_MESSAGE,
      OK_200_STATUS_MESSAGE,
      FOUND_302_STATUS_MESSAGE,
      CREATED_201_STATUS_MESSAGE,
      SEE_OTHER_303_STATUS_MESSAGE,
      FORBIDDEN_403_STATUS_MESSAGE,
      NOT_FOUND_404_STATUS_MESSAGE,
      NO_CONTENT_204_STATUS_MESSAGE,
      BAD_GATEWAY_502_STATUS_MESSAGE,
      BAD_REQUEST_400_STATUS_MESSAGE,
      UNAUTHORIZED_401_STATUS_MESSAGE,
      REQUEST_TIMEOUT_408_STATUS_MESSAGE,
      TOO_MANY_REQUESTS_429_STATUS_MESSAGE,
      SERVICE_UNAVAILABLE_503_STATUS_MESSAGE,
      INTERNAL_SERVER_ERROR_500_STATUS_MESSAGE
    };
  });

  // node_modules/necessary/lib/constants.js
  var require_constants2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get BOOLEAN() {
        return BOOLEAN;
      },
      get DATA() {
        return DATA;
      },
      get DEFAULT() {
        return DEFAULT;
      },
      get EMPTY_STRING() {
        return EMPTY_STRING;
      },
      get ENVIRONMENT() {
        return ENVIRONMENT;
      },
      get ERROR() {
        return ERROR;
      },
      get FUNCTION() {
        return FUNCTION;
      },
      get NUMBER() {
        return NUMBER;
      },
      get OBJECT() {
        return OBJECT;
      },
      get PACKAGE_JSON() {
        return PACKAGE_JSON;
      },
      get STRING() {
        return STRING;
      },
      get ZERO() {
        return ZERO;
      }
    });
    var ZERO = "0";
    var DATA = "data";
    var ERROR = "error";
    var STRING = "string";
    var OBJECT = "object";
    var NUMBER = "number";
    var BOOLEAN = "boolean";
    var DEFAULT = "default";
    var FUNCTION = "function";
    var ENVIRONMENT = "ENVIRONMENT";
    var EMPTY_STRING = "";
    var PACKAGE_JSON = "package.json";
  });

  // node_modules/necessary/lib/utilities/array.js
  var require_array2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get augment() {
        return augment;
      },
      get back() {
        return back;
      },
      get backwardsEvery() {
        return backwardsEvery;
      },
      get backwardsFind() {
        return backwardsFind;
      },
      get backwardsFindIndex() {
        return backwardsFindIndex;
      },
      get backwardsForEach() {
        return backwardsForEach;
      },
      get backwardsReduce() {
        return backwardsReduce;
      },
      get backwardsSome() {
        return backwardsSome;
      },
      get clear() {
        return clear;
      },
      get combine() {
        return combine;
      },
      get compare() {
        return compare;
      },
      get compress() {
        return compress;
      },
      get concat() {
        return concat;
      },
      get copy() {
        return copy;
      },
      get correlate() {
        return correlate;
      },
      get default() {
        return _default;
      },
      get eighth() {
        return eighth;
      },
      get eighthLast() {
        return eighthLast;
      },
      get extract() {
        return extract;
      },
      get fifth() {
        return fifth;
      },
      get fifthLast() {
        return fifthLast;
      },
      get filter() {
        return filter;
      },
      get find() {
        return find;
      },
      get first() {
        return first;
      },
      get firstLast() {
        return firstLast;
      },
      get forwardsEvery() {
        return forwardsEvery;
      },
      get forwardsFind() {
        return forwardsFind;
      },
      get forwardsFindIndex() {
        return forwardsFindIndex;
      },
      get forwardsForEach() {
        return forwardsForEach;
      },
      get forwardsReduce() {
        return forwardsReduce;
      },
      get forwardsSome() {
        return forwardsSome;
      },
      get fourth() {
        return fourth;
      },
      get fourthLast() {
        return fourthLast;
      },
      get front() {
        return front;
      },
      get head() {
        return head;
      },
      get last() {
        return last;
      },
      get match() {
        return match;
      },
      get merge() {
        return merge;
      },
      get ninth() {
        return ninth;
      },
      get ninthLast() {
        return ninthLast;
      },
      get patch() {
        return patch;
      },
      get prune() {
        return prune;
      },
      get push() {
        return push;
      },
      get replace() {
        return replace;
      },
      get resolve() {
        return resolve;
      },
      get reverse() {
        return reverse;
      },
      get second() {
        return second;
      },
      get secondLast() {
        return secondLast;
      },
      get separate() {
        return separate;
      },
      get seventh() {
        return seventh;
      },
      get seventhLast() {
        return seventhLast;
      },
      get sixth() {
        return sixth;
      },
      get sixthLast() {
        return sixthLast;
      },
      get splice() {
        return splice;
      },
      get tail() {
        return tail;
      },
      get tenth() {
        return tenth;
      },
      get third() {
        return third;
      },
      get thirdLast() {
        return thirdLast;
      },
      get unshift() {
        return unshift;
      }
    });
    function _array_like_to_array(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _array_without_holes(arr) {
      if (Array.isArray(arr))
        return _array_like_to_array(arr);
    }
    function _instanceof(left, right) {
      if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
        return !!right[Symbol.hasInstance](left);
      } else {
        return left instanceof right;
      }
    }
    function _iterable_to_array(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _non_iterable_spread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _to_consumable_array(arr) {
      return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
    }
    function _unsupported_iterable_to_array(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _array_like_to_array(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _array_like_to_array(o, minLen);
    }
    function first(array) {
      return array[0];
    }
    function second(array) {
      return array[1];
    }
    function third(array) {
      return array[2];
    }
    function fourth(array) {
      return array[3];
    }
    function fifth(array) {
      return array[4];
    }
    function sixth(array) {
      return array[5];
    }
    function seventh(array) {
      return array[6];
    }
    function eighth(array) {
      return array[7];
    }
    function ninth(array) {
      return array[8];
    }
    function tenth(array) {
      return array[9];
    }
    function firstLast(array) {
      return array[array.length - 1];
    }
    function secondLast(array) {
      return array[array.length - 2];
    }
    function thirdLast(array) {
      return array[array.length - 3];
    }
    function fourthLast(array) {
      return array[array.length - 4];
    }
    function fifthLast(array) {
      return array[array.length - 5];
    }
    function sixthLast(array) {
      return array[array.length - 6];
    }
    function seventhLast(array) {
      return array[array.length - 7];
    }
    function eighthLast(array) {
      return array[array.length - 8];
    }
    function ninthLast(array) {
      return array[array.length - 9];
    }
    function last(array) {
      return array[array.length - 1];
    }
    function head(array) {
      return array.slice(0, 1);
    }
    function tail(array) {
      return array.slice(1);
    }
    function back(array) {
      return array.slice(array.length - 1);
    }
    function front(array) {
      return array.slice(0, Math.max(1, array.length - 1));
    }
    function push(arrayA, arrayB) {
      Array.prototype.push.apply(arrayA, arrayB);
    }
    function unshift(arrayA, arrayB) {
      Array.prototype.unshift.apply(arrayA, arrayB);
    }
    function concat(arrayA, elementOrArray2) {
      var arrayB = _instanceof(elementOrArray2, Array) ? elementOrArray2 : [
        elementOrArray2
      ];
      push(arrayA, arrayB);
    }
    function clear(array) {
      var start = 0;
      return array.splice(start);
    }
    function copy(arrayA, arrayB) {
      var start = 0, deleteCount = arrayB.length;
      splice(arrayA, start, deleteCount, arrayB);
    }
    function merge(arrayA, arrayB) {
      Array.prototype.push.apply(arrayA, arrayB);
    }
    function match(arrayA, arrayB, callback) {
      var matches = false;
      var arrayALength = arrayA.length, arrayBLength = arrayB.length;
      if (arrayALength === arrayBLength) {
        matches = arrayA.every(function(elementA, index) {
          var elementB = arrayB[index], passed = callback(elementA, elementB, index);
          if (passed) {
            return true;
          }
        });
      }
      return matches;
    }
    function compare(arrayA, arrayB, callback) {
      var coupled = false;
      var arrayALength = arrayA.length, arrayBLength = arrayB.length;
      if (arrayALength === arrayBLength) {
        arrayB = _to_consumable_array(arrayB);
        coupled = arrayA.every(function(elementA, index) {
          var elementB = extract(arrayB, function(elementB2) {
            var result = callback(elementA, elementB2);
            if (result) {
              return true;
            }
          }) || null;
          if (elementB !== null) {
            return true;
          }
        });
      }
      return coupled;
    }
    function correlate(arrayA, arrayB, callback) {
      arrayB = _to_consumable_array(arrayB);
      var correlates = arrayA.every(function(elementA) {
        var elementB = extract(arrayB, function(elementB2) {
          var result = callback(elementA, elementB2);
          if (result) {
            return true;
          }
        }) || null;
        if (elementB !== null) {
          return true;
        }
      });
      return correlates;
    }
    function resolve(arrayA, arrayB, callback) {
      var _loop = function() {
        var arrayALength2 = arrayA.length;
        if (arrayALength2 === 0) {
          return "break";
        }
        var resolved2 = false;
        arrayA.forEach(function(elementA) {
          var passed = callback(elementA);
          if (passed) {
            var elementB = elementA;
            arrayB.push(elementB);
            resolved2 = true;
          }
        });
        if (!resolved2) {
          return "break";
        }
        filter(arrayA, function(elementA) {
          var arrayBIncludesElementA = arrayB.includes(elementA);
          if (!arrayBIncludesElementA) {
            return true;
          }
        });
      };
      var resolved;
      arrayA = _to_consumable_array(arrayA);
      for (; ; ) {
        var _ret = _loop();
        if (_ret === "break")
          break;
      }
      var arrayALength = arrayA.length;
      resolved = arrayALength === 0;
      return resolved;
    }
    function find(array, callback) {
      var elements = [];
      forwardsForEach(array, function(element, index) {
        var passed = callback(element, index);
        if (passed) {
          elements.push(element);
        }
      });
      return elements;
    }
    function replace(array, element, callback) {
      var start;
      var found = array.some(function(element2, index) {
        var passed = callback(element2, index);
        if (passed) {
          start = index;
          return true;
        }
      });
      if (found) {
        var deleteCount = 1;
        array.splice(start, deleteCount, element);
      }
      return found;
    }
    function splice(arrayA, start) {
      var deleteCount = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Infinity, arrayB = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];
      var args = [
        start,
        deleteCount
      ].concat(_to_consumable_array(arrayB)), deletedElements = Array.prototype.splice.apply(arrayA, args);
      return deletedElements;
    }
    function filter(array, callback) {
      var deletedElements = [];
      backwardsForEach(array, function(element, index) {
        var passed = callback(element, index);
        if (!passed) {
          var start = index, deleteCount = 1, deletedElements2 = array.splice(start, deleteCount), firstDeletedElement = first(deletedElements2);
          deletedElements2.unshift(firstDeletedElement);
        }
      });
      return deletedElements;
    }
    function prune(array, callback) {
      var deletedElement = void 0;
      array.some(function(element, index) {
        var passed = callback(element, index);
        if (!passed) {
          var start = index, deleteCount = 1, deletedElements = array.splice(start, deleteCount), firstDeletedElement = first(deletedElements);
          deletedElement = firstDeletedElement;
          return true;
        }
      });
      return deletedElement;
    }
    function extract(array, callback) {
      var deletedElement = void 0;
      array.some(function(element, index) {
        var passed = callback(element, index);
        if (passed) {
          var start = index, deleteCount = 1, deletedElements = array.splice(start, deleteCount), firstDeletedElement = first(deletedElements);
          deletedElement = firstDeletedElement;
          return true;
        }
      });
      return deletedElement;
    }
    function patch(array, element, callback) {
      var found = array.some(function(element2, index) {
        var passed = callback(element2, index);
        if (passed) {
          return true;
        }
      });
      if (found) {
        array.push(element);
      }
      return found;
    }
    function compress(array, callback) {
      var index1 = 0, length = array.length;
      while (index1 < length) {
        var elementB = array[index1];
        for (var index2 = length - 1; index2 > index1; index2--) {
          var elementA = array[index2], passed = callback(elementA, elementB);
          if (passed) {
            var start = index2, deleteCount = 1;
            array.splice(start, deleteCount);
          }
        }
        index1++;
        length = array.length;
      }
    }
    function combine(arrayA, arrayB, callback) {
      var array = _to_consumable_array(arrayA).concat(_to_consumable_array(arrayB));
      compress(array, callback);
      return array;
    }
    function reverse(array) {
      array = _to_consumable_array(array).reverse();
      return array;
    }
    function augment(arrayA, arrayB, callback) {
      arrayB.forEach(function(element, index) {
        var passed = callback(element, index);
        if (passed) {
          arrayA.push(element);
        }
      });
    }
    function separate(array, arrayA, arrayB, callback) {
      array.forEach(function(element, index) {
        var passed = callback(element, index);
        passed ? arrayA.push(element) : arrayB.push(element);
      });
    }
    function forwardsFind(array, callback) {
      var arrayLength = array.length;
      for (var index = 0; index < arrayLength; index++) {
        var element = array[index], passed = callback(element, index);
        if (passed) {
          return element;
        }
      }
      return false;
    }
    function backwardsFind(array, callback) {
      var arrayLength = array.length;
      for (var index = arrayLength - 1; index >= 0; index--) {
        var element = array[index], passed = callback(element, index);
        if (passed) {
          return element;
        }
      }
      return false;
    }
    function forwardsSome(array, callback) {
      var arrayLength = array.length;
      for (var index = 0; index < arrayLength; index++) {
        var element = array[index], passed = callback(element, index);
        if (passed) {
          return true;
        }
      }
      return false;
    }
    function backwardsSome(array, callback) {
      var arrayLength = array.length;
      for (var index = arrayLength - 1; index >= 0; index--) {
        var element = array[index], passed = callback(element, index);
        if (passed) {
          return true;
        }
      }
      return false;
    }
    function forwardsEvery(array, callback) {
      var arrayLength = array.length;
      for (var index = 0; index < arrayLength; index++) {
        var element = array[index], passed = callback(element, index);
        if (!passed) {
          return false;
        }
      }
      return true;
    }
    function backwardsEvery(array, callback) {
      var arrayLength = array.length;
      for (var index = arrayLength - 1; index >= 0; index--) {
        var element = array[index], passed = callback(element, index);
        if (!passed) {
          return false;
        }
      }
      return true;
    }
    function forwardsReduce(array, callback, initialValue) {
      var value = initialValue;
      var arrayLength = array.length;
      for (var index = 0; index < arrayLength; index++) {
        var element = array[index];
        value = callback(value, element, index);
      }
      return value;
    }
    function backwardsReduce(array, callback, initialValue) {
      var value = initialValue;
      var arrayLength = array.length;
      for (var index = arrayLength - 1; index >= 0; index--) {
        var element = array[index];
        value = callback(value, element, index);
      }
      return value;
    }
    function forwardsForEach(array, callback) {
      var arrayLength = array.length;
      for (var index = 0; index < arrayLength; index++) {
        var element = array[index];
        callback(element, index);
      }
    }
    function backwardsForEach(array, callback) {
      var arrayLength = array.length;
      for (var index = arrayLength - 1; index >= 0; index--) {
        var element = array[index];
        callback(element, index);
      }
    }
    function forwardsFindIndex(array, callback) {
      var arrayLength = array.length;
      for (var index = 0; index < arrayLength; index++) {
        var element = array[index], passed = callback(element, index);
        if (passed) {
          return index;
        }
      }
      return -1;
    }
    function backwardsFindIndex(array, callback) {
      var arrayLength = array.length;
      for (var index = arrayLength - 1; index >= 0; index--) {
        var element = array[index], passed = callback(element, index);
        if (passed) {
          return index;
        }
      }
      return -1;
    }
    var _default = {
      first,
      second,
      third,
      fourth,
      fifth,
      sixth,
      seventh,
      eighth,
      ninth,
      firstLast,
      secondLast,
      thirdLast,
      fourthLast,
      fifthLast,
      sixthLast,
      seventhLast,
      eighthLast,
      ninthLast,
      last,
      head,
      tail,
      back,
      front,
      push,
      unshift,
      concat,
      clear,
      copy,
      merge,
      match,
      compare,
      correlate,
      resolve,
      find,
      replace,
      splice,
      filter,
      prune,
      extract,
      patch,
      compress,
      combine,
      reverse,
      augment,
      separate,
      forwardsFind,
      backwardsFind,
      forwardsSome,
      backwardsSome,
      forwardsEvery,
      backwardsEvery,
      forwardsReduce,
      backwardsReduce,
      forwardsForEach,
      backwardsForEach,
      forwardsFindIndex,
      backwardsFindIndex
    };
  });

  // node_modules/necessary/lib/utilities/path.js
  var require_path = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get bottommostNameFromPath() {
        return bottommostNameFromPath;
      },
      get combinePaths() {
        return combinePaths;
      },
      get concatenatePaths() {
        return concatenatePaths;
      },
      get default() {
        return _default;
      },
      get isPathAbsolutePath() {
        return isPathAbsolutePath;
      },
      get isPathName() {
        return isPathName;
      },
      get isPathRelativePath() {
        return isPathRelativePath;
      },
      get isPathTopmostName() {
        return isPathTopmostName;
      },
      get isTopmostNameInAbsolutePath() {
        return isTopmostNameInAbsolutePath;
      },
      get pathWithoutBottommostNameFromPath() {
        return pathWithoutBottommostNameFromPath;
      },
      get pathWithoutTopmostDirectoryNameFromPath() {
        return pathWithoutTopmostDirectoryNameFromPath;
      },
      get topmostDirectoryNameFromPath() {
        return topmostDirectoryNameFromPath;
      },
      get topmostDirectoryPathFromPath() {
        return topmostDirectoryPathFromPath;
      }
    });
    var _constants = require_constants2();
    var _array = require_array2();
    function _array_like_to_array(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _array_without_holes(arr) {
      if (Array.isArray(arr))
        return _array_like_to_array(arr);
    }
    function _iterable_to_array(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _non_iterable_spread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _to_consumable_array(arr) {
      return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
    }
    function _unsupported_iterable_to_array(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _array_like_to_array(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _array_like_to_array(o, minLen);
    }
    function isPathName(path) {
      path = path.replace(/^\//, _constants.EMPTY_STRING).replace(/\/$/, _constants.EMPTY_STRING);
      var pathName = /\//.test(path) === false;
      return pathName;
    }
    function isPathTopmostName(path) {
      var pathName = isPathName(path), pathAbsolutePath = isPathAbsolutePath(path), pathTopmostName = pathName && pathAbsolutePath;
      return pathTopmostName;
    }
    function isPathRelativePath(path) {
      var pathRelativePath = !/^\//.test(path);
      return pathRelativePath;
    }
    function isPathAbsolutePath(path) {
      var pathAbsolutePath = /^\//.test(path);
      return pathAbsolutePath;
    }
    function isTopmostNameInAbsolutePath(topmostName, absolutePath) {
      var regExp = new RegExp("^".concat(topmostName, "(?:\\/.+)?$")), topmostNameInAbsolutePath = regExp.test(absolutePath);
      return topmostNameInAbsolutePath;
    }
    function combinePaths(path, relativePath) {
      var combinedPath = null;
      var pathNames = path.split(/\//), relativePathNames = relativePath.split(/\//);
      var lastPathName, firstRelativePathName = (0, _array.first)(relativePathNames);
      if (firstRelativePathName === ".") {
        relativePathNames.shift();
      }
      firstRelativePathName = (0, _array.first)(relativePathNames);
      lastPathName = (0, _array.last)(pathNames);
      while (firstRelativePathName === ".." && lastPathName !== void 0) {
        relativePathNames.shift();
        pathNames.pop();
        firstRelativePathName = (0, _array.first)(relativePathNames);
        lastPathName = (0, _array.last)(pathNames);
      }
      if (lastPathName !== void 0) {
        var combinedPathNames = [].concat(pathNames).concat(relativePathNames);
        combinedPath = combinedPathNames.join("/");
      }
      return combinedPath;
    }
    function concatenatePaths(path, relativePath) {
      for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        remainingArguments[_key - 2] = arguments[_key];
      }
      var concatenatedPath;
      path = path.replace(/\/$/, _constants.EMPTY_STRING);
      concatenatedPath = "".concat(path, "/").concat(relativePath);
      var remainingAArgumentsLength = remainingArguments.length;
      if (remainingAArgumentsLength > 0) {
        var _$path = concatenatedPath, _$relativePath = remainingArguments.shift();
        concatenatedPath = concatenatePaths.apply(void 0, [
          _$path,
          _$relativePath
        ].concat(_to_consumable_array(remainingArguments)));
      }
      return concatenatedPath;
    }
    function bottommostNameFromPath(path) {
      var bottommostName = null;
      var matches = path.match(/^.*\/([^\/]+\/?)$/);
      if (matches !== null) {
        var secondMatch = (0, _array.second)(matches);
        bottommostName = secondMatch;
      }
      return bottommostName;
    }
    function topmostDirectoryPathFromPath(path) {
      var matches = path.match(/^(.+)\/[^\/]+\/?$/), secondMatch = (0, _array.second)(matches), topmostDirectoryPath = secondMatch;
      return topmostDirectoryPath;
    }
    function topmostDirectoryNameFromPath(path) {
      var topmostDirectoryName = null;
      var matches = path.match(/^([^\/]+)\/.+$/);
      if (matches !== null) {
        var secondMatch = (0, _array.second)(matches);
        topmostDirectoryName = secondMatch;
      }
      return topmostDirectoryName;
    }
    function pathWithoutBottommostNameFromPath(path) {
      var pathWithoutBottommostName = null;
      var matches = path.match(/^(.*)\/[^\/]+\/?$/);
      if (matches !== null) {
        var secondMatch = (0, _array.second)(matches);
        pathWithoutBottommostName = secondMatch;
      }
      return pathWithoutBottommostName;
    }
    function pathWithoutTopmostDirectoryNameFromPath(path) {
      var pathWithoutTopmostDirectoryName = null;
      var matches = path.match(/^[^\/]+\/(.+)$/);
      if (matches !== null) {
        var secondMatch = (0, _array.second)(matches);
        pathWithoutTopmostDirectoryName = secondMatch;
      }
      return pathWithoutTopmostDirectoryName;
    }
    var _default = {
      isPathName,
      isPathTopmostName,
      isPathRelativePath,
      isPathAbsolutePath,
      isTopmostNameInAbsolutePath,
      combinePaths,
      concatenatePaths,
      bottommostNameFromPath,
      topmostDirectoryPathFromPath,
      topmostDirectoryNameFromPath,
      pathWithoutBottommostNameFromPath,
      pathWithoutTopmostDirectoryNameFromPath
    };
  });

  // node_modules/necessary/lib/utilities/http.js
  var require_http = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return _default;
      },
      get hostnameFromHost() {
        return hostnameFromHost;
      },
      get overwrite() {
        return overwrite;
      },
      get portFromHost() {
        return portFromHost;
      },
      get queryStringFromQuery() {
        return queryStringFromQuery;
      },
      get secureFromHost() {
        return secureFromHost;
      },
      get underwrite() {
        return underwrite;
      },
      get urlFromHostURIAndQuery() {
        return urlFromHostURIAndQuery;
      }
    });
    var _array = require_array2();
    var _constants = require_constants2();
    var _characters = require_characters();
    function overwrite(headers, name, value) {
      var lowerCaseName = name.toLowerCase(), existingNames = Object.getOwnPropertyNames(headers), existingName = existingNames.find(function(existingName2) {
        var existingLowerCaseName = existingName2.toLowerCase();
        if (existingLowerCaseName === lowerCaseName) {
          return true;
        }
      }) || null;
      if (existingName !== null) {
        headers[existingName] = value;
      }
    }
    function underwrite(headers, name, value) {
      var lowerCaseName = name.toLowerCase(), existingNames = Object.getOwnPropertyNames(headers), existingName = existingNames.find(function(existingName2) {
        var existingLowerCaseName = existingName2.toLowerCase();
        if (existingLowerCaseName === lowerCaseName) {
          return true;
        }
      }) || null;
      if (existingName === null) {
        headers[name] = value;
      }
    }
    function portFromHost(host) {
      var port;
      var matches = host.match(/^https?:\/\/([^\/]+)/), secondMatch = (0, _array.second)(matches), index = secondMatch.indexOf(_characters.COLON_CHARACTER);
      if (index === -1) {
        var secure = secureFromHost(host);
        port = secure ? 443 : 80;
      } else {
        var start = index + 1, portString = secondMatch.substring(start);
        port = Number(portString);
      }
      return port;
    }
    function secureFromHost(host) {
      var secure = /^https:\/\//.test(host);
      return secure;
    }
    function hostnameFromHost(host) {
      var matches = host.match(/^https?:\/\/([^:\/]+)/), secondMatch = (0, _array.second)(matches), hostname = secondMatch;
      return hostname;
    }
    function queryStringFromQuery(query) {
      var names = Object.keys(query), namesLength = names.length, lastIndex = namesLength - 1, queryString = names.reduce(function(queryString2, name, index) {
        var value = query[name], encodedName = encodeURIComponent(name), encodedValue = encodeURIComponent(value), ampersandOrNothing = index !== lastIndex ? _characters.AMPERSAND_CHARACTER : _constants.EMPTY_STRING;
        queryString2 += "".concat(encodedName, "=").concat(encodedValue).concat(ampersandOrNothing);
        return queryString2;
      }, _constants.EMPTY_STRING);
      return queryString;
    }
    function urlFromHostURIAndQuery(host, uri, query) {
      var queryString = queryStringFromQuery(query), url = queryString === _constants.EMPTY_STRING ? "".concat(host).concat(uri) : "".concat(host).concat(uri, "?").concat(queryString);
      return url;
    }
    var _default = {
      overwrite,
      underwrite,
      portFromHost,
      secureFromHost,
      hostnameFromHost,
      queryStringFromQuery,
      urlFromHostURIAndQuery
    };
  });

  // node_modules/necessary/lib/utilities/string.js
  var require_string2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return _default;
      },
      get indexOf() {
        return indexOf;
      },
      get strcmp() {
        return strcmp;
      },
      get strlen() {
        return strlen;
      },
      get substring() {
        return substring;
      }
    });
    var _constants = require_constants2();
    function strlen(string) {
      var length = 0;
      var iterator = string[Symbol.iterator]();
      var character = iterator.next();
      while (!character.done) {
        character = iterator.next();
        length++;
      }
      return length;
    }
    function strcmp(stringA, stringB) {
      var difference;
      var iteratorA = stringA[Symbol.iterator](), iteratorB = stringB[Symbol.iterator]();
      var characterA = iteratorA.next(), characterB = iteratorB.next(), codePointA, codePointB;
      while (true) {
        codePointA = characterA.value ? characterA.value.codePointAt(0) : 0;
        codePointB = characterB.value ? characterB.value.codePointAt(0) : 0;
        difference = codePointB - codePointA;
        if (difference !== 0) {
          break;
        }
        if (characterA.done || characterB.done) {
          break;
        }
        characterA = iteratorA.next();
        characterB = iteratorB.next();
      }
      return difference;
    }
    function indexOf(string, searchString) {
      var index = -1, found = false;
      var searchStringLength = strlen(searchString);
      if (searchStringLength > 0) {
        var character;
        var iterator = string[Symbol.iterator](), searchIterator = searchString[Symbol.iterator](), searchCharacter = searchIterator.next();
        character = iterator.next();
        index++;
        while (!character.done) {
          if (character.value === searchCharacter.value) {
            var start = index, end = start + searchStringLength, subString = substring(string, start, end), difference = strcmp(subString, searchString);
            if (difference === 0) {
              found = true;
              break;
            }
          }
          character = iterator.next();
          index++;
        }
      }
      if (!found) {
        index = -1;
      }
      return index;
    }
    function substring(string, start) {
      var end = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Infinity;
      var index = 0;
      var iterator = string[Symbol.iterator](), characters = [];
      var character = iterator.next();
      while (!character.done) {
        if (index === end) {
          break;
        }
        if (index >= start) {
          characters.push(character.value);
        }
        index++;
        character = iterator.next();
      }
      var _$substring = characters.join(_constants.EMPTY_STRING);
      return _$substring;
    }
    var _default = {
      strcmp,
      strlen,
      indexOf,
      substring
    };
  });

  // node_modules/necessary/lib/utilities/version.js
  var require_version = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return _default;
      },
      get migrate() {
        return migrate;
      }
    });
    function migrate(json, migrationMap, latestVersion) {
      var version = json.version;
      while (version !== latestVersion) {
        var migrateFunction = migrationMap[version];
        json = migrateFunction(json);
        version = json.version;
      }
      return json;
    }
    var _default = {
      migrate
    };
  });

  // node_modules/necessary/lib/utilities/asynchronous.js
  var require_asynchronous = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get backwardsForEach() {
        return backwardsForEach;
      },
      get default() {
        return _default;
      },
      get eventually() {
        return eventually;
      },
      get forEach() {
        return forEach;
      },
      get forwardsForEach() {
        return forwardsForEach;
      },
      get repeatedly() {
        return repeatedly;
      },
      get sequence() {
        return sequence;
      },
      get whilst() {
        return whilst;
      }
    });
    function whilst(operation, done, context) {
      var count = -1;
      function next() {
        count++;
        var index = count, terminate = operation(next, done, context, index);
        if (terminate) {
          done();
        }
      }
      next();
    }
    function forEach(array, operation, done, context) {
      var length = array.length;
      var count = -1;
      function next() {
        count++;
        var terminate = count === length;
        if (terminate) {
          done();
        } else {
          var index = count, element = array[index];
          operation(element, next, done, context, index);
        }
      }
      next();
    }
    function sequence(operations, done, context) {
      var length = operations.length;
      var count = -1;
      function next() {
        count++;
        var terminate = count === length;
        if (terminate) {
          done();
        } else {
          var index = count, operation = operations[index];
          operation(next, done, context, index);
        }
      }
      next();
    }
    function eventually(operations, done, context) {
      var length = operations.length;
      var count = 0;
      function next() {
        count++;
        var terminate = count === length;
        if (terminate) {
          done();
        }
      }
      operations.forEach(function(operation, index) {
        operation(next, done, context, index);
      });
    }
    function repeatedly(operation, length, done, context) {
      var count = 0;
      function next() {
        count++;
        var terminate = count === length;
        if (terminate) {
          done();
        }
      }
      for (var index = 0; index < length; index++) {
        operation(next, done, context, index);
      }
    }
    function forwardsForEach(array, operation, done, context) {
      var length = array.length;
      var count = -1;
      function next() {
        count++;
        var terminate = count === length;
        if (terminate) {
          done();
        } else {
          var index = count, element = array[index];
          operation(element, next, done, context, index);
        }
      }
      next();
    }
    function backwardsForEach(array, operation, done, context) {
      var length = array.length;
      var count = length;
      function next() {
        count--;
        var terminate = count === -1;
        if (terminate) {
          done();
        } else {
          var index = count, element = array[index];
          operation(element, next, done, context, index);
        }
      }
      next();
    }
    var _default = {
      whilst,
      forEach,
      sequence,
      eventually,
      repeatedly,
      forwardsForEach,
      backwardsForEach
    };
  });

  // node_modules/necessary/lib/utilities/ajax.js
  var require_ajax = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return _default;
      },
      get get() {
        return get;
      },
      get post() {
        return post;
      },
      get request() {
        return request;
      }
    });
    var _constants = require_constants2();
    var _methods = require_methods();
    var _contentTypes = require_contentTypes();
    var _headers = require_headers();
    var _http = require_http();
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function get(host, uri, query, headers, responseType, callback) {
      if ((typeof headers === "undefined" ? "undefined" : _type_of(headers)) === _constants.FUNCTION) {
        callback = headers;
        responseType = null;
        headers = {};
      }
      if ((typeof responseType === "undefined" ? "undefined" : _type_of(responseType)) === _constants.FUNCTION) {
        callback = responseType;
        if ((typeof headers === "undefined" ? "undefined" : _type_of(headers)) === _constants.STRING) {
          responseType = headers;
          headers = {};
        } else {
          responseType = null;
        }
      }
      var method = _methods.GET_METHOD, accept = _contentTypes.APPLICATION_JSON_CONTENT_TYPE, content = null;
      underwriteAcceptHeader(headers, accept);
      request(host, uri, query, method, content, headers, responseType, callback);
    }
    function post(host, uri, query, content, headers, responseType, callback) {
      if ((typeof headers === "undefined" ? "undefined" : _type_of(headers)) === _constants.FUNCTION) {
        callback = headers;
        responseType = null;
        headers = {};
      }
      if ((typeof responseType === "undefined" ? "undefined" : _type_of(responseType)) === _constants.FUNCTION) {
        callback = responseType;
        if ((typeof headers === "undefined" ? "undefined" : _type_of(headers)) === _constants.STRING) {
          responseType = headers;
          headers = {};
        } else {
          responseType = null;
        }
      }
      var method = _methods.POST_METHOD, accept = _contentTypes.APPLICATION_JSON_CONTENT_TYPE, contentType = _contentTypes.APPLICATION_JSON_CONTENT_TYPE;
      underwriteAcceptHeader(headers, accept);
      underwriteContentTypeHeader(headers, contentType);
      request(host, uri, query, method, content, headers, responseType, callback);
    }
    function request(host, uri, query, method, content, headers, responseType, callback) {
      var url = (0, _http.urlFromHostURIAndQuery)(host, uri, query), accept = headers[_headers.ACCEPT_HEADER] || null, contentType = headers[_headers.CONTENT_TYPE_HEADER] || null, xmlHttpRequest = new XMLHttpRequest();
      if (contentType === _contentTypes.APPLICATION_JSON_CONTENT_TYPE) {
        var json = content, jsonString = JSON.stringify(json);
        content = jsonString;
      }
      if (responseType !== null) {
        Object.assign(xmlHttpRequest, {
          responseType
        });
      }
      xmlHttpRequest.onreadystatechange = function() {
        var readyState = xmlHttpRequest.readyState, status = xmlHttpRequest.status, response = xmlHttpRequest.response, statusCode = status;
        if (readyState == 4) {
          var _$content = response;
          if (accept === _contentTypes.APPLICATION_JSON_CONTENT_TYPE) {
            try {
              var jsonString2 = _$content, json2 = JSON.parse(jsonString2);
              _$content = json2;
            } catch (error) {
              _$content = null;
            }
          }
          callback(_$content, statusCode);
        }
      };
      xmlHttpRequest.open(method, url);
      if (accept !== null) {
        xmlHttpRequest.setRequestHeader(_headers.ACCEPT_HEADER, accept);
      }
      if (contentType !== null) {
        xmlHttpRequest.setRequestHeader(_headers.CONTENT_TYPE_HEADER, contentType);
      }
      content !== null ? xmlHttpRequest.send(content) : xmlHttpRequest.send();
    }
    var _default = {
      get,
      post,
      request
    };
    function underwriteAcceptHeader(headers, accept) {
      var name = _headers.ACCEPT_HEADER, value = accept;
      (0, _http.underwrite)(headers, name, value);
    }
    function underwriteContentTypeHeader(headers, contentTYpe) {
      var name = _headers.CONTENT_TYPE_HEADER, value = contentTYpe;
      (0, _http.underwrite)(headers, name, value);
    }
  });

  // node_modules/necessary/lib/browser.js
  var require_browser = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get ajaxUtilities() {
        return _ajax.default;
      },
      get arrayUtilities() {
        return _array.default;
      },
      get asynchronousUtilities() {
        return _asynchronous.default;
      },
      get characters() {
        return _characters.default;
      },
      get contentTypes() {
        return _contentTypes.default;
      },
      get encodings() {
        return _encodings.default;
      },
      get headers() {
        return _headers.default;
      },
      get httpUtilities() {
        return _http.default;
      },
      get keyCodes() {
        return _keyCodes.default;
      },
      get levels() {
        return _levels.default;
      },
      get methods() {
        return _methods.default;
      },
      get pathUtilities() {
        return _path.default;
      },
      get statusCodes() {
        return _statusCodes.default;
      },
      get statusMessages() {
        return _statusMessages.default;
      },
      get stringUtilities() {
        return _string.default;
      },
      get versionUtilities() {
        return _version.default;
      }
    });
    var _levels = /* @__PURE__ */ _interop_require_default(require_levels());
    var _methods = /* @__PURE__ */ _interop_require_default(require_methods());
    var _headers = /* @__PURE__ */ _interop_require_default(require_headers());
    var _keyCodes = /* @__PURE__ */ _interop_require_default(require_keyCodes());
    var _encodings = /* @__PURE__ */ _interop_require_default(require_encodings());
    var _characters = /* @__PURE__ */ _interop_require_default(require_characters());
    var _statusCodes = /* @__PURE__ */ _interop_require_default(require_statusCodes());
    var _contentTypes = /* @__PURE__ */ _interop_require_default(require_contentTypes());
    var _statusMessages = /* @__PURE__ */ _interop_require_default(require_statusMessages());
    var _path = /* @__PURE__ */ _interop_require_default(require_path());
    var _http = /* @__PURE__ */ _interop_require_default(require_http());
    var _array = /* @__PURE__ */ _interop_require_default(require_array2());
    var _string = /* @__PURE__ */ _interop_require_default(require_string2());
    var _version = /* @__PURE__ */ _interop_require_default(require_version());
    var _asynchronous = /* @__PURE__ */ _interop_require_default(require_asynchronous());
    var _ajax = /* @__PURE__ */ _interop_require_default(require_ajax());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // node_modules/occam-lexers/lib/constants.js
  var require_constants3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get EMPTY_STRING() {
        return EMPTY_STRING;
      },
      get ESCAPED_AMPERSAND() {
        return ESCAPED_AMPERSAND;
      },
      get ESCAPED_GREATER_THAN() {
        return ESCAPED_GREATER_THAN;
      },
      get ESCAPED_LESS_THAN() {
        return ESCAPED_LESS_THAN;
      },
      get U() {
        return U;
      }
    });
    var U = "u";
    var EMPTY_STRING = "";
    var ESCAPED_AMPERSAND = "&amp;";
    var ESCAPED_LESS_THAN = "&lt;";
    var ESCAPED_GREATER_THAN = "&gt;";
  });

  // node_modules/occam-lexers/lib/utilities/content.js
  var require_content = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "sanitiseContent", {
      enumerable: true,
      get: function() {
        return sanitiseContent;
      }
    });
    var _constants = require_constants3();
    function sanitiseContent(content) {
      var sanitisedContent = content.replace(/&/g, _constants.ESCAPED_AMPERSAND).replace(/</g, _constants.ESCAPED_LESS_THAN).replace(/>/g, _constants.ESCAPED_GREATER_THAN);
      return sanitisedContent;
    }
  });

  // node_modules/occam-lexers/lib/types.js
  var require_types = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get commentType() {
        return commentType;
      },
      get default() {
        return _default;
      },
      get endOfLineCommentType() {
        return endOfLineCommentType;
      },
      get endOfLineType() {
        return endOfLineType;
      },
      get endOfMultiLineCommentType() {
        return endOfMultiLineCommentType;
      },
      get middleOfMultiLineCommentType() {
        return middleOfMultiLineCommentType;
      },
      get nameType() {
        return nameType;
      },
      get numberType() {
        return numberType;
      },
      get regularExpressionType() {
        return regularExpressionType;
      },
      get singleLineCommentType() {
        return singleLineCommentType;
      },
      get startOfMultiLineCommentType() {
        return startOfMultiLineCommentType;
      },
      get stringLiteralType() {
        return stringLiteralType;
      },
      get typeType() {
        return typeType;
      },
      get whitespaceType() {
        return whitespaceType;
      }
    });
    var typeType = "type";
    var nameType = "name";
    var numberType = "number";
    var commentType = "comment";
    var endOfLineType = "end-of-line";
    var whitespaceType = "whitespace";
    var stringLiteralType = "string-literal";
    var endOfLineCommentType = "".concat(endOfLineType, " ").concat(commentType);
    var singleLineCommentType = "single-line ".concat(commentType);
    var regularExpressionType = "regular-expression";
    var endOfMultiLineCommentType = "end-of-multi-line ".concat(commentType);
    var startOfMultiLineCommentType = "start-of-multi-line ".concat(commentType);
    var middleOfMultiLineCommentType = "middle-of-multi-line ".concat(commentType);
    var _default = {
      typeType,
      nameType,
      numberType,
      commentType,
      endOfLineType,
      whitespaceType,
      stringLiteralType,
      endOfLineCommentType,
      singleLineCommentType,
      regularExpressionType,
      endOfMultiLineCommentType,
      startOfMultiLineCommentType,
      middleOfMultiLineCommentType
    };
  });

  // node_modules/occam-lexers/lib/token.js
  var require_token = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Token;
      }
    });
    var _necessary = require_browser();
    var _content = require_content();
    var _types = require_types();
    function _array_like_to_array(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _array_without_holes(arr) {
      if (Array.isArray(arr))
        return _array_like_to_array(arr);
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _iterable_to_array(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _non_iterable_spread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _to_consumable_array(arr) {
      return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
    }
    function _unsupported_iterable_to_array(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _array_like_to_array(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _array_like_to_array(o, minLen);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var first = _necessary.arrayUtilities.first;
    var strlen = _necessary.stringUtilities.strlen;
    var Token = /* @__PURE__ */ function() {
      function Token2(type, content, significant) {
        _class_call_check(this, Token2);
        this.type = type;
        this.content = content;
        this.significant = significant;
      }
      _create_class(Token2, [
        {
          key: "getType",
          value: function getType() {
            return this.type;
          }
        },
        {
          key: "getContent",
          value: function getContent() {
            return this.content;
          }
        },
        {
          key: "getContentLength",
          value: function getContentLength() {
            var naive = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
            var contentLength = naive ? this.content.length : strlen(this.content);
            return contentLength;
          }
        },
        {
          key: "isSignificant",
          value: function isSignificant() {
            return this.significant;
          }
        },
        {
          key: "isCommentToken",
          value: function isCommentToken() {
            var typeIncludesCommentType = this.type.includes(_types.commentType), commentToken = typeIncludesCommentType;
            return commentToken;
          }
        },
        {
          key: "isEndOfLineToken",
          value: function isEndOfLineToken() {
            var typeEndOfLineType = this.type.includes(_types.endOfLineType), endOfLineToken = typeEndOfLineType;
            return endOfLineToken;
          }
        },
        {
          key: "isWhitespaceToken",
          value: function isWhitespaceToken() {
            var typeWhitespaceType = this.type === _types.whitespaceType, whitespaceToken = typeWhitespaceType;
            return whitespaceToken;
          }
        },
        {
          key: "match",
          value: function match(token) {
            var matches = false;
            if (token !== null) {
              var type = token.getType(), content = token.getContent(), significant = token.isSignificant();
              matches = this.type === type && this.content === content && this.significant === significant;
            }
            return matches;
          }
        },
        {
          key: "asHTML",
          value: function asHTML() {
            var className = this.type, sanitisedContent = (0, _content.sanitiseContent)(this.content), html = '<span class="'.concat(className, '">').concat(sanitisedContent, "</span>");
            return html;
          }
        },
        {
          key: "clone",
          value: function clone() {
            for (var _len = arguments.length, remainingArguments = new Array(_len), _key = 0; _key < _len; _key++) {
              remainingArguments[_key] = arguments[_key];
            }
            var Class = this.constructor, type = this.type, content = this.content, significant = this.significant, token = _construct(Class, [
              type,
              content,
              significant
            ].concat(_to_consumable_array(remainingArguments)));
            return token;
          }
        }
      ], [
        {
          key: "match",
          value: function match(Class, content, significant) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
              remainingArguments[_key - 3] = arguments[_key];
            }
            var token = null;
            var regularExpression = Class.regularExpression, matches = content.match(regularExpression);
            if (matches !== null) {
              var index = matches.index;
              if (index === 0) {
                var firstMatch = first(matches);
                content = firstMatch;
                var contentLength = content.length;
                if (contentLength > 0) {
                  var type = Class.type;
                  token = _construct(Class, [
                    type,
                    content,
                    significant
                  ].concat(_to_consumable_array(remainingArguments)));
                }
              }
            }
            return token;
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content, significant) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
              remainingArguments[_key - 3] = arguments[_key];
            }
            var type = Class.type, token = _construct(Class, [
              type,
              content,
              significant
            ].concat(_to_consumable_array(remainingArguments)));
            return token;
          }
        },
        {
          key: "fromContentAndType",
          value: function fromContentAndType(Class, content, type, significant) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
              remainingArguments[_key - 4] = arguments[_key];
            }
            return _construct(Class, [
              type,
              content,
              significant
            ].concat(_to_consumable_array(remainingArguments)));
          }
        }
      ]);
      return Token2;
    }();
  });

  // node_modules/occam-lexers/lib/token/significant.js
  var require_significant = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return SignificantToken;
      }
    });
    var _token = /* @__PURE__ */ _interop_require_default(require_token());
    function _array_like_to_array(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _array_without_holes(arr) {
      if (Array.isArray(arr))
        return _array_like_to_array(arr);
    }
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _iterable_to_array(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _non_iterable_spread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _to_consumable_array(arr) {
      return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _unsupported_iterable_to_array(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _array_like_to_array(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _array_like_to_array(o, minLen);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var SignificantToken = /* @__PURE__ */ function(Token) {
      _inherits(SignificantToken2, Token);
      function SignificantToken2() {
        _class_call_check(this, SignificantToken2);
        return _call_super(this, SignificantToken2, arguments);
      }
      _create_class(SignificantToken2, null, [
        {
          key: "match",
          value: function match(Class, content) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              remainingArguments[_key - 2] = arguments[_key];
            }
            var _Token;
            if (content === void 0) {
              content = Class;
              Class = SignificantToken2;
            }
            var significant = true, significantToken = (_Token = _token.default).match.apply(_Token, [
              Class,
              content,
              significant
            ].concat(_to_consumable_array(remainingArguments)));
            return significantToken;
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              remainingArguments[_key - 2] = arguments[_key];
            }
            var _Token;
            if (content === void 0) {
              content = Class;
              Class = SignificantToken2;
            }
            var significant = true, significantToken = (_Token = _token.default).fromContent.apply(_Token, [
              Class,
              content,
              significant
            ].concat(_to_consumable_array(remainingArguments)));
            return significantToken;
          }
        },
        {
          key: "fromContentAndType",
          value: function fromContentAndType(Class, content, type) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
              remainingArguments[_key - 3] = arguments[_key];
            }
            var _Token;
            if (type === void 0) {
              type = content;
              content = Class;
              Class = SignificantToken2;
            }
            var significant = true, significantToken = (_Token = _token.default).fromContentAndType.apply(_Token, [
              Class,
              content,
              type,
              significant
            ].concat(_to_consumable_array(remainingArguments)));
            return significantToken;
          }
        }
      ]);
      return SignificantToken2;
    }(_token.default);
  });

  // node_modules/occam-lexers/lib/rule.js
  var require_rule = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Rule;
      }
    });
    var _necessary = require_browser();
    var _significant = /* @__PURE__ */ _interop_require_default(require_significant());
    var _constants = require_constants3();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var first = _necessary.arrayUtilities.first;
    var Rule = /* @__PURE__ */ function() {
      function Rule2(type, regularExpression) {
        _class_call_check(this, Rule2);
        this.type = type;
        this.regularExpression = regularExpression;
      }
      _create_class(Rule2, [
        {
          key: "getType",
          value: function getType() {
            return this.type;
          }
        },
        {
          key: "getRegularExpression",
          value: function getRegularExpression() {
            return this.regularExpression;
          }
        },
        {
          key: "match",
          value: function match(content) {
            var significantToken = null;
            var matches = content.match(this.regularExpression);
            if (matches !== null) {
              var index = matches.index;
              if (index === 0) {
                var firstMatch = first(matches);
                content = firstMatch;
                var contentLength = content.length;
                if (contentLength > 0) {
                  significantToken = _significant.default.fromContentAndType(content, this.type);
                }
              }
            }
            return significantToken;
          }
        }
      ], [
        {
          key: "fromToken",
          value: function fromToken(Token) {
            var type = Token.type, regularExpression = Token.regularExpression, rule = new Rule2(type, regularExpression);
            return rule;
          }
        },
        {
          key: "fromEntry",
          value: function fromEntry(entry) {
            var entryKeys = Object.keys(entry), firstEntryKey = first(entryKeys), type = firstEntryKey, regularExpressionPattern = entry[type], regularExpression = regularExpressionFromRegularExpressionPattern(regularExpressionPattern), rule = new Rule2(type, regularExpression);
            return rule;
          }
        },
        {
          key: "fromTypeAndRegularExpressionPattern",
          value: function fromTypeAndRegularExpressionPattern(type, regularExpressionPattern) {
            var regularExpression = regularExpressionFromRegularExpressionPattern(regularExpressionPattern), rule = new Rule2(type, regularExpression);
            return rule;
          }
        }
      ]);
      return Rule2;
    }();
    function regularExpressionFromRegularExpressionPattern(regularExpressionPattern) {
      var flags = _constants.U, regExp = new RegExp(regularExpressionPattern, flags), regularExpression = regExp;
      return regularExpression;
    }
  });

  // node_modules/occam-lexers/lib/specialSymbols.js
  var require_specialSymbols = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get asterisk() {
        return asterisk;
      },
      get closeBracket() {
        return closeBracket;
      },
      get default() {
        return _default;
      },
      get ellipsis() {
        return ellipsis;
      },
      get endOfLine() {
        return endOfLine;
      },
      get epsilon() {
        return epsilon;
      },
      get noWhitespace() {
        return noWhitespace;
      },
      get opaque() {
        return opaque;
      },
      get openBracket() {
        return openBracket;
      },
      get plus() {
        return plus;
      },
      get questionMark() {
        return questionMark;
      },
      get semiOpaque() {
        return semiOpaque;
      },
      get separator() {
        return separator;
      },
      get startOfContent() {
        return startOfContent;
      },
      get terminator() {
        return terminator;
      },
      get verticalBar() {
        return verticalBar;
      },
      get wildcard() {
        return wildcard;
      }
    });
    var plus = "+";
    var opaque = ".";
    var epsilon = "\u03B5";
    var wildcard = ".";
    var asterisk = "*";
    var ellipsis = "...";
    var separator = "::=";
    var semiOpaque = "..";
    var terminator = ";";
    var verticalBar = "|";
    var openBracket = "(";
    var closeBracket = ")";
    var questionMark = "?";
    var endOfLine = "<END_OF_LINE>";
    var noWhitespace = "<NO_WHITESPACE>";
    var startOfContent = "<START_OF_CONTENT>";
    var _default = {
      plus,
      opaque,
      epsilon,
      wildcard,
      asterisk,
      ellipsis,
      separator,
      semiOpaque,
      terminator,
      verticalBar,
      openBracket,
      closeBracket,
      questionMark,
      endOfLine,
      noWhitespace,
      startOfContent
    };
  });

  // node_modules/occam-lexers/lib/utilities/rules.js
  var require_rules = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return _default;
      },
      get rulesAsEntries() {
        return rulesAsEntries;
      }
    });
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function rulesAsEntries(rules) {
      var entries = rules.map(function(rule) {
        var entry = ruleAsEntry(rule);
        return entry;
      });
      return entries;
    }
    var _default = {
      rulesAsEntries
    };
    function ruleAsEntry(rule) {
      var type = rule.getType(), regularExpression = rule.getRegularExpression(), source = regularExpression.source, entry = _define_property({}, type, source);
      return entry;
    }
  });

  // node_modules/occam-lexers/lib/utilities/lexer.js
  var require_lexer = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return _default;
      },
      get lexerFromRules() {
        return lexerFromRules;
      },
      get rulesFromEntries() {
        return rulesFromEntries;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function rulesFromEntries(entries) {
      var rules = entries.map(function(entry) {
        var rule = _rule.default.fromEntry(entry);
        return rule;
      });
      return rules;
    }
    function lexerFromRules(Class, rules) {
      var InCommentClasses = InCommentClassesFromClass(Class), NotInCommentClasses = NotInCommentClassesFromClass(Class), lexer = new Class(rules, InCommentClasses, NotInCommentClasses);
      return lexer;
    }
    var _default = {
      rulesFromEntries,
      lexerFromRules
    };
    function InCommentClassesFromClass(Class) {
      var EndOfLineCommentToken = Class.EndOfLineCommentToken, EndOfMultiLineCommentToken = Class.EndOfMultiLineCommentToken, MiddleOfMultiLineCommentToken = Class.MiddleOfMultiLineCommentToken;
      var InCommentClasses = [
        EndOfLineCommentToken,
        EndOfMultiLineCommentToken,
        MiddleOfMultiLineCommentToken
      ];
      return InCommentClasses;
    }
    function NotInCommentClassesFromClass(Class) {
      var EndOfLineToken = Class.EndOfLineToken, WhitespaceToken = Class.WhitespaceToken, SingleLineCommentToken = Class.SingleLineCommentToken, RegularExpressionToken = Class.RegularExpressionToken, StartOfMultiLineCommentToken = Class.StartOfMultiLineCommentToken, SinglyQuotedStringLiteralToken = Class.SinglyQuotedStringLiteralToken, DoublyQuotedStringLiteralToken = Class.DoublyQuotedStringLiteralToken;
      var NotInCommentClasses = [
        EndOfLineToken,
        WhitespaceToken,
        StartOfMultiLineCommentToken,
        SingleLineCommentToken,
        RegularExpressionToken,
        SinglyQuotedStringLiteralToken,
        DoublyQuotedStringLiteralToken
      ];
      return NotInCommentClasses;
    }
  });

  // node_modules/occam-lexers/lib/bnf/entries.js
  var require_entries = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var entries = [
      {
        special: "^(?:\\||\\(|\\)|\\?|\\*|\\+|\\.\\.\\.|\\.\\.|\\.|::=|;|\u03B5|<START_OF_CONTENT>|<NO_WHITESPACE>|<END_OF_LINE>)"
      },
      {
        number: "^(?:0|[1-9][0-9]*)"
      },
      {
        name: "^[\\w~]+"
      },
      {
        type: "^\\[[^\\]]+\\]"
      },
      {
        unassigned: "^[^\\s]+"
      }
    ];
    var _default = entries;
  });

  // node_modules/occam-lexers/lib/utilities/token.js
  var require_token2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "inCommentFromTokenAndInComment", {
      enumerable: true,
      get: function() {
        return inCommentFromTokenAndInComment;
      }
    });
    function inCommentFromTokenAndInComment(token, inComment) {
      var tokenCommentToken = token.isCommentToken();
      if (tokenCommentToken) {
        var commentToken = token, commentTokenInCommentPreserving = commentToken.isInCommentPreserving();
        inComment = commentTokenInCommentPreserving;
      }
      return inComment;
    }
  });

  // node_modules/occam-lexers/lib/common/lexer.js
  var require_lexer2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CommonLexer;
      }
    });
    var _constants = require_constants3();
    var _token = require_token2();
    var _lexer = require_lexer();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var CommonLexer = /* @__PURE__ */ function() {
      function CommonLexer2(rules, InCommentClasses, NotInCommentClasses) {
        _class_call_check(this, CommonLexer2);
        this.rules = rules;
        this.InCommentClasses = InCommentClasses;
        this.NotInCommentClasses = NotInCommentClasses;
      }
      _create_class(CommonLexer2, [
        {
          key: "getRules",
          value: function getRules() {
            return this.rules;
          }
        },
        {
          key: "getInCommentClasses",
          value: function getInCommentClasses() {
            return this.InCommentClasses;
          }
        },
        {
          key: "getNotInCommentClasses",
          value: function getNotInCommentClasses() {
            return this.NotInCommentClasses;
          }
        },
        {
          key: "tokenise",
          value: function tokenise(content) {
            var _this, _loop = function() {
              var token = null;
              var Classes = inComment ? _this.InCommentClasses : _this.NotInCommentClasses;
              Classes.some(function(Class) {
                if (Class !== null) {
                  token = Class.match(content);
                  if (token !== null) {
                    return true;
                  }
                }
              });
              if (token === null) {
                var significantToken = null;
                _this.rules.some(function(rule) {
                  significantToken = rule.match(content);
                  if (significantToken !== null) {
                    token = significantToken;
                    return true;
                  }
                });
              }
              if (token === null) {
                throw new Error("The content '".concat(content, "' cannot be tokenised."));
              }
              tokens.push(token);
              inComment = (0, _token.inCommentFromTokenAndInComment)(token, inComment);
              var naive = true, tokenContentLength = token.getContentLength(naive), start = tokenContentLength;
              content = content.substring(start);
            };
            var inComment = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
            var tokens = [];
            while (content !== _constants.EMPTY_STRING)
              _this = this, _loop();
            return tokens;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing(Class) {
            var entries = Class.entries, rules = (0, _lexer.rulesFromEntries)(entries), lexer = (0, _lexer.lexerFromRules)(Class, rules);
            return lexer;
          }
        },
        {
          key: "fromRules",
          value: function fromRules(Class, rules) {
            var lexer = (0, _lexer.lexerFromRules)(Class, rules);
            return lexer;
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(Class, entries) {
            var rules = (0, _lexer.rulesFromEntries)(entries), lexer = (0, _lexer.lexerFromRules)(Class, rules);
            return lexer;
          }
        }
      ]);
      return CommonLexer2;
    }();
  });

  // node_modules/occam-lexers/lib/token/nonSignificant.js
  var require_nonSignificant = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NonSignificantToken;
      }
    });
    var _token = /* @__PURE__ */ _interop_require_default(require_token());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var NonSignificantToken = /* @__PURE__ */ function(Token) {
      _inherits(NonSignificantToken2, Token);
      function NonSignificantToken2() {
        _class_call_check(this, NonSignificantToken2);
        return _call_super(this, NonSignificantToken2, arguments);
      }
      _create_class(NonSignificantToken2, null, [
        {
          key: "match",
          value: function match(Class, content) {
            var significant = false, nonSignificantToken = _token.default.match(Class, content, significant);
            return nonSignificantToken;
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content) {
            var significant = false, nonSignificantToken = _token.default.fromContent(Class, content, significant);
            return nonSignificantToken;
          }
        },
        {
          key: "fromContentAndType",
          value: function fromContentAndType(Class, content, type) {
            var significant = false, nonSignificantToken = _token.default.fromContentAndType(Class, content, type, significant);
            return nonSignificantToken;
          }
        }
      ]);
      return NonSignificantToken2;
    }(_token.default);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/whitespace.js
  var require_whitespace = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return WhitespaceToken;
      }
    });
    var _nonSignificant = /* @__PURE__ */ _interop_require_default(require_nonSignificant());
    var _types = require_types();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var WhitespaceToken = /* @__PURE__ */ function(NonSignificantToken) {
      _inherits(WhitespaceToken2, NonSignificantToken);
      function WhitespaceToken2() {
        _class_call_check(this, WhitespaceToken2);
        return _call_super(this, WhitespaceToken2, arguments);
      }
      _create_class(WhitespaceToken2, null, [
        {
          key: "match",
          value: function match(content) {
            return _nonSignificant.default.match(WhitespaceToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _nonSignificant.default.fromContent(WhitespaceToken2, content);
          }
        }
      ]);
      return WhitespaceToken2;
    }(_nonSignificant.default);
    _define_property(WhitespaceToken, "type", _types.whitespaceType);
    _define_property(WhitespaceToken, "regularExpression", /^[\t\v ]+/);
  });

  // node_modules/occam-lexers/lib/token/significant/regularExpression.js
  var require_regularExpression = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RegularExpressionToken;
      }
    });
    var _significant = /* @__PURE__ */ _interop_require_default(require_significant());
    var _types = require_types();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var RegularExpressionToken = /* @__PURE__ */ function(SignificantToken) {
      _inherits(RegularExpressionToken2, SignificantToken);
      function RegularExpressionToken2() {
        _class_call_check(this, RegularExpressionToken2);
        return _call_super(this, RegularExpressionToken2, arguments);
      }
      _create_class(RegularExpressionToken2, null, [
        {
          key: "match",
          value: function match(content) {
            return _significant.default.match(RegularExpressionToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _significant.default.fromContent(RegularExpressionToken2, content);
          }
        }
      ]);
      return RegularExpressionToken2;
    }(_significant.default);
    _define_property(RegularExpressionToken, "type", _types.regularExpressionType);
    _define_property(RegularExpressionToken, "regularExpression", /^\/(?:\\[^\s]|[^\/\r\n\f])*\//);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/endOfLine.js
  var require_endOfLine = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return EndOfLineNonSignificantToken;
      }
    });
    var _nonSignificant = /* @__PURE__ */ _interop_require_default(require_nonSignificant());
    var _types = require_types();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var EndOfLineNonSignificantToken = /* @__PURE__ */ function(NonSignificantToken) {
      _inherits(EndOfLineNonSignificantToken2, NonSignificantToken);
      function EndOfLineNonSignificantToken2() {
        _class_call_check(this, EndOfLineNonSignificantToken2);
        return _call_super(this, EndOfLineNonSignificantToken2, arguments);
      }
      _create_class(EndOfLineNonSignificantToken2, [
        {
          key: "asHTML",
          value: function asHTML() {
            var content = this.getContent(), html = content;
            return html;
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _nonSignificant.default.match(EndOfLineNonSignificantToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _nonSignificant.default.fromContent(EndOfLineNonSignificantToken2, content);
          }
        }
      ]);
      return EndOfLineNonSignificantToken2;
    }(_nonSignificant.default);
    _define_property(EndOfLineNonSignificantToken, "type", _types.endOfLineType);
    _define_property(EndOfLineNonSignificantToken, "regularExpression", /^(?:\r\n|\r|\n|\f)/);
  });

  // node_modules/occam-lexers/lib/token/significant/stringLiteral.js
  var require_stringLiteral = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return StringLiteralToken;
      }
    });
    var _necessary = require_browser();
    var _significant = /* @__PURE__ */ _interop_require_default(require_significant());
    var _types = require_types();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var substring = _necessary.stringUtilities.substring;
    var StringLiteralToken = /* @__PURE__ */ function(SignificantToken) {
      _inherits(StringLiteralToken2, SignificantToken);
      function StringLiteralToken2() {
        _class_call_check(this, StringLiteralToken2);
        return _call_super(this, StringLiteralToken2, arguments);
      }
      _create_class(StringLiteralToken2, [
        {
          key: "getString",
          value: function getString() {
            var content = this.getContent(), contentLength = this.getContentLength(), start = 1, end = contentLength - 1, string = substring(content, start, end);
            return string;
          }
        }
      ], [
        {
          key: "match",
          value: function match(Class, content) {
            return _significant.default.match(Class, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content) {
            return _significant.default.fromContent(Class, content);
          }
        }
      ]);
      return StringLiteralToken2;
    }(_significant.default);
    _define_property(StringLiteralToken, "type", _types.stringLiteralType);
  });

  // node_modules/occam-lexers/lib/token/significant/stringLiteral/doublyQuoted.js
  var require_doublyQuoted = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return DoublyQuotedStringLiteralToken;
      }
    });
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var DoublyQuotedStringLiteralToken = /* @__PURE__ */ function(StringLiteralToken) {
      _inherits(DoublyQuotedStringLiteralToken2, StringLiteralToken);
      function DoublyQuotedStringLiteralToken2() {
        _class_call_check(this, DoublyQuotedStringLiteralToken2);
        return _call_super(this, DoublyQuotedStringLiteralToken2, arguments);
      }
      _create_class(DoublyQuotedStringLiteralToken2, null, [
        {
          key: "match",
          value: function match(content) {
            return _stringLiteral.default.match(DoublyQuotedStringLiteralToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _stringLiteral.default.fromContent(DoublyQuotedStringLiteralToken2, content);
          }
        }
      ]);
      return DoublyQuotedStringLiteralToken2;
    }(_stringLiteral.default);
    _define_property(DoublyQuotedStringLiteralToken, "regularExpression", /^"(?:\\[^\s]|[^"\\\r\n])*"/);
  });

  // node_modules/occam-lexers/lib/bnf/lexer.js
  var require_lexer3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return BNFLexer;
      }
    });
    var _entries = /* @__PURE__ */ _interop_require_default(require_entries());
    var _lexer = /* @__PURE__ */ _interop_require_default(require_lexer2());
    var _whitespace = /* @__PURE__ */ _interop_require_default(require_whitespace());
    var _regularExpression = /* @__PURE__ */ _interop_require_default(require_regularExpression());
    var _endOfLine = /* @__PURE__ */ _interop_require_default(require_endOfLine());
    var _doublyQuoted = /* @__PURE__ */ _interop_require_default(require_doublyQuoted());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function get(target2, property2, receiver2) {
          var base = _super_prop_base(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2 || target2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _super_prop_base(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _get_prototype_of(object);
        if (object === null)
          break;
      }
      return object;
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var BNFLexer = /* @__PURE__ */ function(CommonLexer) {
      _inherits(BNFLexer2, CommonLexer);
      function BNFLexer2() {
        _class_call_check(this, BNFLexer2);
        return _call_super(this, BNFLexer2, arguments);
      }
      _create_class(BNFLexer2, [
        {
          key: "tokensFromBNF",
          value: function tokensFromBNF(bnf) {
            var content = bnf, tokens = _get(_get_prototype_of(BNFLexer2.prototype), "tokenise", this).call(this, content);
            return tokens;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _lexer.default.fromNothing(BNFLexer2);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _lexer.default.fromRules(BNFLexer2, rules);
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(entries) {
            return _lexer.default.fromEntries(BNFLexer2, entries);
          }
        }
      ]);
      return BNFLexer2;
    }(_lexer.default);
    _define_property(BNFLexer, "entries", _entries.default);
    _define_property(BNFLexer, "EndOfLineToken", _endOfLine.default);
    _define_property(BNFLexer, "WhitespaceToken", _whitespace.default);
    _define_property(BNFLexer, "EndOfLineCommentToken", null);
    _define_property(BNFLexer, "RegularExpressionToken", _regularExpression.default);
    _define_property(BNFLexer, "SingleLineCommentToken", null);
    _define_property(BNFLexer, "EndOfMultiLineCommentToken", null);
    _define_property(BNFLexer, "StartOfMultiLineCommentToken", null);
    _define_property(BNFLexer, "MiddleOfMultiLineCommentToken", null);
    _define_property(BNFLexer, "SinglyQuotedStringLiteralToken", null);
    _define_property(BNFLexer, "DoublyQuotedStringLiteralToken", _doublyQuoted.default);
  });

  // node_modules/occam-lexers/lib/basic/entries.js
  var require_entries2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var entries = [
      {
        digit: "^\\d+"
      },
      {
        bracket: "^(?:\\(|\\))"
      },
      {
        operator: "^(?:\\+|-|\\*|\\/)"
      },
      {
        unassigned: "^[^\\s]"
      }
    ];
    var _default = entries;
  });

  // node_modules/occam-lexers/lib/token/significant/stringLiteral/singlyQuoted.js
  var require_singlyQuoted = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return SinglyQuotedStringLiteralToken;
      }
    });
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var SinglyQuotedStringLiteralToken = /* @__PURE__ */ function(StringLiteralToken) {
      _inherits(SinglyQuotedStringLiteralToken2, StringLiteralToken);
      function SinglyQuotedStringLiteralToken2() {
        _class_call_check(this, SinglyQuotedStringLiteralToken2);
        return _call_super(this, SinglyQuotedStringLiteralToken2, arguments);
      }
      _create_class(SinglyQuotedStringLiteralToken2, null, [
        {
          key: "match",
          value: function match(content) {
            return _stringLiteral.default.match(SinglyQuotedStringLiteralToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _stringLiteral.default.fromContent(SinglyQuotedStringLiteralToken2, content);
          }
        }
      ]);
      return SinglyQuotedStringLiteralToken2;
    }(_stringLiteral.default);
    _define_property(SinglyQuotedStringLiteralToken, "regularExpression", /^'(?:\\[^\s]|[^'\\\r\n])*'/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/singleLine.js
  var require_singleLine = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return SingleLineCommentToken;
      }
    });
    var _nonSignificant = /* @__PURE__ */ _interop_require_default(require_nonSignificant());
    var _types = require_types();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var SingleLineCommentToken = /* @__PURE__ */ function(NonSignificantToken) {
      _inherits(SingleLineCommentToken2, NonSignificantToken);
      function SingleLineCommentToken2() {
        _class_call_check(this, SingleLineCommentToken2);
        return _call_super(this, SingleLineCommentToken2, arguments);
      }
      _create_class(SingleLineCommentToken2, [
        {
          key: "isInCommentPreserving",
          value: function isInCommentPreserving() {
            var inCommentPreserving = false;
            return inCommentPreserving;
          }
        }
      ], [
        {
          key: "match",
          value: function match(Class, content) {
            return _nonSignificant.default.match(Class, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content) {
            return _nonSignificant.default.fromContent(Class, content);
          }
        }
      ]);
      return SingleLineCommentToken2;
    }(_nonSignificant.default);
    _define_property(SingleLineCommentToken, "type", _types.singleLineCommentType);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/singleLine/pythonStyle.js
  var require_pythonStyle = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return PythonStyleSingleLineCommentToken;
      }
    });
    var _singleLine = /* @__PURE__ */ _interop_require_default(require_singleLine());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var PythonStyleSingleLineCommentToken = /* @__PURE__ */ function(SingleLineCommentToken) {
      _inherits(PythonStyleSingleLineCommentToken2, SingleLineCommentToken);
      function PythonStyleSingleLineCommentToken2() {
        _class_call_check(this, PythonStyleSingleLineCommentToken2);
        return _call_super(this, PythonStyleSingleLineCommentToken2, arguments);
      }
      _create_class(PythonStyleSingleLineCommentToken2, null, [
        {
          key: "match",
          value: function match(content) {
            return _singleLine.default.match(PythonStyleSingleLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _singleLine.default.fromContent(PythonStyleSingleLineCommentToken2, content);
          }
        }
      ]);
      return PythonStyleSingleLineCommentToken2;
    }(_singleLine.default);
    _define_property(PythonStyleSingleLineCommentToken, "regularExpression", /^#[^\r\n\f]*/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/endOfLine.js
  var require_endOfLine2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return EndOfLineCommentNonSignificantToken;
      }
    });
    var _nonSignificant = /* @__PURE__ */ _interop_require_default(require_nonSignificant());
    var _types = require_types();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var EndOfLineCommentNonSignificantToken = /* @__PURE__ */ function(NonSignificantToken) {
      _inherits(EndOfLineCommentNonSignificantToken2, NonSignificantToken);
      function EndOfLineCommentNonSignificantToken2() {
        _class_call_check(this, EndOfLineCommentNonSignificantToken2);
        return _call_super(this, EndOfLineCommentNonSignificantToken2, arguments);
      }
      _create_class(EndOfLineCommentNonSignificantToken2, [
        {
          key: "isInCommentPreserving",
          value: function isInCommentPreserving() {
            var inCommentPreserving = true;
            return inCommentPreserving;
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _nonSignificant.default.match(EndOfLineCommentNonSignificantToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _nonSignificant.default.fromContent(EndOfLineCommentNonSignificantToken2, content);
          }
        }
      ]);
      return EndOfLineCommentNonSignificantToken2;
    }(_nonSignificant.default);
    _define_property(EndOfLineCommentNonSignificantToken, "type", _types.endOfLineCommentType);
    _define_property(EndOfLineCommentNonSignificantToken, "regularExpression", /^(?:\r\n|\r|\n|\f)/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/endOf.js
  var require_endOf = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return EndOfMultiLineCommentToken;
      }
    });
    var _nonSignificant = /* @__PURE__ */ _interop_require_default(require_nonSignificant());
    var _types = require_types();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var EndOfMultiLineCommentToken = /* @__PURE__ */ function(NonSignificantToken) {
      _inherits(EndOfMultiLineCommentToken2, NonSignificantToken);
      function EndOfMultiLineCommentToken2() {
        _class_call_check(this, EndOfMultiLineCommentToken2);
        return _call_super(this, EndOfMultiLineCommentToken2, arguments);
      }
      _create_class(EndOfMultiLineCommentToken2, [
        {
          key: "isInCommentPreserving",
          value: function isInCommentPreserving() {
            var inCommentPreserving = false;
            return inCommentPreserving;
          }
        }
      ], [
        {
          key: "match",
          value: function match(Class, content) {
            return _nonSignificant.default.match(Class, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content) {
            return _nonSignificant.default.fromContent(Class, content);
          }
        }
      ]);
      return EndOfMultiLineCommentToken2;
    }(_nonSignificant.default);
    _define_property(EndOfMultiLineCommentToken, "type", _types.endOfMultiLineCommentType);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/endOf/pythonStyle.js
  var require_pythonStyle2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return PythonStyleEndOfMultiLineCommentToken;
      }
    });
    var _endOf = /* @__PURE__ */ _interop_require_default(require_endOf());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var PythonStyleEndOfMultiLineCommentToken = /* @__PURE__ */ function(EndOfMultiLineCommentToken) {
      _inherits(PythonStyleEndOfMultiLineCommentToken2, EndOfMultiLineCommentToken);
      function PythonStyleEndOfMultiLineCommentToken2() {
        _class_call_check(this, PythonStyleEndOfMultiLineCommentToken2);
        return _call_super(this, PythonStyleEndOfMultiLineCommentToken2, arguments);
      }
      _create_class(PythonStyleEndOfMultiLineCommentToken2, null, [
        {
          key: "match",
          value: function match(content) {
            return _endOf.default.match(PythonStyleEndOfMultiLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _endOf.default.fromContent(PythonStyleEndOfMultiLineCommentToken2, content);
          }
        }
      ]);
      return PythonStyleEndOfMultiLineCommentToken2;
    }(_endOf.default);
    _define_property(PythonStyleEndOfMultiLineCommentToken, "regularExpression", /^###/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/startOf.js
  var require_startOf = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return StartOfMultiLineCommentToken;
      }
    });
    var _nonSignificant = /* @__PURE__ */ _interop_require_default(require_nonSignificant());
    var _types = require_types();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var StartOfMultiLineCommentToken = /* @__PURE__ */ function(NonSignificantToken) {
      _inherits(StartOfMultiLineCommentToken2, NonSignificantToken);
      function StartOfMultiLineCommentToken2() {
        _class_call_check(this, StartOfMultiLineCommentToken2);
        return _call_super(this, StartOfMultiLineCommentToken2, arguments);
      }
      _create_class(StartOfMultiLineCommentToken2, [
        {
          key: "isInCommentPreserving",
          value: function isInCommentPreserving() {
            var inCommentPreserving = true;
            return inCommentPreserving;
          }
        }
      ], [
        {
          key: "match",
          value: function match(Class, content) {
            return _nonSignificant.default.match(Class, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content) {
            return _nonSignificant.default.fromContent(Class, content);
          }
        }
      ]);
      return StartOfMultiLineCommentToken2;
    }(_nonSignificant.default);
    _define_property(StartOfMultiLineCommentToken, "type", _types.startOfMultiLineCommentType);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/startOf/pythonStyle.js
  var require_pythonStyle3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return PythonStyleStartOfMultiLineCommentToken;
      }
    });
    var _startOf = /* @__PURE__ */ _interop_require_default(require_startOf());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var PythonStyleStartOfMultiLineCommentToken = /* @__PURE__ */ function(StartOfMultiLineCommentToken) {
      _inherits(PythonStyleStartOfMultiLineCommentToken2, StartOfMultiLineCommentToken);
      function PythonStyleStartOfMultiLineCommentToken2() {
        _class_call_check(this, PythonStyleStartOfMultiLineCommentToken2);
        return _call_super(this, PythonStyleStartOfMultiLineCommentToken2, arguments);
      }
      _create_class(PythonStyleStartOfMultiLineCommentToken2, null, [
        {
          key: "match",
          value: function match(content) {
            return _startOf.default.match(PythonStyleStartOfMultiLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _startOf.default.fromContent(PythonStyleStartOfMultiLineCommentToken2, content);
          }
        }
      ]);
      return PythonStyleStartOfMultiLineCommentToken2;
    }(_startOf.default);
    _define_property(PythonStyleStartOfMultiLineCommentToken, "regularExpression", /^###/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/middleOf.js
  var require_middleOf = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return MiddleOfMultiLineCommentToken;
      }
    });
    var _nonSignificant = /* @__PURE__ */ _interop_require_default(require_nonSignificant());
    var _types = require_types();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var MiddleOfMultiLineCommentToken = /* @__PURE__ */ function(NonSignificantToken) {
      _inherits(MiddleOfMultiLineCommentToken2, NonSignificantToken);
      function MiddleOfMultiLineCommentToken2() {
        _class_call_check(this, MiddleOfMultiLineCommentToken2);
        return _call_super(this, MiddleOfMultiLineCommentToken2, arguments);
      }
      _create_class(MiddleOfMultiLineCommentToken2, [
        {
          key: "isInCommentPreserving",
          value: function isInCommentPreserving() {
            var inCommentPreserving = true;
            return inCommentPreserving;
          }
        }
      ], [
        {
          key: "match",
          value: function match(Class, content) {
            return _nonSignificant.default.match(Class, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(Class, content) {
            return _nonSignificant.default.fromContent(Class, content);
          }
        }
      ]);
      return MiddleOfMultiLineCommentToken2;
    }(_nonSignificant.default);
    _define_property(MiddleOfMultiLineCommentToken, "type", _types.middleOfMultiLineCommentType);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/middleOf/pythonStyle.js
  var require_pythonStyle4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return PythonStyleMiddleOfMultiLineCommentToken;
      }
    });
    var _middleOf = /* @__PURE__ */ _interop_require_default(require_middleOf());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var PythonStyleMiddleOfMultiLineCommentToken = /* @__PURE__ */ function(MiddleOfMultiLineCommentToken) {
      _inherits(PythonStyleMiddleOfMultiLineCommentToken2, MiddleOfMultiLineCommentToken);
      function PythonStyleMiddleOfMultiLineCommentToken2() {
        _class_call_check(this, PythonStyleMiddleOfMultiLineCommentToken2);
        return _call_super(this, PythonStyleMiddleOfMultiLineCommentToken2, arguments);
      }
      _create_class(PythonStyleMiddleOfMultiLineCommentToken2, null, [
        {
          key: "match",
          value: function match(content) {
            return _middleOf.default.match(PythonStyleMiddleOfMultiLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _middleOf.default.fromContent(PythonStyleMiddleOfMultiLineCommentToken2, content);
          }
        }
      ]);
      return PythonStyleMiddleOfMultiLineCommentToken2;
    }(_middleOf.default);
    _define_property(PythonStyleMiddleOfMultiLineCommentToken, "regularExpression", /^(?:[^\r\n\f]+?(?=###)|[^\r\n\f]+)/);
  });

  // node_modules/occam-lexers/lib/basic/lexer.js
  var require_lexer4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return BasicLexer;
      }
    });
    var _entries = /* @__PURE__ */ _interop_require_default(require_entries2());
    var _lexer = /* @__PURE__ */ _interop_require_default(require_lexer2());
    var _whitespace = /* @__PURE__ */ _interop_require_default(require_whitespace());
    var _regularExpression = /* @__PURE__ */ _interop_require_default(require_regularExpression());
    var _endOfLine = /* @__PURE__ */ _interop_require_default(require_endOfLine());
    var _singlyQuoted = /* @__PURE__ */ _interop_require_default(require_singlyQuoted());
    var _doublyQuoted = /* @__PURE__ */ _interop_require_default(require_doublyQuoted());
    var _pythonStyle = /* @__PURE__ */ _interop_require_default(require_pythonStyle());
    var _endOfLine1 = /* @__PURE__ */ _interop_require_default(require_endOfLine2());
    var _pythonStyle1 = /* @__PURE__ */ _interop_require_default(require_pythonStyle2());
    var _pythonStyle2 = /* @__PURE__ */ _interop_require_default(require_pythonStyle3());
    var _pythonStyle3 = /* @__PURE__ */ _interop_require_default(require_pythonStyle4());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var BasicLexer = /* @__PURE__ */ function(CommonLexer) {
      _inherits(BasicLexer2, CommonLexer);
      function BasicLexer2() {
        _class_call_check(this, BasicLexer2);
        return _call_super(this, BasicLexer2, arguments);
      }
      _create_class(BasicLexer2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _lexer.default.fromNothing(BasicLexer2);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _lexer.default.fromRules(BasicLexer2, rules);
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(entries) {
            return _lexer.default.fromEntries(BasicLexer2, entries);
          }
        }
      ]);
      return BasicLexer2;
    }(_lexer.default);
    _define_property(BasicLexer, "entries", _entries.default);
    _define_property(BasicLexer, "EndOfLineToken", _endOfLine.default);
    _define_property(BasicLexer, "WhitespaceToken", _whitespace.default);
    _define_property(BasicLexer, "EndOfLineCommentToken", _endOfLine1.default);
    _define_property(BasicLexer, "RegularExpressionToken", _regularExpression.default);
    _define_property(BasicLexer, "SingleLineCommentToken", _pythonStyle.default);
    _define_property(BasicLexer, "EndOfMultiLineCommentToken", _pythonStyle1.default);
    _define_property(BasicLexer, "StartOfMultiLineCommentToken", _pythonStyle2.default);
    _define_property(BasicLexer, "MiddleOfMultiLineCommentToken", _pythonStyle3.default);
    _define_property(BasicLexer, "SinglyQuotedStringLiteralToken", _singlyQuoted.default);
    _define_property(BasicLexer, "DoublyQuotedStringLiteralToken", _doublyQuoted.default);
  });

  // node_modules/occam-lexers/lib/token/significant/endOfLine.js
  var require_endOfLine3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return EndOfLineSignificantToken;
      }
    });
    var _significant = /* @__PURE__ */ _interop_require_default(require_significant());
    var _types = require_types();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var EndOfLineSignificantToken = /* @__PURE__ */ function(SignificantToken) {
      _inherits(EndOfLineSignificantToken2, SignificantToken);
      function EndOfLineSignificantToken2() {
        _class_call_check(this, EndOfLineSignificantToken2);
        return _call_super(this, EndOfLineSignificantToken2, arguments);
      }
      _create_class(EndOfLineSignificantToken2, [
        {
          key: "asHTML",
          value: function asHTML() {
            var content = this.getContent(), html = content;
            return html;
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _significant.default.match(EndOfLineSignificantToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _significant.default.fromContent(EndOfLineSignificantToken2, content);
          }
        }
      ]);
      return EndOfLineSignificantToken2;
    }(_significant.default);
    _define_property(EndOfLineSignificantToken, "type", _types.endOfLineType);
    _define_property(EndOfLineSignificantToken, "regularExpression", /^(?:\r\n|\r|\n|\f)/);
  });

  // node_modules/occam-lexers/lib/token/significant/comment/endOfLine.js
  var require_endOfLine4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return EndOfLineCommentSignificantToken;
      }
    });
    var _significant = /* @__PURE__ */ _interop_require_default(require_significant());
    var _types = require_types();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var EndOfLineCommentSignificantToken = /* @__PURE__ */ function(SignificantToken) {
      _inherits(EndOfLineCommentSignificantToken2, SignificantToken);
      function EndOfLineCommentSignificantToken2() {
        _class_call_check(this, EndOfLineCommentSignificantToken2);
        return _call_super(this, EndOfLineCommentSignificantToken2, arguments);
      }
      _create_class(EndOfLineCommentSignificantToken2, [
        {
          key: "isInCommentPreserving",
          value: function isInCommentPreserving() {
            var inCommentPreserving = true;
            return inCommentPreserving;
          }
        }
      ], [
        {
          key: "match",
          value: function match(content) {
            return _significant.default.match(EndOfLineCommentSignificantToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _significant.default.fromContent(EndOfLineCommentSignificantToken2, content);
          }
        }
      ]);
      return EndOfLineCommentSignificantToken2;
    }(_significant.default);
    _define_property(EndOfLineCommentSignificantToken, "type", _types.endOfLineCommentType);
    _define_property(EndOfLineCommentSignificantToken, "regularExpression", /^(?:\r\n|\r|\n|\f)/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/singleLine/cStyle.js
  var require_cStyle = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CStyleSingleLineCommentToken;
      }
    });
    var _singleLine = /* @__PURE__ */ _interop_require_default(require_singleLine());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var CStyleSingleLineCommentToken = /* @__PURE__ */ function(SingleLineCommentToken) {
      _inherits(CStyleSingleLineCommentToken2, SingleLineCommentToken);
      function CStyleSingleLineCommentToken2() {
        _class_call_check(this, CStyleSingleLineCommentToken2);
        return _call_super(this, CStyleSingleLineCommentToken2, arguments);
      }
      _create_class(CStyleSingleLineCommentToken2, null, [
        {
          key: "match",
          value: function match(content) {
            return _singleLine.default.match(CStyleSingleLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _singleLine.default.fromContent(CStyleSingleLineCommentToken2, content);
          }
        }
      ]);
      return CStyleSingleLineCommentToken2;
    }(_singleLine.default);
    _define_property(CStyleSingleLineCommentToken, "regularExpression", /^\/\/[^\r\n\f]*/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/endOf/cStyle.js
  var require_cStyle2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CStyleEndOfMultiLineCommentToken;
      }
    });
    var _endOf = /* @__PURE__ */ _interop_require_default(require_endOf());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var CStyleEndOfMultiLineCommentToken = /* @__PURE__ */ function(EndOfMultiLineCommentToken) {
      _inherits(CStyleEndOfMultiLineCommentToken2, EndOfMultiLineCommentToken);
      function CStyleEndOfMultiLineCommentToken2() {
        _class_call_check(this, CStyleEndOfMultiLineCommentToken2);
        return _call_super(this, CStyleEndOfMultiLineCommentToken2, arguments);
      }
      _create_class(CStyleEndOfMultiLineCommentToken2, null, [
        {
          key: "match",
          value: function match(content) {
            return _endOf.default.match(CStyleEndOfMultiLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _endOf.default.fromContent(CStyleEndOfMultiLineCommentToken2, content);
          }
        }
      ]);
      return CStyleEndOfMultiLineCommentToken2;
    }(_endOf.default);
    _define_property(CStyleEndOfMultiLineCommentToken, "regularExpression", /^\*\//);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/startOf/cStyle.js
  var require_cStyle3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CStyleStartOfMultiLineCommentToken;
      }
    });
    var _startOf = /* @__PURE__ */ _interop_require_default(require_startOf());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var CStyleStartOfMultiLineCommentToken = /* @__PURE__ */ function(StartOfMultiLineCommentToken) {
      _inherits(CStyleStartOfMultiLineCommentToken2, StartOfMultiLineCommentToken);
      function CStyleStartOfMultiLineCommentToken2() {
        _class_call_check(this, CStyleStartOfMultiLineCommentToken2);
        return _call_super(this, CStyleStartOfMultiLineCommentToken2, arguments);
      }
      _create_class(CStyleStartOfMultiLineCommentToken2, null, [
        {
          key: "match",
          value: function match(content) {
            return _startOf.default.match(CStyleStartOfMultiLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _startOf.default.fromContent(CStyleStartOfMultiLineCommentToken2, content);
          }
        }
      ]);
      return CStyleStartOfMultiLineCommentToken2;
    }(_startOf.default);
    _define_property(CStyleStartOfMultiLineCommentToken, "regularExpression", /^\/\*/);
  });

  // node_modules/occam-lexers/lib/token/nonSignificant/comment/multiLine/middleOf/cStyle.js
  var require_cStyle4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CStyleMiddleOfMultiLineCommentToken;
      }
    });
    var _middleOf = /* @__PURE__ */ _interop_require_default(require_middleOf());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var CStyleMiddleOfMultiLineCommentToken = /* @__PURE__ */ function(MiddleOfMultiLineCommentToken) {
      _inherits(CStyleMiddleOfMultiLineCommentToken2, MiddleOfMultiLineCommentToken);
      function CStyleMiddleOfMultiLineCommentToken2() {
        _class_call_check(this, CStyleMiddleOfMultiLineCommentToken2);
        return _call_super(this, CStyleMiddleOfMultiLineCommentToken2, arguments);
      }
      _create_class(CStyleMiddleOfMultiLineCommentToken2, null, [
        {
          key: "match",
          value: function match(content) {
            return _middleOf.default.match(CStyleMiddleOfMultiLineCommentToken2, content);
          }
        },
        {
          key: "fromContent",
          value: function fromContent(content) {
            return _middleOf.default.fromContent(CStyleMiddleOfMultiLineCommentToken2, content);
          }
        }
      ]);
      return CStyleMiddleOfMultiLineCommentToken2;
    }(_middleOf.default);
    _define_property(CStyleMiddleOfMultiLineCommentToken, "regularExpression", /^(?:[^\r\n\f]+?(?=\*\/)|[^\r\n\f]+)/);
  });

  // node_modules/occam-lexers/lib/index.js
  var require_lib3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get BNFLexer() {
        return _lexer1.default;
      },
      get BasicLexer() {
        return _lexer2.default;
      },
      get CStyleEndOfMultiLineCommentToken() {
        return _cStyle1.default;
      },
      get CStyleMiddleOfMultiLineCommentToken() {
        return _cStyle3.default;
      },
      get CStyleSingleLineCommentToken() {
        return _cStyle.default;
      },
      get CStyleStartOfMultiLineCommentToken() {
        return _cStyle2.default;
      },
      get CommonLexer() {
        return _lexer3.default;
      },
      get DoublyQuotedStringLiteralToken() {
        return _doublyQuoted.default;
      },
      get EndOfLineCommentNonSignificantToken() {
        return _endOfLine3.default;
      },
      get EndOfLineCommentSignificantToken() {
        return _endOfLine2.default;
      },
      get EndOfLineNonSignificantToken() {
        return _endOfLine1.default;
      },
      get EndOfLineSignificantToken() {
        return _endOfLine.default;
      },
      get EndOfMultiLineCommentToken() {
        return _endOf.default;
      },
      get MiddleOfMultiLineCommentToken() {
        return _middleOf.default;
      },
      get NonSignificantToken() {
        return _nonSignificant.default;
      },
      get PythonStyleEndOfMultiLineCommentToken() {
        return _pythonStyle1.default;
      },
      get PythonStyleMiddleOfMultiLineCommentToken() {
        return _pythonStyle3.default;
      },
      get PythonStyleSingleLineCommentToken() {
        return _pythonStyle.default;
      },
      get PythonStyleStartOfMultiLineCommentToken() {
        return _pythonStyle2.default;
      },
      get RegularExpressionToken() {
        return _regularExpression.default;
      },
      get Rule() {
        return _rule.default;
      },
      get SignificantToken() {
        return _significant.default;
      },
      get SingleLineCommentToken() {
        return _singleLine.default;
      },
      get SinglyQuotedStringLiteralToken() {
        return _singlyQuoted.default;
      },
      get StartOfMultiLineCommentToken() {
        return _startOf.default;
      },
      get StringLiteralToken() {
        return _stringLiteral.default;
      },
      get WhitespaceToken() {
        return _whitespace.default;
      },
      get lexerUtilities() {
        return _lexer.default;
      },
      get rulesUtilities() {
        return _rules.default;
      },
      get specialSymbols() {
        return _specialSymbols.default;
      },
      get types() {
        return _types.default;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule());
    var _types = /* @__PURE__ */ _interop_require_default(require_types());
    var _specialSymbols = /* @__PURE__ */ _interop_require_default(require_specialSymbols());
    var _rules = /* @__PURE__ */ _interop_require_default(require_rules());
    var _lexer = /* @__PURE__ */ _interop_require_default(require_lexer());
    var _lexer1 = /* @__PURE__ */ _interop_require_default(require_lexer3());
    var _lexer2 = /* @__PURE__ */ _interop_require_default(require_lexer4());
    var _lexer3 = /* @__PURE__ */ _interop_require_default(require_lexer2());
    var _significant = /* @__PURE__ */ _interop_require_default(require_significant());
    var _nonSignificant = /* @__PURE__ */ _interop_require_default(require_nonSignificant());
    var _endOfLine = /* @__PURE__ */ _interop_require_default(require_endOfLine3());
    var _endOfLine1 = /* @__PURE__ */ _interop_require_default(require_endOfLine());
    var _endOfLine2 = /* @__PURE__ */ _interop_require_default(require_endOfLine4());
    var _endOfLine3 = /* @__PURE__ */ _interop_require_default(require_endOfLine2());
    var _whitespace = /* @__PURE__ */ _interop_require_default(require_whitespace());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral());
    var _regularExpression = /* @__PURE__ */ _interop_require_default(require_regularExpression());
    var _singlyQuoted = /* @__PURE__ */ _interop_require_default(require_singlyQuoted());
    var _doublyQuoted = /* @__PURE__ */ _interop_require_default(require_doublyQuoted());
    var _singleLine = /* @__PURE__ */ _interop_require_default(require_singleLine());
    var _endOf = /* @__PURE__ */ _interop_require_default(require_endOf());
    var _startOf = /* @__PURE__ */ _interop_require_default(require_startOf());
    var _middleOf = /* @__PURE__ */ _interop_require_default(require_middleOf());
    var _cStyle = /* @__PURE__ */ _interop_require_default(require_cStyle());
    var _cStyle1 = /* @__PURE__ */ _interop_require_default(require_cStyle2());
    var _cStyle2 = /* @__PURE__ */ _interop_require_default(require_cStyle3());
    var _cStyle3 = /* @__PURE__ */ _interop_require_default(require_cStyle4());
    var _pythonStyle = /* @__PURE__ */ _interop_require_default(require_pythonStyle());
    var _pythonStyle1 = /* @__PURE__ */ _interop_require_default(require_pythonStyle2());
    var _pythonStyle2 = /* @__PURE__ */ _interop_require_default(require_pythonStyle3());
    var _pythonStyle3 = /* @__PURE__ */ _interop_require_default(require_pythonStyle4());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // node_modules/with-style/lib/css/entries.js
  var require_entries3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var entries = [
      {
        media: "^@media"
      },
      {
        keyframes: "^@keyframes"
      },
      {
        colour: "^#(?:[0-9a-fA-F]{6}|[0-9a-fA-F]{3})"
      },
      {
        important: "^!important"
      },
      {
        percentage: "^(?:[0-9]+|[0-9]*\\.[0-9]+)%"
      },
      {
        frequency: "^(?:[0-9]+|[0-9]*\\.[0-9]+)(?:hz|khz)"
      },
      {
        fraction: "^[1-9][0-9]*?fr"
      },
      {
        length: "^(?:[0-9]+|[0-9]*\\.[0-9]+)(?:px|cm|mm|in|pt|pc)"
      },
      {
        angle: "^(?:[0-9]+|[0-9]*\\.[0-9]+)(?:deg|rad|grad)"
      },
      {
        time: "^(?:[0-9]+|[0-9]*\\.[0-9]+)(?:s|ms)"
      },
      {
        rems: "^(?:[0-9]+|[0-9]*\\.[0-9]+)rem"
      },
      {
        ems: "^(?:[0-9]+|[0-9]*\\.[0-9]+)em"
      },
      {
        number: "^[0-9]+|[0-9]*\\.[0-9]+"
      },
      {
        special: "^;|::|:|\\.|,|\\|=|~=|=|>|\\{|\\}|\\(|\\)|\\[|\\]"
      },
      {
        identifier: "^[_a-zA-Z0-9-]+"
      },
      {
        "logical-operator": "^^(?:and|not)$"
      },
      {
        "plus-or-minus": "^\\+|-"
      },
      {
        unassigned: "^[^\\s]+"
      }
    ];
    var _default = entries;
  });

  // node_modules/with-style/lib/css/lexer.js
  var require_lexer5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CSSLexer;
      }
    });
    var _occamlexers = require_lib3();
    var _entries = /* @__PURE__ */ _interop_require_default(require_entries3());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var CSSLexer = /* @__PURE__ */ function(CommonLexer) {
      _inherits(CSSLexer2, CommonLexer);
      function CSSLexer2() {
        _class_call_check(this, CSSLexer2);
        return _call_super(this, CSSLexer2, arguments);
      }
      _create_class(CSSLexer2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamlexers.CommonLexer.fromNothing(CSSLexer2);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamlexers.CommonLexer.fromRules(CSSLexer2, rules);
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(entries) {
            return _occamlexers.CommonLexer.fromEntries(CSSLexer2, entries);
          }
        }
      ]);
      return CSSLexer2;
    }(_occamlexers.CommonLexer);
    _define_property(CSSLexer, "entries", _entries.default);
    _define_property(CSSLexer, "EndOfLineToken", _occamlexers.EndOfLineNonSignificantToken);
    _define_property(CSSLexer, "WhitespaceToken", _occamlexers.WhitespaceToken);
    _define_property(CSSLexer, "EndOfLineCommentToken", null);
    _define_property(CSSLexer, "RegularExpressionToken", null);
    _define_property(CSSLexer, "SingleLineCommentToken", null);
    _define_property(CSSLexer, "EndOfMultiLineCommentToken", null);
    _define_property(CSSLexer, "StartOfMultiLineCommentToken", null);
    _define_property(CSSLexer, "MiddleOfMultiLineCommentToken", null);
    _define_property(CSSLexer, "SinglyQuotedStringLiteralToken", null);
    _define_property(CSSLexer, "DoublyQuotedStringLiteralToken", _occamlexers.DoublyQuotedStringLiteralToken);
  });

  // node_modules/occam-parsers/lib/bnf/bnf.js
  var require_bnf = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var bnf = '\n\n      document                 ::=  ( rule | error )+ ;\n\n      rule                     ::=  name opacityModifier? "::=" definitions ";" ;\n\n      name                     ::=  [name] ;\n\n      definitions              ::=  definition ( "|" definition )* ;\n\n      definition               ::=  part+ precedence? ;\n \n      part                     ::=  nonTerminalPart quantifier*\n\n                                 |  terminalPart quantifier*\n\n                                 ;\n\n      nonTerminalPart          ::=  choiceOfParts\n\n                                 |  sequenceOfParts\n\n                                 |  ruleName callAheadModifier?\n\n                                 ;\n\n      terminalPart             ::=  significantTokenType\n  \n                                 |  regularExpression\n \n                                 |  stringLiteral\n  \n                                 |  endOfLine\n  \n                                 |  wildcard\n  \n                                 |  epsilon\n\n                                 |  noWhitespace\n                              \n                                 |  startOfContent\n\n                                 ;\n                              \n      sequenceOfParts          ::=  "(" part part+ ")" ;\n\n      choiceOfParts            ::=  "(" partChoice ( "|" partChoice )+ ")" ;\n\n      partChoice               ::=  part precedence? ;\n\n      ruleName                 ::=  [name] ;\n\n      significantTokenType     ::=  [type] ;\n\n      regularExpression        ::=  [regular-expression] ;\n\n      stringLiteral            ::=  [string-literal] ;\n\n      precedence               ::=  "(" [number]? ")" ;\n      \n      endOfLine                ::=  "<END_OF_LINE>" ;\n      \n      wildcard                 ::=  "." ;\n\n      epsilon                  ::=  "\u03B5" ;\n\n      noWhitespace             ::=  "<NO_WHITESPACE>" ;                              \n\n      startOfContent           ::+  "<START_OF_CONTENT>"; \n      \n      quantifier               ::=  optionalQuantifier\n \n                                 |  oneOrMoreQuantifier\n  \n                                 |  zeroOrMoreQuantifier\n  \n                                 ;\n\n      opacityModifier          ::=  <NO_WHITESPACE>( "." | ".." );\n      \n      callAheadModifier        ::=  <NO_WHITESPACE>"..." ;\n\n      optionalQuantifier       ::=  <NO_WHITESPACE>"?" ;\n\n      oneOrMoreQuantifier      ::=  <NO_WHITESPACE>"+" ;\n\n      zeroOrMoreQuantifier     ::=  <NO_WHITESPACE>"*" ;\n\n      error.                   ::=  . ;\n\n';
    var _default = bnf;
  });

  // node_modules/occam-parsers/lib/constants.js
  var require_constants4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get EMPTY_STRING() {
        return EMPTY_STRING;
      },
      get ESCAPED_BACKSLASH() {
        return ESCAPED_BACKSLASH;
      },
      get ESCAPED_DOUBLE_QUOTE() {
        return ESCAPED_DOUBLE_QUOTE;
      }
    });
    var EMPTY_STRING = "";
    var ESCAPED_BACKSLASH = "\\";
    var ESCAPED_DOUBLE_QUOTE = '"';
  });

  // node_modules/occam-parsers/lib/utilities/string.js
  var require_string3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "paddingFromPaddingLength", {
      enumerable: true,
      get: function() {
        return paddingFromPaddingLength;
      }
    });
    var _necessary = require_browser();
    var _constants = require_constants4();
    var SPACE_CHARACTER = _necessary.characters.SPACE_CHARACTER;
    function paddingFromPaddingLength(paddingLength) {
      var padding = _constants.EMPTY_STRING;
      for (var position = 0; position < paddingLength; position++) {
        padding += SPACE_CHARACTER;
      }
      return padding;
    }
  });

  // node_modules/occam-parsers/lib/rule.js
  var require_rule2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Rule;
      }
    });
    var _necessary = require_browser();
    var _constants = require_constants4();
    var _occamlexers = require_lib3();
    var _string = require_string3();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var clear = _necessary.arrayUtilities.clear;
    var opaqueSpecialSymbol = _occamlexers.specialSymbols.opaque;
    var semiOpaqueSpecialSymbol = _occamlexers.specialSymbols.semiOpaque;
    var Rule = /* @__PURE__ */ function() {
      function Rule2(name, opacity, definitions) {
        _class_call_check(this, Rule2);
        this.name = name;
        this.opacity = opacity;
        this.definitions = definitions;
      }
      _create_class(Rule2, [
        {
          key: "getName",
          value: function getName() {
            return this.name;
          }
        },
        {
          key: "getOpacity",
          value: function getOpacity() {
            return this.opacity;
          }
        },
        {
          key: "getDefinitions",
          value: function getDefinitions() {
            return this.definitions;
          }
        },
        {
          key: "setName",
          value: function setName(name) {
            this.name = name;
          }
        },
        {
          key: "setOpacity",
          value: function setOpacity(opacity) {
            this.opacity = opacity;
          }
        },
        {
          key: "setDefinitions",
          value: function setDefinitions(definitions) {
            this.definitions = definitions;
          }
        },
        {
          key: "isOpaque",
          value: function isOpaque() {
            var opaque = this.opacity === opaqueSpecialSymbol;
            return opaque;
          }
        },
        {
          key: "isSemiOpaque",
          value: function isSemiOpaque() {
            var semiOpaque = this.opacity === semiOpaqueSpecialSymbol;
            return semiOpaque;
          }
        },
        {
          key: "isTransparent",
          value: function isTransparent() {
            var semiOpaque = this.opacity === null;
            return semiOpaque;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var opacity = this.opacity, ruleName = this.name, precedence = null, childNodes = [], NonTerminalNode = this.NonTerminalNodeFromRuleName(ruleName, state), nonTerminalNode = NonTerminalNode.fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence), savedPrecedence = state.getSavedPrecedence();
            var node = nonTerminalNode;
            nodes.push(node);
            parsed = this.definitions.some(function(definition) {
              var parsed2;
              clear(childNodes);
              var precedence2 = definition.getPrecedence();
              state.setPrecedence(precedence2);
              callback = function() {
                var parsed3;
                var precedence3 = state.getPrecedence();
                nonTerminalNode.setPrecedence(precedence3);
                parsed3 = true;
                if (parsed3) {
                  node.setChildNodesParentNode();
                }
                var rewrittenNonTerminalNode = nonTerminalNode.rewrite(state);
                if (rewrittenNonTerminalNode !== null) {
                  if (parsed3) {
                    nodes.pop();
                    node = rewrittenNonTerminalNode;
                    nodes.push(node);
                  }
                }
                if (parsed3) {
                  var empty = node.isEmpty();
                  if (empty) {
                    parsed3 = false;
                  }
                }
                if (parsed3) {
                  var unprecedented = node.isUnprecedented();
                  if (unprecedented) {
                    parsed3 = false;
                  }
                }
                if (parsed3) {
                  if (callAhead !== null) {
                    state.resetPrecedence(savedPrecedence);
                    parsed3 = callAhead();
                  }
                }
                if (rewrittenNonTerminalNode !== null) {
                  if (!parsed3) {
                    nodes.pop();
                    node = nonTerminalNode;
                    nodes.push(node);
                  }
                }
                if (!parsed3) {
                  node.resetChildNodesParentNode();
                }
                return parsed3;
              };
              parsed2 = definition.parse(childNodes, state, callback, callAhead);
              if (!parsed2) {
                state.resetPrecedence(savedPrecedence);
              }
              return parsed2;
            });
            if (!parsed) {
              nodes.pop();
            }
            if (callAhead === null) {
              state.resetPrecedence(savedPrecedence);
            }
            return parsed;
          }
        },
        {
          key: "NonTerminalNodeFromRuleName",
          value: function NonTerminalNodeFromRuleName(ruleName, state) {
            return state.NonTerminalNodeFromRuleName(ruleName);
          }
        },
        {
          key: "asString",
          value: function asString(maximumRuleNameLength) {
            var multiLine = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
            var definitionsLength = this.definitions.length;
            multiLine = multiLine && definitionsLength > 1;
            var maximumPadding = (0, _string.paddingFromPaddingLength)(maximumRuleNameLength), definitionsString = this.definitions.reduce(function(definitionsString2, definition) {
              var definitionString = definition.asString();
              if (definitionsString2 === _constants.EMPTY_STRING) {
                definitionsString2 = definitionString;
              } else {
                definitionsString2 = multiLine ? "".concat(definitionsString2, "\n\n").concat(maximumPadding, "   | ").concat(definitionString) : "".concat(definitionsString2, " | ").concat(definitionString);
              }
              return definitionsString2;
            }, _constants.EMPTY_STRING), ruleName = this.name, ruleNameLength = ruleName.length, opacityString = this.opacity === null ? _constants.EMPTY_STRING : this.opacity, opacityStringLength = opacityString.length, paddingLength = maximumRuleNameLength - ruleNameLength - opacityStringLength, padding = (0, _string.paddingFromPaddingLength)(paddingLength);
            var semicolonString = multiLine ? "\n\n".concat(maximumPadding, "   ;") : " ;", string = "\n\n".concat(this.name).concat(opacityString).concat(padding, " ::= ").concat(definitionsString).concat(semicolonString);
            return string;
          }
        }
      ], [
        {
          key: "fromNameOpacityAndDefinitions",
          value: function fromNameOpacityAndDefinitions(Class, name, opacity, definitions) {
            if (definitions === void 0) {
              definitions = opacity;
              opacity = name;
              name = Class;
              Class = Rule2;
            }
            var rule = new Class(name, opacity, definitions);
            return rule;
          }
        }
      ]);
      return Rule2;
    }();
  });

  // node_modules/occam-parsers/lib/mixins/node.js
  var require_node = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _necessary = require_browser();
    function _array_like_to_array(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _array_without_holes(arr) {
      if (Array.isArray(arr))
        return _array_like_to_array(arr);
    }
    function _iterable_to_array(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _non_iterable_spread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _to_consumable_array(arr) {
      return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
    }
    function _unsupported_iterable_to_array(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _array_like_to_array(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _array_like_to_array(o, minLen);
    }
    var push = _necessary.arrayUtilities.push;
    var first = _necessary.arrayUtilities.first;
    var forwardsSome = _necessary.arrayUtilities.forwardsSome;
    var backwardsSome = _necessary.arrayUtilities.backwardsSome;
    function getMultiplicity() {
      var childNodesLength = this.childNodes.length, multiplicity = childNodesLength;
      return multiplicity;
    }
    function mapChildNode(callback) {
      return this.childNodes.map(callback);
    }
    function someChildNode(callback) {
      return this.childNodes.some(callback);
    }
    function findChildNode(callback) {
      return this.childNodes.find(callback);
    }
    function everyChildNode(callback) {
      return this.childNodes.every(callback);
    }
    function filterChildNode(callback) {
      return this.childNodes.filter(callback);
    }
    function reduceChildNode(callback, initialValue) {
      return this.childNodes.reduce(callback, initialValue);
    }
    function forEachChildNode(callback) {
      this.childNodes.forEach(callback);
    }
    function forwardsSomeChildNode(callback) {
      return forwardsSome(this.childNodes, callback);
    }
    function backwardsSomeChildNode(callback) {
      return backwardsSome(this.childNodes, callback);
    }
    function indexOfChildNode(childNode) {
      return this.childNodes.indexOf(childNode);
    }
    function setChildNodesParentNode(childNodes) {
      if (childNodes === void 0) {
        childNodes = _to_consumable_array(this.childNodes);
      }
      var parentNode = this;
      childNodes.forEach(function(childNode) {
        childNode.setParentNode(parentNode);
      });
    }
    function resetChildNodesParentNode(childNodes) {
      if (childNodes === void 0) {
        childNodes = _to_consumable_array(this.childNodes);
      }
      var parentNode = null;
      childNodes.forEach(function(childNode) {
        childNode.setParentNode(parentNode);
      });
    }
    function addChildNode(addedChildNode, startIndex) {
      var addedChildNodes = [
        addedChildNode
      ];
      this.addChildNodes(addedChildNodes, startIndex);
    }
    function addChildNodes(addedChildNodes, startIndex) {
      var deleteCount = 0;
      this.spliceChildNodes(startIndex, deleteCount, addedChildNodes);
    }
    function removeChildNode(removedChildNode) {
      var removedChildNodes;
      removedChildNodes = [
        removedChildNode
      ];
      removedChildNodes = this.removeChildNodes(removedChildNodes);
      return removedChildNodes;
    }
    function removeChildNodes(removedChildNodes) {
      if (removedChildNodes === void 0) {
        removedChildNodes = _to_consumable_array(this.childNodes);
      }
      var removedChildNodesLength = removedChildNodes.length;
      if (removedChildNodesLength > 0) {
        var firstReplacedChildNode = first(removedChildNodes), startIndex = this.childNodes.indexOf(firstReplacedChildNode), deleteCount = removedChildNodesLength, addedChildNodes = [];
        removedChildNodes = this.spliceChildNodes(startIndex, deleteCount, addedChildNodes);
      }
      return removedChildNodes;
    }
    function replaceChildNode(replacedChildNode, replacementChildNodes) {
      var replacedChildNodes = [
        replacedChildNode
      ];
      this.replaceChildNodes(replacedChildNodes, replacementChildNodes);
    }
    function replaceChildNodes(replacedChildNodes, replacementChildNodes) {
      var replacedChildNodesLength = replacedChildNodes.length, firstReplacedChildNode = first(replacedChildNodes), startIndex = this.childNodes.indexOf(firstReplacedChildNode), deleteCount = replacedChildNodesLength;
      this.spliceChildNodes(startIndex, deleteCount, replacementChildNodes);
    }
    function appendChildNode(appendedChildNode) {
      var appendedChildNodes = [
        appendedChildNode
      ];
      this.appendChildNodes(appendedChildNodes);
    }
    function appendChildNodes(appendedChildNodes) {
      var addedChildNodes = appendedChildNodes, multiplicity = this.getMultiplicity(), startIndex = multiplicity;
      this.addChildNodes(addedChildNodes, startIndex);
    }
    function prependChildNode(prependedChildNode) {
      var prependedChildNodes = [
        prependedChildNode
      ];
      this.prependChildNodes(prependedChildNodes);
    }
    function prependChildNodes(prependedChildNodes) {
      var addedChildNodes = prependedChildNodes, startIndex = 0;
      this.addChildNodes(addedChildNodes, startIndex);
    }
    function spliceChildNodes(startIndex, deleteCount) {
      var addedChildNodes = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      var _this_childNodes;
      var removedChildNodes = (_this_childNodes = this.childNodes).splice.apply(_this_childNodes, [
        startIndex,
        deleteCount
      ].concat(_to_consumable_array(addedChildNodes)));
      this.resetChildNodesParentNode(removedChildNodes);
      this.setChildNodesParentNode(addedChildNodes);
      return removedChildNodes;
    }
    function sliceChildNodes(startIndex) {
      var endIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
      var childNodes = this.childNodes.slice(startIndex, endIndex);
      return childNodes;
    }
    function getAncestorNodes() {
      var ancestorNodes = [];
      var ancestorNode = this.parentNode;
      while (ancestorNode !== null) {
        ancestorNodes.push(ancestorNode);
        var parentNode = ancestorNode.getParentNode();
        ancestorNode = parentNode;
      }
      return ancestorNodes;
    }
    function mapAncestorNode(callback) {
      var ancestorNodes = this.getAncestorNodes();
      return ancestorNodes.map(callback);
    }
    function someAncestorNode(callback) {
      var result = false;
      var index = 0, ancestorNode = this.parentNode;
      while (ancestorNode !== null) {
        result = !!callback(ancestorNode, index);
        if (result) {
          break;
        }
        var parentNode = ancestorNode.getParentNode();
        ancestorNode = parentNode;
        index++;
      }
      return result;
    }
    function findAncestorNode(callback) {
      var index = 0, ancestorNode = this.parentNode;
      while (ancestorNode !== null) {
        var result = callback(ancestorNode, index);
        if (result) {
          return ancestorNode;
        }
        var parentNode = ancestorNode.getParentNode();
        ancestorNode = parentNode;
        index++;
      }
      ancestorNode = void 0;
      return ancestorNode;
    }
    function everyAncestorNode(callback) {
      var result = true;
      var index = 0, ancestorNode = this.parentNode;
      while (ancestorNode !== null) {
        result = !!callback(ancestorNode, index);
        if (!result) {
          break;
        }
        var parentNode = ancestorNode.getParentNode();
        ancestorNode = parentNode;
        index++;
      }
      return result;
    }
    function filterAncestorNode(callback) {
      var ancestorNodes = this.getAncestorNodes();
      return ancestorNodes.filter(callback);
    }
    function reduceAncestorNode(callback, initialValue) {
      var ancestorNodes = this.getAncestorNodes();
      return ancestorNodes.reduce(callback, initialValue);
    }
    function forEachAncestorNode(callback) {
      var ancestorNodes = this.getAncestorNodes();
      ancestorNodes.forEach(callback);
    }
    function getDescendantNodes() {
      var descendantNodes = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      push(descendantNodes, this.childNodes);
      this.forEachChildNode(function(childNode) {
        childNode.getDescendantNodes(descendantNodes);
      });
      return descendantNodes;
    }
    function mapDescendantNode(callback) {
      var descendantNodes = this.getDescendantNodes();
      return descendantNodes.map(callback);
    }
    function someDescendantNode(callback) {
      var result = false;
      var childNodesLength = this.childNodes.length;
      for (var index = 0; index < childNodesLength; index++) {
        var childNode = this.childNodes[index], descendantNode = childNode;
        result = !!callback(descendantNode);
        if (result) {
          break;
        }
        result = childNode.someDescendantNode(callback);
        if (result) {
          break;
        }
      }
      return result;
    }
    function findDescendantNode(callback) {
      var descendantNode = void 0;
      var childNodesLength = this.childNodes.length;
      for (var index = 0; index < childNodesLength; index++) {
        var result = void 0;
        var childNode = this.childNodes[index];
        descendantNode = childNode;
        result = callback(descendantNode);
        if (result) {
          break;
        }
        descendantNode = childNode.findDescendantNode(callback);
        if (descendantNode !== void 0) {
          break;
        }
      }
      return descendantNode;
    }
    function everyDescendantNode(callback) {
      var result = true;
      var childNodesLength = this.childNodes.length;
      for (var index = 0; index < childNodesLength; index++) {
        var childNode = this.childNodes[index], descendantNode = childNode;
        result = !!callback(descendantNode);
        if (!result) {
          break;
        }
        result = childNode.everyDescendantNode(callback);
        if (!result) {
          break;
        }
      }
      return result;
    }
    function filterDescendantNode(callback) {
      var descendantNodes = this.getDescendantNodes();
      return descendantNodes.filter(callback);
    }
    function reduceDescendantNode(callback, initialValue) {
      var descendantNodes = this.getDescendantNodes();
      return descendantNodes.reduce(callback, initialValue);
    }
    function forEachDescendantNode(callback) {
      var descendantNodes = this.getDescendantNodes();
      descendantNodes.forEach(callback);
    }
    var nodeMixins = {
      getMultiplicity,
      mapChildNode,
      someChildNode,
      findChildNode,
      everyChildNode,
      filterChildNode,
      reduceChildNode,
      forEachChildNode,
      forwardsSomeChildNode,
      backwardsSomeChildNode,
      indexOfChildNode,
      setChildNodesParentNode,
      resetChildNodesParentNode,
      addChildNode,
      addChildNodes,
      removeChildNode,
      removeChildNodes,
      replaceChildNode,
      replaceChildNodes,
      appendChildNode,
      appendChildNodes,
      prependChildNode,
      prependChildNodes,
      spliceChildNodes,
      sliceChildNodes,
      getAncestorNodes,
      mapAncestorNode,
      someAncestorNode,
      findAncestorNode,
      everyAncestorNode,
      filterAncestorNode,
      reduceAncestorNode,
      forEachAncestorNode,
      getDescendantNodes,
      mapDescendantNode,
      someDescendantNode,
      findDescendantNode,
      everyDescendantNode,
      filterDescendantNode,
      reduceDescendantNode,
      forEachDescendantNode
    };
    var _default = nodeMixins;
  });

  // node_modules/occam-parsers/lib/parseTree.js
  var require_parseTree = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return ParseTree;
      }
    });
    var _necessary = require_browser();
    var _constants = require_constants4();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var last = _necessary.arrayUtilities.last;
    var NEW_LINE_CHARACTER = _necessary.characters.NEW_LINE_CHARACTER;
    var SPACE_CHARACTER = _necessary.characters.SPACE_CHARACTER;
    var ParseTree = /* @__PURE__ */ function() {
      function ParseTree2(lines) {
        _class_call_check(this, ParseTree2);
        this.lines = lines;
      }
      _create_class(ParseTree2, [
        {
          key: "clone",
          value: function clone() {
            var lines = this.lines.slice(), parseTree = new ParseTree2(lines);
            return parseTree;
          }
        },
        {
          key: "getWidth",
          value: function getWidth() {
            var width;
            var linesLength = this.lines.length;
            if (linesLength === 0) {
              width = 0;
            } else {
              var lastLine = last(this.lines), lastLineLength = lastLine.length;
              width = lastLineLength;
            }
            return width;
          }
        },
        {
          key: "getDepth",
          value: function getDepth() {
            var linesLength = this.lines.length, depth = linesLength;
            return depth;
          }
        },
        {
          key: "forEachLine",
          value: function forEachLine(callback) {
            this.lines.forEach(callback);
          }
        },
        {
          key: "appendToTop",
          value: function appendToTop(parseTree) {
            var _this = this;
            parseTree.forEachLine(function(line) {
              _this.lines.unshift(line);
            });
          }
        },
        {
          key: "appendToLeft",
          value: function appendToLeft(parseTree) {
            var _this = this;
            parseTree.forEachLine(function(line, index) {
              _this.lines[index] = line + _this.lines[index];
            });
          }
        },
        {
          key: "appendToRight",
          value: function appendToRight(parseTree) {
            var _this = this;
            parseTree.forEachLine(function(line, index) {
              _this.lines[index] = _this.lines[index] + line;
            });
          }
        },
        {
          key: "appendToBottom",
          value: function appendToBottom(parseTree) {
            var _this = this;
            parseTree.forEachLine(function(line) {
              _this.lines.push(line);
            });
          }
        },
        {
          key: "addTopMargin",
          value: function addTopMargin(topMarginDepth) {
            var width = this.getWidth(), topMarginWidth = width, topMarginString = marginStringFromMarginWidth(topMarginWidth);
            for (var index = 0; index < topMarginDepth; index++) {
              this.lines.unshift(topMarginString);
            }
          }
        },
        {
          key: "addLeftMargin",
          value: function addLeftMargin(leftMarginWidth) {
            var leftMarginString = marginStringFromMarginWidth(leftMarginWidth), linesLength = this.lines.length;
            for (var index = 0; index < linesLength; index++) {
              this.lines[index] = leftMarginString + this.lines[index];
            }
          }
        },
        {
          key: "addRightMargin",
          value: function addRightMargin(rightMarginWidth) {
            var rightMarginString = marginStringFromMarginWidth(rightMarginWidth), linesLength = this.lines.length;
            for (var index = 0; index < linesLength; index++) {
              this.lines[index] = this.lines[index] + rightMarginString;
            }
          }
        },
        {
          key: "addBottomMargin",
          value: function addBottomMargin(bottomMarginDepth) {
            var width = this.getWidth(), bottomMarginWidth = width, bottomMarginString = marginStringFromMarginWidth(bottomMarginWidth);
            for (var index = 0; index < bottomMarginDepth; index++) {
              this.lines.push(bottomMarginString);
            }
          }
        },
        {
          key: "popLine",
          value: function popLine() {
            return this.lines.pop();
          }
        },
        {
          key: "shiftLine",
          value: function shiftLine() {
            return this.lines.shift();
          }
        },
        {
          key: "pushLine",
          value: function pushLine(line) {
            this.lines.push(line);
          }
        },
        {
          key: "unshiftLine",
          value: function unshiftLine(line) {
            this.lines.unshift(line);
          }
        },
        {
          key: "asString",
          value: function asString() {
            var string = this.lines.reduce(function(string2, line) {
              string2 += line + NEW_LINE_CHARACTER;
              return string2;
            }, _constants.EMPTY_STRING);
            return string;
          }
        }
      ]);
      return ParseTree2;
    }();
    function marginStringFromMarginWidth(marginWidth, spaceCharacter) {
      spaceCharacter = spaceCharacter || SPACE_CHARACTER;
      var marginString = _constants.EMPTY_STRING;
      for (var index = 0; index < marginWidth; index++) {
        marginString += spaceCharacter;
      }
      return marginString;
    }
  });

  // node_modules/occam-parsers/lib/parseTree/verticalBranch.js
  var require_verticalBranch = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return VerticalBranchParseTree;
      }
    });
    var _necessary = require_browser();
    var _parseTree = /* @__PURE__ */ _interop_require_default(require_parseTree());
    var _constants = require_constants4();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function get(target2, property2, receiver2) {
          var base = _super_prop_base(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2 || target2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _super_prop_base(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _get_prototype_of(object);
        if (object === null)
          break;
      }
      return object;
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var BAR_CHARACTER = _necessary.characters.BAR_CHARACTER;
    var VerticalBranchParseTree = /* @__PURE__ */ function(ParseTree) {
      _inherits(VerticalBranchParseTree2, ParseTree);
      function VerticalBranchParseTree2(lines, verticalBranchPosition) {
        _class_call_check(this, VerticalBranchParseTree2);
        var _this;
        _this = _call_super(this, VerticalBranchParseTree2, [
          lines
        ]);
        _this.verticalBranchPosition = verticalBranchPosition;
        return _this;
      }
      _create_class(VerticalBranchParseTree2, [
        {
          key: "getVerticalBranchPosition",
          value: function getVerticalBranchPosition() {
            return this.verticalBranchPosition;
          }
        },
        {
          key: "addLeftMargin",
          value: function addLeftMargin(leftMarginWidth) {
            _get(_get_prototype_of(VerticalBranchParseTree2.prototype), "addLeftMargin", this).call(this, leftMarginWidth);
            this.verticalBranchPosition += leftMarginWidth;
          }
        }
      ], [
        {
          key: "fromWidth",
          value: function fromWidth(width) {
            var string = BAR_CHARACTER, verticalBranchPosition = 0, verticalBranchParseTree = VerticalBranchParseTree2.fromStringAndVerticalBranchPosition(VerticalBranchParseTree2, string, verticalBranchPosition), leftMarginWidth = Math.floor(width / 2), rightMarginWidth = width - leftMarginWidth - 1;
            verticalBranchParseTree.addLeftMargin(leftMarginWidth);
            verticalBranchParseTree.addRightMargin(rightMarginWidth);
            return verticalBranchParseTree;
          }
        },
        {
          key: "fromDepthAndVerticalBranchPosition",
          value: function fromDepthAndVerticalBranchPosition(Class, depth, verticalBranchPosition) {
            var lines = linesFromDepth(depth), verticalBranchParseTree = new Class(lines, verticalBranchPosition);
            return verticalBranchParseTree;
          }
        },
        {
          key: "fromStringAndVerticalBranchPosition",
          value: function fromStringAndVerticalBranchPosition(Class, string, verticalBranchPosition) {
            if (verticalBranchPosition === void 0) {
              verticalBranchPosition = string;
              string = Class;
              Class = _parseTree.default;
            }
            var line = string, lines = [
              line
            ], verticalBranchParseTree = new Class(lines, verticalBranchPosition);
            return verticalBranchParseTree;
          }
        }
      ]);
      return VerticalBranchParseTree2;
    }(_parseTree.default);
    function linesFromDepth(depth) {
      var lines = [];
      var index = 0;
      while (index < depth) {
        lines[index++] = _constants.EMPTY_STRING;
      }
      return lines;
    }
  });

  // node_modules/occam-parsers/lib/utilities/tokens.js
  var require_tokens = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "lineIndexFromTokenIndexAndTokens", {
      enumerable: true,
      get: function() {
        return lineIndexFromTokenIndexAndTokens;
      }
    });
    function lineIndexFromTokenIndexAndTokens(tokenIndex, tokens) {
      var lineIndex = null;
      if (tokenIndex !== null) {
        lineIndex = 0;
        var start = 0, end = tokenIndex;
        tokens = tokens.slice(start, end);
        tokens.forEach(function(token) {
          var tokenEndOfLineToken = token.isEndOfLineToken();
          if (tokenEndOfLineToken) {
            lineIndex++;
          }
        });
      }
      return lineIndex;
    }
  });

  // node_modules/occam-parsers/lib/parseTree/ruleName.js
  var require_ruleName = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RuleNameParseTree;
      }
    });
    var _necessary = require_browser();
    var _verticalBranch = /* @__PURE__ */ _interop_require_default(require_verticalBranch());
    var _constants = require_constants4();
    var _tokens = require_tokens();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var SPACE_CHARACTER = _necessary.characters.SPACE_CHARACTER;
    var RuleNameParseTree = /* @__PURE__ */ function(VerticalBranchParseTree) {
      _inherits(RuleNameParseTree2, VerticalBranchParseTree);
      function RuleNameParseTree2() {
        _class_call_check(this, RuleNameParseTree2);
        return _call_super(this, RuleNameParseTree2, arguments);
      }
      _create_class(RuleNameParseTree2, null, [
        {
          key: "fromNonTerminalNodeAndTokens",
          value: function fromNonTerminalNodeAndTokens(nonTerminalNode, tokens) {
            var ruleName = nonTerminalNode.getRuleName(), opacity = nonTerminalNode.getOpacity(), firstSignificantTokenIndex = nonTerminalNode.getFirstSignificantTokenIndex(tokens), lastSignificantTokenIndex = nonTerminalNode.getLastSignificantTokenIndex(tokens), firstLineIndex = (0, _tokens.lineIndexFromTokenIndexAndTokens)(firstSignificantTokenIndex, tokens), lastLineIndex = (0, _tokens.lineIndexFromTokenIndexAndTokens)(lastSignificantTokenIndex, tokens);
            var lineIndexes;
            if (firstLineIndex === lastLineIndex) {
              var lineIndex = firstLineIndex;
              if (lineIndex === null) {
                lineIndexes = _constants.EMPTY_STRING;
              } else {
                lineIndexes = " [".concat(lineIndex, "]");
              }
            } else {
              if (false) {
              } else if (firstLineIndex === null) {
                lineIndexes = " [".concat(lastLineIndex, "]");
              } else if (lastLineIndex === null) {
                lineIndexes = " [".concat(firstLineIndex, "]");
              } else {
                lineIndexes = " [".concat(firstLineIndex, "-").concat(lastLineIndex, "]");
              }
            }
            var string = "".concat(ruleName);
            if (opacity !== null) {
              string = "".concat(string).concat(opacity);
            }
            string = "".concat(string).concat(lineIndexes);
            var precedence = nonTerminalNode.getPrecedence();
            if (precedence !== null) {
              if (precedence === Infinity) {
                precedence = SPACE_CHARACTER;
              }
              string = "".concat(string, " (").concat(precedence, ")");
            }
            var stringLength = string.length, verticalBranchParseTreeWidth = stringLength, verticalBranchParseTree = _verticalBranch.default.fromWidth(verticalBranchParseTreeWidth), verticalBranchPosition = verticalBranchParseTree.getVerticalBranchPosition(), ruleNameParseTree = _verticalBranch.default.fromStringAndVerticalBranchPosition(RuleNameParseTree2, string, verticalBranchPosition);
            ruleNameParseTree.appendToTop(verticalBranchParseTree);
            return ruleNameParseTree;
          }
        }
      ]);
      return RuleNameParseTree2;
    }(_verticalBranch.default);
  });

  // node_modules/occam-parsers/lib/parseTree/horizontalBranch.js
  var require_horizontalBranch = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return HorizontalBranchParseTree;
      }
    });
    var _necessary = require_browser();
    var _parseTree = /* @__PURE__ */ _interop_require_default(require_parseTree());
    var _constants = require_constants4();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var DASH_CHARACTER = _necessary.characters.DASH_CHARACTER;
    var HorizontalBranchParseTree = /* @__PURE__ */ function(ParseTree) {
      _inherits(HorizontalBranchParseTree2, ParseTree);
      function HorizontalBranchParseTree2() {
        _class_call_check(this, HorizontalBranchParseTree2);
        return _call_super(this, HorizontalBranchParseTree2, arguments);
      }
      _create_class(HorizontalBranchParseTree2, null, [
        {
          key: "fromWidth",
          value: function fromWidth(width) {
            var string = stringFromCharactersWidth(width, DASH_CHARACTER), line = string, lines = [
              line
            ], horizontalBranchParseTree = new HorizontalBranchParseTree2(lines);
            return horizontalBranchParseTree;
          }
        }
      ]);
      return HorizontalBranchParseTree2;
    }(_parseTree.default);
    function stringFromCharactersWidth(charactersWidth, character) {
      var string = _constants.EMPTY_STRING;
      for (var index = 0; index < charactersWidth; index++) {
        string += character;
      }
      return string;
    }
  });

  // node_modules/occam-parsers/lib/parseTree/childNodes.js
  var require_childNodes = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return ChildNodesParseTree;
      }
    });
    var _necessary = require_browser();
    var _verticalBranch = /* @__PURE__ */ _interop_require_default(require_verticalBranch());
    var _horizontalBranch = /* @__PURE__ */ _interop_require_default(require_horizontalBranch());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var first = _necessary.arrayUtilities.first;
    var ChildNodesParseTree = /* @__PURE__ */ function(VerticalBranchParseTree) {
      _inherits(ChildNodesParseTree2, VerticalBranchParseTree);
      function ChildNodesParseTree2() {
        _class_call_check(this, ChildNodesParseTree2);
        return _call_super(this, ChildNodesParseTree2, arguments);
      }
      _create_class(ChildNodesParseTree2, null, [
        {
          key: "fromChildNodesAndTokens",
          value: function fromChildNodesAndTokens(childNodes, tokens) {
            var childNodesParseTree = null;
            var childNodesLength = childNodes.length;
            if (childNodesLength > 0) {
              var childNodeParseTrees = childNodes.reduce(function(childNodeParseTrees2, childNode) {
                var childNodeParseTree = childNode.asParseTree(tokens);
                childNodeParseTrees2.push(childNodeParseTree);
                return childNodeParseTrees2;
              }, []), childNodeParseTreesLength = childNodeParseTrees.length;
              if (childNodeParseTreesLength === 1) {
                var firstChildNodeParseTree = first(childNodeParseTrees);
                childNodesParseTree = firstChildNodeParseTree;
              } else {
                var firstVerticalBranchPosition, lastVerticalBranchPosition = 0, childNodeParseTreesWidth = 0, childNodeParseTreesDepth = 0;
                childNodeParseTrees.forEach(function(childNodeParseTree, index) {
                  var childNodeParseTreeWidth = childNodeParseTree.getWidth(), childNodeParseTreeDepth = childNodeParseTree.getDepth();
                  if (index === 0) {
                    var firstChildNodeParseTree2 = childNodeParseTree, firstChildNodeParseTreeVerticalBranchPosition = firstChildNodeParseTree2.getVerticalBranchPosition();
                    firstVerticalBranchPosition = firstChildNodeParseTreeVerticalBranchPosition;
                  }
                  if (index === childNodeParseTreesLength - 1) {
                    var lastChildNodeParseTree = childNodeParseTree, lastChildNodeParseTreeVerticalBranchPosition = lastChildNodeParseTree.getVerticalBranchPosition();
                    lastVerticalBranchPosition += lastChildNodeParseTreeVerticalBranchPosition;
                  }
                  if (index < childNodeParseTreesLength - 1) {
                    lastVerticalBranchPosition += childNodeParseTreeWidth;
                    lastVerticalBranchPosition += 1;
                    childNodeParseTreesWidth += 1;
                  }
                  childNodeParseTreesWidth += childNodeParseTreeWidth;
                  childNodeParseTreesDepth = Math.max(childNodeParseTreesDepth, childNodeParseTreeDepth);
                });
                var width = lastVerticalBranchPosition - firstVerticalBranchPosition + 1, verticalBranchParseTree = _verticalBranch.default.fromWidth(width), horizontalBranchParseTree = _horizontalBranch.default.fromWidth(width), leftMarginWidth = firstVerticalBranchPosition, rightMarginWidth = childNodeParseTreesWidth - width - leftMarginWidth;
                verticalBranchParseTree.addLeftMargin(leftMarginWidth);
                verticalBranchParseTree.addRightMargin(rightMarginWidth);
                horizontalBranchParseTree.addLeftMargin(leftMarginWidth);
                horizontalBranchParseTree.addRightMargin(rightMarginWidth);
                var verticalBranchPosition = verticalBranchParseTree.getVerticalBranchPosition(), depth = childNodeParseTreesDepth;
                childNodesParseTree = _verticalBranch.default.fromDepthAndVerticalBranchPosition(ChildNodesParseTree2, depth, verticalBranchPosition);
                childNodeParseTrees.forEach(function(childNodeParseTree, index) {
                  var childNodeParseTreeDepth = childNodeParseTree.getDepth(), clonedChildNodeParseTree = childNodeParseTree.clone();
                  if (index < childNodeParseTreesLength - 1) {
                    var rightMarginWidth2 = 1;
                    clonedChildNodeParseTree.addRightMargin(rightMarginWidth2);
                  }
                  if (childNodeParseTreeDepth < childNodeParseTreesDepth) {
                    var bottomMarginDepth = childNodeParseTreesDepth - childNodeParseTreeDepth;
                    clonedChildNodeParseTree.addBottomMargin(bottomMarginDepth);
                  }
                  childNodesParseTree.appendToRight(clonedChildNodeParseTree);
                });
                childNodesParseTree.appendToTop(horizontalBranchParseTree);
                childNodesParseTree.appendToTop(verticalBranchParseTree);
              }
            }
            return childNodesParseTree;
          }
        }
      ]);
      return ChildNodesParseTree2;
    }(_verticalBranch.default);
  });

  // node_modules/occam-parsers/lib/parseTree/nonTerminalNode.js
  var require_nonTerminalNode = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NonTerminalNodeParseTree;
      }
    });
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName());
    var _childNodes = /* @__PURE__ */ _interop_require_default(require_childNodes());
    var _verticalBranch = /* @__PURE__ */ _interop_require_default(require_verticalBranch());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var NonTerminalNodeParseTree = /* @__PURE__ */ function(VerticalBranchParseTree) {
      _inherits(NonTerminalNodeParseTree2, VerticalBranchParseTree);
      function NonTerminalNodeParseTree2() {
        _class_call_check(this, NonTerminalNodeParseTree2);
        return _call_super(this, NonTerminalNodeParseTree2, arguments);
      }
      _create_class(NonTerminalNodeParseTree2, null, [
        {
          key: "fromNonTerminalNodeAndTokens",
          value: function fromNonTerminalNodeAndTokens(nonTerminalNode, tokens) {
            var nonTerminalNodeParseTree;
            var childNodes = nonTerminalNode.getChildNodes(), ruleNameParseTree = _ruleName.default.fromNonTerminalNodeAndTokens(nonTerminalNode, tokens), childNodesParseTree = _childNodes.default.fromChildNodesAndTokens(childNodes, tokens);
            if (childNodesParseTree === null) {
              var ruleNameParseTreeDepth = ruleNameParseTree.getDepth(), ruleNameParseTreeVerticalBranchPosition = ruleNameParseTree.getVerticalBranchPosition(), verticalBranchPosition = ruleNameParseTreeVerticalBranchPosition, depth = ruleNameParseTreeDepth;
              nonTerminalNodeParseTree = _verticalBranch.default.fromDepthAndVerticalBranchPosition(NonTerminalNodeParseTree2, depth, verticalBranchPosition);
              nonTerminalNodeParseTree.appendToRight(ruleNameParseTree);
            } else {
              var ruleNameParseTreeVerticalBranchPosition1 = ruleNameParseTree.getVerticalBranchPosition();
              var childNodesParseTreeVerticalBranchPosition = childNodesParseTree.getVerticalBranchPosition(), verticalBranchPositionsDifference = ruleNameParseTreeVerticalBranchPosition1 - childNodesParseTreeVerticalBranchPosition;
              var leftMarginWidth;
              if (false) {
              } else if (verticalBranchPositionsDifference < 0) {
                leftMarginWidth = -verticalBranchPositionsDifference;
                ruleNameParseTree.addLeftMargin(leftMarginWidth);
              } else if (verticalBranchPositionsDifference > 0) {
                leftMarginWidth = +verticalBranchPositionsDifference;
                childNodesParseTree.addLeftMargin(leftMarginWidth);
              }
              var ruleNameParseTreeWidth = ruleNameParseTree.getWidth(), childNodesParseTreeWidth = childNodesParseTree.getWidth(), widthsDifference = ruleNameParseTreeWidth - childNodesParseTreeWidth;
              var rightMarginWidth;
              if (false) {
              } else if (widthsDifference < 0) {
                rightMarginWidth = -widthsDifference;
                ruleNameParseTree.addRightMargin(rightMarginWidth);
              } else if (widthsDifference > 0) {
                rightMarginWidth = +widthsDifference;
                childNodesParseTree.addRightMargin(rightMarginWidth);
              }
              ruleNameParseTreeVerticalBranchPosition1 = ruleNameParseTree.getVerticalBranchPosition();
              var ruleNameParseTreeDepth1 = ruleNameParseTree.getDepth(), verticalBranchPosition1 = ruleNameParseTreeVerticalBranchPosition1, depth1 = ruleNameParseTreeDepth1;
              nonTerminalNodeParseTree = _verticalBranch.default.fromDepthAndVerticalBranchPosition(NonTerminalNodeParseTree2, depth1, verticalBranchPosition1);
              nonTerminalNodeParseTree.appendToRight(ruleNameParseTree);
              nonTerminalNodeParseTree.appendToBottom(childNodesParseTree);
            }
            return nonTerminalNodeParseTree;
          }
        }
      ]);
      return NonTerminalNodeParseTree2;
    }(_verticalBranch.default);
  });

  // node_modules/occam-parsers/lib/node/nonTerminal.js
  var require_nonTerminal = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NonTerminalNode;
      }
    });
    var _necessary = require_browser();
    var _occamlexers = require_lib3();
    var _node = /* @__PURE__ */ _interop_require_default(require_node());
    var _nonTerminalNode = /* @__PURE__ */ _interop_require_default(require_nonTerminalNode());
    function _array_like_to_array(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _array_without_holes(arr) {
      if (Array.isArray(arr))
        return _array_like_to_array(arr);
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _iterable_to_array(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _non_iterable_spread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _to_consumable_array(arr) {
      return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
    }
    function _unsupported_iterable_to_array(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _array_like_to_array(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _array_like_to_array(o, minLen);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var first = _necessary.arrayUtilities.first;
    var match = _necessary.arrayUtilities.match;
    var opaqueSpecialSymbol = _occamlexers.specialSymbols.opaque;
    var semiOpaqueSpecialSymbol = _occamlexers.specialSymbols.semiOpaque;
    var NonTerminalNode = /* @__PURE__ */ function() {
      function NonTerminalNode2(ruleName, parentNode, childNodes, opacity, precedence) {
        _class_call_check(this, NonTerminalNode2);
        this.ruleName = ruleName;
        this.parentNode = parentNode;
        this.childNodes = childNodes;
        this.opacity = opacity;
        this.precedence = precedence;
      }
      _create_class(NonTerminalNode2, [
        {
          key: "getRuleName",
          value: function getRuleName() {
            return this.ruleName;
          }
        },
        {
          key: "getParentNode",
          value: function getParentNode() {
            return this.parentNode;
          }
        },
        {
          key: "getChildNodes",
          value: function getChildNodes() {
            return this.childNodes;
          }
        },
        {
          key: "getOpacity",
          value: function getOpacity() {
            return this.opacity;
          }
        },
        {
          key: "getPrecedence",
          value: function getPrecedence() {
            return this.precedence;
          }
        },
        {
          key: "setRuleName",
          value: function setRuleName(ruleName) {
            this.ruleName = ruleName;
          }
        },
        {
          key: "setParentNode",
          value: function setParentNode(parentNode) {
            this.parentNode = parentNode;
          }
        },
        {
          key: "setChildNodes",
          value: function setChildNodes(childNodes) {
            var startIndex = 0, deleteCount = Infinity, addedChildNodes = childNodes;
            this.spliceChildNodes(startIndex, deleteCount, addedChildNodes);
          }
        },
        {
          key: "setOpacity",
          value: function setOpacity(opacity) {
            this.opacity = opacity;
          }
        },
        {
          key: "setPrecedence",
          value: function setPrecedence(precedence) {
            this.precedence = precedence;
          }
        },
        {
          key: "isOpaque",
          value: function isOpaque() {
            var opaque = this.opacity === opaqueSpecialSymbol;
            return opaque;
          }
        },
        {
          key: "isSemiOpaque",
          value: function isSemiOpaque() {
            var semiOpaque = this.opacity === semiOpaqueSpecialSymbol;
            return semiOpaque;
          }
        },
        {
          key: "isTransparent",
          value: function isTransparent() {
            var semiOpaque = this.opacity === null;
            return semiOpaque;
          }
        },
        {
          key: "isTerminalNode",
          value: function isTerminalNode() {
            var terminalNode = false;
            return terminalNode;
          }
        },
        {
          key: "isNonTerminalNode",
          value: function isNonTerminalNode() {
            var nonTerminalNode = true;
            return nonTerminalNode;
          }
        },
        {
          key: "getDescendantNodes",
          value: function getDescendantNodes(descendantNodes) {
            return descendantNodes;
          }
        },
        {
          key: "getFirstSignificantTokenIndex",
          value: function getFirstSignificantTokenIndex(tokens) {
            var firstSignificantTokenIndex;
            this.forwardsSomeChildNode(function(childNode) {
              var node = childNode;
              firstSignificantTokenIndex = node.getFirstSignificantTokenIndex(tokens);
              if (firstSignificantTokenIndex !== null) {
                return true;
              }
            });
            return firstSignificantTokenIndex;
          }
        },
        {
          key: "getLastSignificantTokenIndex",
          value: function getLastSignificantTokenIndex(tokens) {
            var lastSignificantTokenIndex;
            this.backwardsSomeChildNode(function(childNode) {
              var node = childNode;
              lastSignificantTokenIndex = node.getLastSignificantTokenIndex(tokens);
              if (lastSignificantTokenIndex !== null) {
                return true;
              }
            });
            return lastSignificantTokenIndex;
          }
        },
        {
          key: "getSignificantTokens",
          value: function getSignificantTokens() {
            var significantTokens = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
            this.childNodes.forEach(function(childNode) {
              childNode.getSignificantTokens(significantTokens);
            });
            return significantTokens;
          }
        },
        {
          key: "getMultiplicity",
          value: function getMultiplicity() {
            var childNodesLength = this.childNodes.length, multiplicity = childNodesLength;
            return multiplicity;
          }
        },
        {
          key: "isEmpty",
          value: function isEmpty() {
            var multiplicity = this.getMultiplicity(), empty = multiplicity === 0;
            return empty;
          }
        },
        {
          key: "isSingular",
          value: function isSingular() {
            var multiplicity = this.getMultiplicity(), singular = multiplicity === 1;
            return singular;
          }
        },
        {
          key: "isLowerPrecedence",
          value: function isLowerPrecedence(ruleName, precedence) {
            var lowerPrecedence;
            if (false) {
            } else if (this.precedence === null) {
              lowerPrecedence = false;
            } else if (this.precedence === Infinity) {
              var firstChildNode = first(this.childNodes);
              lowerPrecedence = firstChildNode.isLowerPrecedence(ruleName, precedence);
            } else {
              lowerPrecedence = this.ruleName === ruleName && this.precedence < precedence;
            }
            return lowerPrecedence;
          }
        },
        {
          key: "isUnprecedented",
          value: function isUnprecedented() {
            var _this = this;
            var unprecedented = false;
            if (this.precedence !== null) {
              unprecedented = this.childNodes.some(function(childNode) {
                var childNodeLowerPrecedence = childNode.isLowerPrecedence(_this.ruleName, _this.precedence);
                if (childNodeLowerPrecedence) {
                  return true;
                }
              });
            }
            return unprecedented;
          }
        },
        {
          key: "asParseTree",
          value: function asParseTree(tokens) {
            var nonTerminalNode = this, nonTerminalNodeParseTree = _nonTerminalNode.default.fromNonTerminalNodeAndTokens(nonTerminalNode, tokens), parseTree = nonTerminalNodeParseTree;
            return parseTree;
          }
        },
        {
          key: "match",
          value: function match1(node) {
            var depth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity, exactly = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
            var matches = false;
            var nodeNonTerminalNode = node.isNonTerminalNode();
            if (nodeNonTerminalNode) {
              var nonTerminalNode = node, nonTerminalNodeRuleName = nonTerminalNode.getRuleName();
              if (this.ruleName === nonTerminalNodeRuleName) {
                var nonTerminalNodeOpacity = nonTerminalNode.getOpacity();
                if (this.opacity === nonTerminalNodeOpacity) {
                  var precedence = this.getPrecedence(), nonTerminalNodePrecedence = nonTerminalNode.getPrecedence();
                  if (precedence === nonTerminalNodePrecedence) {
                    depth--;
                    if (depth === 0) {
                      matches = true;
                    } else {
                      var nonTerminalNodeChildNodes = nonTerminalNode.getChildNodes();
                      matches = match(this.childNodes, nonTerminalNodeChildNodes, function(childNode, nonTerminalNodeChildNode) {
                        var childNodeMatchesNonTerminalNodeChildNode = childNode.match(nonTerminalNodeChildNode, depth, exactly);
                        if (childNodeMatchesNonTerminalNodeChildNode) {
                          return true;
                        }
                      });
                    }
                  }
                }
              }
            }
            return matches;
          }
        },
        {
          key: "rewrite",
          value: function rewrite(state) {
            var rewrittenNonTerminalNode = null;
            return rewrittenNonTerminalNode;
          }
        },
        {
          key: "destroy",
          value: function destroy() {
            this.forEachChildNode(function(childNode) {
              childNode.destroy();
            });
            this.parentNode = null;
            this.childNodes = null;
          }
        },
        {
          key: "clone",
          value: function clone() {
            for (var _len = arguments.length, remainingArguments = new Array(_len), _key = 0; _key < _len; _key++) {
              remainingArguments[_key] = arguments[_key];
            }
            var Class = this.constructor, parentNode = null, ruleName = this.ruleName, childNodes = cloneChildNodes(this.childNodes), opacity = this.opacity, precedence = this.precedence, nonTerminalNode = _construct(Class, [
              ruleName,
              parentNode,
              childNodes,
              opacity,
              precedence
            ].concat(_to_consumable_array(remainingArguments)));
            nonTerminalNode.setChildNodesParentNode();
            return nonTerminalNode;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(Class, ruleName, childNodes, opacity, precedence) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
              remainingArguments[_key - 5] = arguments[_key];
            }
            if (precedence === void 0) {
              precedence = opacity;
              opacity = childNodes;
              childNodes = ruleName;
              ruleName = Class;
              Class = NonTerminalNode2;
            }
            var parentNode = null, nonTerminalNode = _construct(Class, [
              ruleName,
              parentNode,
              childNodes,
              opacity,
              precedence
            ].concat(_to_consumable_array(remainingArguments)));
            nonTerminalNode.setChildNodesParentNode();
            return nonTerminalNode;
          }
        }
      ]);
      return NonTerminalNode2;
    }();
    Object.assign(NonTerminalNode.prototype, _node.default);
    function cloneChildNodes(childNodes) {
      childNodes = childNodes.map(function(childNode) {
        childNode = childNode.clone();
        return childNode;
      });
      return childNodes;
    }
  });

  // node_modules/occam-parsers/lib/part/nonTerminal.js
  var require_nonTerminal2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NonTerminalPart;
      }
    });
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var NonTerminalPart = /* @__PURE__ */ function() {
      function NonTerminalPart2(type, callAhead) {
        _class_call_check(this, NonTerminalPart2);
        this.type = type;
        this.callAhead = callAhead;
      }
      _create_class(NonTerminalPart2, [
        {
          key: "getType",
          value: function getType() {
            return this.type;
          }
        },
        {
          key: "isCallAhead",
          value: function isCallAhead() {
            return this.callAhead;
          }
        },
        {
          key: "isNonTerminalPart",
          value: function isNonTerminalPart() {
            var nonTerminalPart = true;
            return nonTerminalPart;
          }
        },
        {
          key: "isTerminalPart",
          value: function isTerminalPart() {
            var terminalPart = false;
            return terminalPart;
          }
        },
        {
          key: "isRuleNamePart",
          value: function isRuleNamePart() {
            var ruleNamePart = false;
            return ruleNamePart;
          }
        }
      ]);
      return NonTerminalPart2;
    }();
  });

  // node_modules/occam-parsers/lib/partTypes.js
  var require_partTypes = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get ChoiceOfPartsPartType() {
        return ChoiceOfPartsPartType;
      },
      get OneOrMorePartsPartType() {
        return OneOrMorePartsPartType;
      },
      get OptionalPartPartType() {
        return OptionalPartPartType;
      },
      get RuleNamePartType() {
        return RuleNamePartType;
      },
      get SequenceOfPartsPartType() {
        return SequenceOfPartsPartType;
      },
      get ZeroOrMorePartsPartType() {
        return ZeroOrMorePartsPartType;
      },
      get default() {
        return _default;
      }
    });
    var RuleNamePartType = "ruleNamePart";
    var OptionalPartPartType = "optionalPart";
    var ChoiceOfPartsPartType = "choiceOfParts";
    var OneOrMorePartsPartType = "oneOrMoreParts";
    var ZeroOrMorePartsPartType = "zeroOrMoreParts";
    var SequenceOfPartsPartType = "sequenceOfParts";
    var _default = {
      RuleNamePartType,
      OptionalPartPartType,
      ChoiceOfPartsPartType,
      OneOrMorePartsPartType,
      ZeroOrMorePartsPartType,
      SequenceOfPartsPartType
    };
  });

  // node_modules/occam-parsers/lib/part/nonTerminal/optionalPart.js
  var require_optionalPart = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return OptionalPartPart;
      },
      get parseOptionalPart() {
        return parseOptionalPart;
      }
    });
    var _occamlexers = require_lib3();
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal2());
    var _partTypes = require_partTypes();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var questionMark = _occamlexers.specialSymbols.questionMark;
    var OptionalPartPart = /* @__PURE__ */ function(NonTerminalPart) {
      _inherits(OptionalPartPart2, NonTerminalPart);
      function OptionalPartPart2(type, callAhead, part) {
        _class_call_check(this, OptionalPartPart2);
        var _this;
        _this = _call_super(this, OptionalPartPart2, [
          type,
          callAhead
        ]);
        _this.part = part;
        return _this;
      }
      _create_class(OptionalPartPart2, [
        {
          key: "getPart",
          value: function getPart() {
            return this.part;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var savedIndex = state.getSavedIndex(), nodesLength = nodes.length;
            parsed = parseOptionalPart(this.part, nodes, state, callback, callAhead);
            if (!parsed) {
              var start = nodesLength;
              nodes.splice(start);
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var partString = this.part.asString(), string = "".concat(partString).concat(questionMark);
            return string;
          }
        }
      ], [
        {
          key: "fromPart",
          value: function fromPart(part) {
            var type = _partTypes.OptionalPartPartType, callAhead = false, optionalPartPart = new OptionalPartPart2(type, callAhead, part);
            return optionalPartPart;
          }
        }
      ]);
      return OptionalPartPart2;
    }(_nonTerminal.default);
    function parseOptionalPart(part, nodes, state, callback, callAhead) {
      var parsed;
      if (callAhead === null) {
        parsed = part.parse(nodes, state, callback, callAhead);
        parsed = true;
      } else {
        parsed = callAhead();
        if (!parsed) {
          parsed = part.parse(nodes, state, callback, callAhead);
        }
      }
      return parsed;
    }
  });

  // node_modules/occam-parsers/lib/part/nonTerminal/zeroOrMoreParts.js
  var require_zeroOrMoreParts = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return ZeroOrMorePartsPart;
      },
      get parseZeroOrMorePartsPart() {
        return parseZeroOrMorePartsPart;
      }
    });
    var _occamlexers = require_lib3();
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal2());
    var _partTypes = require_partTypes();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var asterisk = _occamlexers.specialSymbols.asterisk;
    var ZeroOrMorePartsPart = /* @__PURE__ */ function(NonTerminalPart) {
      _inherits(ZeroOrMorePartsPart2, NonTerminalPart);
      function ZeroOrMorePartsPart2(type, callAhead, part) {
        _class_call_check(this, ZeroOrMorePartsPart2);
        var _this;
        _this = _call_super(this, ZeroOrMorePartsPart2, [
          type,
          callAhead
        ]);
        _this.part = part;
        return _this;
      }
      _create_class(ZeroOrMorePartsPart2, [
        {
          key: "getPart",
          value: function getPart() {
            return this.part;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var savedIndex = state.getSavedIndex(), nodesLength = nodes.length;
            parsed = parseZeroOrMorePartsPart(this.part, nodes, state, callback, callAhead);
            if (!parsed) {
              var start = nodesLength;
              nodes.splice(start);
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var partString = this.part.asString(), string = "".concat(partString).concat(asterisk);
            return string;
          }
        }
      ], [
        {
          key: "fromPart",
          value: function fromPart(part) {
            var type = _partTypes.ZeroOrMorePartsPartType, callAhead = false, zeroOrMorePartsPart = new ZeroOrMorePartsPart2(type, callAhead, part);
            return zeroOrMorePartsPart;
          }
        }
      ]);
      return ZeroOrMorePartsPart2;
    }(_nonTerminal.default);
    function parseZeroOrMorePartsPart(part, nodes, state, callback, callAhead) {
      var parsed;
      if (callAhead === null) {
        parsed = part.parse(nodes, state, callback, callAhead);
        if (parsed) {
          parseZeroOrMorePartsPart(part, nodes, state, callback, callAhead);
        }
        parsed = true;
      } else {
        parsed = callAhead();
        if (!parsed) {
          parsed = part.parse(nodes, state, callback, function() {
            var parsed2;
            parsed2 = parseZeroOrMorePartsPart(part, nodes, state, callback, callAhead);
            return parsed2;
          });
        }
      }
      return parsed;
    }
  });

  // node_modules/occam-parsers/lib/part/nonTerminal/oneOrMoreParts.js
  var require_oneOrMoreParts = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return OneOrMorePartsPart;
      },
      get parseOneOrMorePartsPart() {
        return parseOneOrMorePartsPart;
      }
    });
    var _occamlexers = require_lib3();
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal2());
    var _partTypes = require_partTypes();
    var _zeroOrMoreParts = require_zeroOrMoreParts();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var plus = _occamlexers.specialSymbols.plus;
    var OneOrMorePartsPart = /* @__PURE__ */ function(NonTerminalPart) {
      _inherits(OneOrMorePartsPart2, NonTerminalPart);
      function OneOrMorePartsPart2(type, callAhead, part) {
        _class_call_check(this, OneOrMorePartsPart2);
        var _this;
        _this = _call_super(this, OneOrMorePartsPart2, [
          type,
          callAhead
        ]);
        _this.part = part;
        return _this;
      }
      _create_class(OneOrMorePartsPart2, [
        {
          key: "getPart",
          value: function getPart() {
            return this.part;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var savedIndex = state.getSavedIndex(), nodesLength = nodes.length;
            parsed = parseOneOrMorePartsPart(this.part, nodes, state, callback, callAhead);
            if (!parsed) {
              var start = nodesLength;
              nodes.splice(start);
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var partString = this.part.asString(), string = "".concat(partString).concat(plus);
            return string;
          }
        }
      ], [
        {
          key: "fromPart",
          value: function fromPart(part) {
            var type = _partTypes.OneOrMorePartsPartType, callAhead = false, oneOrMorePartsPart = new OneOrMorePartsPart2(type, callAhead, part);
            return oneOrMorePartsPart;
          }
        }
      ]);
      return OneOrMorePartsPart2;
    }(_nonTerminal.default);
    function parseOneOrMorePartsPart(part, nodes, state, callback, callAhead) {
      var parsed;
      if (callAhead === null) {
        parsed = part.parse(nodes, state, callback, callAhead);
        if (parsed) {
          (0, _zeroOrMoreParts.parseZeroOrMorePartsPart)(part, nodes, state, callback, callAhead);
        }
      } else {
        parsed = part.parse(nodes, state, callback, function() {
          var parsed2;
          parsed2 = (0, _zeroOrMoreParts.parseZeroOrMorePartsPart)(part, nodes, state, callback, callAhead);
          return parsed2;
        });
      }
      return parsed;
    }
  });

  // node_modules/occam-parsers/lib/ruleNames.js
  var require_ruleNames = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get CALL_AHEAD_MODIFIER_RULE_NAME() {
        return CALL_AHEAD_MODIFIER_RULE_NAME;
      },
      get CHOICE_OF_PARTS_RULE_NAME() {
        return CHOICE_OF_PARTS_RULE_NAME;
      },
      get DEFINITIONS_RULE_NAME() {
        return DEFINITIONS_RULE_NAME;
      },
      get DEFINITION_RULE_NAME() {
        return DEFINITION_RULE_NAME;
      },
      get DOCUMENT_RULE_NAME() {
        return DOCUMENT_RULE_NAME;
      },
      get END_OF_LINE_RULE_NAME() {
        return END_OF_LINE_RULE_NAME;
      },
      get EPSILON_RULE_NAME() {
        return EPSILON_RULE_NAME;
      },
      get ERROR_RULE_NAME() {
        return ERROR_RULE_NAME;
      },
      get NAME_RULE_NAME() {
        return NAME_RULE_NAME;
      },
      get NON_TERMINAL_PART_RULE_NAME() {
        return NON_TERMINAL_PART_RULE_NAME;
      },
      get NO_WHITESPACE_PART_RULE_NAME() {
        return NO_WHITESPACE_PART_RULE_NAME;
      },
      get ONE_OR_MORE_QUANTIFIER_RULE_NAME() {
        return ONE_OR_MORE_QUANTIFIER_RULE_NAME;
      },
      get OPACITY_MODIFIER_RULE_NAME() {
        return OPACITY_MODIFIER_RULE_NAME;
      },
      get OPTIONAL_QUANTIFIER_RULE_NAME() {
        return OPTIONAL_QUANTIFIER_RULE_NAME;
      },
      get PART_CHOICE_RULE_NAME() {
        return PART_CHOICE_RULE_NAME;
      },
      get PART_RULE_NAME() {
        return PART_RULE_NAME;
      },
      get PRECEDENCE_RULE_NAME() {
        return PRECEDENCE_RULE_NAME;
      },
      get QUANTIFIER_RULE_NAME() {
        return QUANTIFIER_RULE_NAME;
      },
      get REGULAR_EXPRESSION_RULE_NAME() {
        return REGULAR_EXPRESSION_RULE_NAME;
      },
      get RULE_NAME_RULE_NAME() {
        return RULE_NAME_RULE_NAME;
      },
      get RULE_RULE_NAME() {
        return RULE_RULE_NAME;
      },
      get SEQUENCE_OF_PARTS_RULE_NAME() {
        return SEQUENCE_OF_PARTS_RULE_NAME;
      },
      get SIGNIFICANT_TOKEN_TYPE_RULE_NAME() {
        return SIGNIFICANT_TOKEN_TYPE_RULE_NAME;
      },
      get START_OF_CONTENT_PART_RULE_NAME() {
        return START_OF_CONTENT_PART_RULE_NAME;
      },
      get STRING_LITERAL_RULE_NAME() {
        return STRING_LITERAL_RULE_NAME;
      },
      get TERMINAL_PART_RULE_NAME() {
        return TERMINAL_PART_RULE_NAME;
      },
      get WILDCARD_RULE_NAME() {
        return WILDCARD_RULE_NAME;
      },
      get ZERO_OR_MORE_QUANTIFIER_RULE_NAME() {
        return ZERO_OR_MORE_QUANTIFIER_RULE_NAME;
      }
    });
    var NAME_RULE_NAME = "name";
    var PART_RULE_NAME = "part";
    var RULE_RULE_NAME = "rule";
    var ERROR_RULE_NAME = "error";
    var EPSILON_RULE_NAME = "epsilon";
    var DOCUMENT_RULE_NAME = "document";
    var WILDCARD_RULE_NAME = "wildcard";
    var RULE_NAME_RULE_NAME = "ruleName";
    var DEFINITION_RULE_NAME = "definition";
    var PRECEDENCE_RULE_NAME = "precedence";
    var QUANTIFIER_RULE_NAME = "quantifier";
    var END_OF_LINE_RULE_NAME = "endOfLine";
    var PART_CHOICE_RULE_NAME = "partChoice";
    var DEFINITIONS_RULE_NAME = "definitions";
    var TERMINAL_PART_RULE_NAME = "terminalPart";
    var STRING_LITERAL_RULE_NAME = "stringLiteral";
    var CHOICE_OF_PARTS_RULE_NAME = "choiceOfParts";
    var OPACITY_MODIFIER_RULE_NAME = "opacityModifier";
    var NON_TERMINAL_PART_RULE_NAME = "nonTerminalPart";
    var SEQUENCE_OF_PARTS_RULE_NAME = "sequenceOfParts";
    var NO_WHITESPACE_PART_RULE_NAME = "noWhitespace";
    var REGULAR_EXPRESSION_RULE_NAME = "regularExpression";
    var CALL_AHEAD_MODIFIER_RULE_NAME = "callAheadModifier";
    var OPTIONAL_QUANTIFIER_RULE_NAME = "optionalQuantifier";
    var START_OF_CONTENT_PART_RULE_NAME = "startOfContent";
    var SIGNIFICANT_TOKEN_TYPE_RULE_NAME = "significantTokenType";
    var ONE_OR_MORE_QUANTIFIER_RULE_NAME = "oneOrMoreQuantifier";
    var ZERO_OR_MORE_QUANTIFIER_RULE_NAME = "zeroOrMoreQuantifier";
  });

  // node_modules/occam-parsers/lib/utilities/bnf.js
  var require_bnf2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get isNodeCallAheadModifierNode() {
        return isNodeCallAheadModifierNode;
      },
      get isNodeChoiceNode() {
        return isNodeChoiceNode;
      },
      get isNodeQuantifierNode() {
        return isNodeQuantifierNode;
      },
      get isNodeRuleNameNode() {
        return isNodeRuleNameNode;
      },
      get ruleNameFromQuantifierNode() {
        return ruleNameFromQuantifierNode;
      }
    });
    var _necessary = require_browser();
    var _ruleNames = require_ruleNames();
    var first = _necessary.arrayUtilities.first;
    function isNodeChoiceNode(node) {
      var nodeNoChoiceNode = false;
      var nodeTerminalNode = node.isTerminalNode();
      if (nodeTerminalNode) {
        var terminalNode = node, terminalNodeContent = terminalNode.getContent();
        nodeNoChoiceNode = terminalNodeContent === "|";
      }
      return nodeNoChoiceNode;
    }
    function isNodeRuleNameNode(node) {
      var nodeRuleNameNode = false;
      var nodeTerminalNode = node.isTerminalNode(), nodeNonTerminalNode = !nodeTerminalNode;
      if (nodeNonTerminalNode) {
        var nonTerminalNode = node, nonTerminalNodeRuleName = nonTerminalNode.getRuleName();
        nodeRuleNameNode = nonTerminalNodeRuleName === _ruleNames.RULE_NAME_RULE_NAME;
      }
      return nodeRuleNameNode;
    }
    function isNodeQuantifierNode(node) {
      var nodeQuantifierNode = false;
      var nodeNonTerminalNode = node.isNonTerminalNode();
      if (nodeNonTerminalNode) {
        var nonTerminalNode = node, ruleName = nonTerminalNode.getRuleName(), ruleNameQuantifierRuleName = ruleName === _ruleNames.QUANTIFIER_RULE_NAME;
        nodeQuantifierNode = ruleNameQuantifierRuleName;
      }
      return nodeQuantifierNode;
    }
    function isNodeCallAheadModifierNode(node) {
      var nodeCallAheadModifierNode = false;
      var nodeNonTerminalNode = node.isNonTerminalNode();
      if (nodeNonTerminalNode) {
        var nonTerminalNode = node, ruleName = nonTerminalNode.getRuleName(), ruleNameCallAheadModifierRuleName = ruleName === _ruleNames.CALL_AHEAD_MODIFIER_RULE_NAME;
        nodeCallAheadModifierNode = ruleNameCallAheadModifierRuleName;
      }
      return nodeCallAheadModifierNode;
    }
    function ruleNameFromQuantifierNode(quantifierNode) {
      var nonTerminalNode;
      nonTerminalNode = quantifierNode;
      var childNodes = nonTerminalNode.getChildNodes(), firstChildNode = first(childNodes);
      nonTerminalNode = firstChildNode;
      var ruleName = nonTerminalNode.getRuleName();
      return ruleName;
    }
  });

  // node_modules/occam-parsers/lib/node/bnf/part.js
  var require_part = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return PartBNFNode;
      }
    });
    var _necessary = require_browser();
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _optionalPart = /* @__PURE__ */ _interop_require_default(require_optionalPart());
    var _oneOrMoreParts = /* @__PURE__ */ _interop_require_default(require_oneOrMoreParts());
    var _zeroOrMoreParts = /* @__PURE__ */ _interop_require_default(require_zeroOrMoreParts());
    var _bnf = require_bnf2();
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var last = _necessary.arrayUtilities.last;
    var PartBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(PartBNFNode2, NonTerminalNode);
      function PartBNFNode2() {
        _class_call_check(this, PartBNFNode2);
        return _call_super(this, PartBNFNode2, arguments);
      }
      _create_class(PartBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(callAhead) {
            var childNodes = this.getChildNodes(), nodes = childNodes.slice(), part = partFromNodes(nodes);
            return part;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(PartBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return PartBNFNode2;
    }(_nonTerminal.default);
    function partFromNodes(nodes) {
      var part;
      var nodesLength = nodes.length;
      if (nodesLength === 1) {
        var node = nodes.pop(), callAhead = false;
        part = node.generatePart(callAhead);
      } else {
        var lastNodeQuantifierNode = isLastNodeQuantifierNode(nodes);
        if (lastNodeQuantifierNode) {
          var node1 = nodes.pop(), quantifierNode = node1;
          part = partFromNodes(nodes);
          var ruleName = (0, _bnf.ruleNameFromQuantifierNode)(quantifierNode), collectionOfPartsPart = collectionOfPartsPartFromPartAndRuleName(part, ruleName);
          part = collectionOfPartsPart;
        } else {
          nodes.shift();
          part = partFromNodes(nodes);
        }
      }
      return part;
    }
    function isLastNodeQuantifierNode(nodes) {
      var lastNode = last(nodes), lastNodeQuantifierNode = (0, _bnf.isNodeQuantifierNode)(lastNode);
      return lastNodeQuantifierNode;
    }
    function collectionOfPartsPartFromPartAndRuleName(part, ruleName) {
      var collectionOfPartsPart;
      switch (ruleName) {
        case _ruleNames.OPTIONAL_QUANTIFIER_RULE_NAME:
          var optionalPartPart = _optionalPart.default.fromPart(part);
          collectionOfPartsPart = optionalPartPart;
          break;
        case _ruleNames.ONE_OR_MORE_QUANTIFIER_RULE_NAME:
          var oneOrMorePartsPart = _oneOrMoreParts.default.fromPart(part);
          collectionOfPartsPart = oneOrMorePartsPart;
          break;
        case _ruleNames.ZERO_OR_MORE_QUANTIFIER_RULE_NAME:
          var zeroOrMorePartsPart = _zeroOrMoreParts.default.fromPart(part);
          collectionOfPartsPart = zeroOrMorePartsPart;
          break;
      }
      return collectionOfPartsPart;
    }
  });

  // node_modules/occam-parsers/lib/node/bnf/name.js
  var require_name2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NameBNFNode;
      }
    });
    var _necessary = require_browser();
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var first = _necessary.arrayUtilities.first;
    var NameBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(NameBNFNode2, NonTerminalNode);
      function NameBNFNode2() {
        _class_call_check(this, NameBNFNode2);
        return _call_super(this, NameBNFNode2, arguments);
      }
      _create_class(NameBNFNode2, [
        {
          key: "getName",
          value: function getName() {
            var childNodes = this.getChildNodes(), firstChildNode = first(childNodes), terminalNode = firstChildNode, terminalNodeContent = terminalNode.getContent(), name = terminalNodeContent;
            return name;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNode, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(NameBNFNode2, ruleName, childNode, opacity, precedence);
          }
        }
      ]);
      return NameBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/utilities/node.js
  var require_node2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get nodeFromChildNodesAndRuleName() {
        return nodeFromChildNodesAndRuleName;
      },
      get nodesFromChildNodesAndRuleName() {
        return nodesFromChildNodesAndRuleName;
      }
    });
    function nodeFromChildNodesAndRuleName(childNodes, ruleName) {
      var node = null;
      childNodes.some(function(childNode) {
        var childNodeNonTerminalNode = childNode.isNonTerminalNode();
        if (childNodeNonTerminalNode) {
          var nonTerminalNode = childNode, nonTerminalNodeRuleName = nonTerminalNode.getRuleName(), nonTerminalNodeRuleNameRuleName = nonTerminalNodeRuleName === ruleName;
          if (nonTerminalNodeRuleNameRuleName) {
            node = childNode;
            return true;
          }
        }
      });
      return node;
    }
    function nodesFromChildNodesAndRuleName(childNodes, ruleName) {
      var nodes = childNodes.filter(function(childNode) {
        var childNodeNonTerminalNode = childNode.isNonTerminalNode();
        if (childNodeNonTerminalNode) {
          var nonTerminalNode = childNode, nonTerminalNodeRuleName = nonTerminalNode.getRuleName(), nonTerminalNodeRuleNameRuleName = nonTerminalNodeRuleName === ruleName;
          if (nonTerminalNodeRuleNameRuleName) {
            return true;
          }
        }
      });
      return nodes;
    }
  });

  // node_modules/occam-parsers/lib/node/bnf/rule.js
  var require_rule3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RuleBNFNode;
      }
    });
    var _necessary = require_browser();
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _ruleNames = require_ruleNames();
    var _node = require_node2();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var first = _necessary.arrayUtilities.first;
    var secondLast = _necessary.arrayUtilities.secondLast;
    var RuleBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(RuleBNFNode2, NonTerminalNode);
      function RuleBNFNode2() {
        _class_call_check(this, RuleBNFNode2);
        return _call_super(this, RuleBNFNode2, arguments);
      }
      _create_class(RuleBNFNode2, [
        {
          key: "generateRule",
          value: function generateRule(Rule) {
            var name = this.getName(), opacity = this.getOpacity(), definitions = this.generateDefinitions(), rule = Rule.fromNameOpacityAndDefinitions(name, opacity, definitions);
            return rule;
          }
        },
        {
          key: "getOpacity",
          value: function getOpacity() {
            var opacity = null;
            var ruleName = _ruleNames.OPACITY_MODIFIER_RULE_NAME, childNodes = this.getChildNodes(), opacityModifierBNFNode = (0, _node.nodeFromChildNodesAndRuleName)(childNodes, ruleName);
            if (opacityModifierBNFNode !== null) {
              opacity = opacityModifierBNFNode.getOpacity();
            }
            return opacity;
          }
        },
        {
          key: "getName",
          value: function getName() {
            var childNodes = this.getChildNodes(), firstChildNode = first(childNodes), nameBNFNode = firstChildNode, name = nameBNFNode.getName();
            return name;
          }
        },
        {
          key: "generateDefinitions",
          value: function generateDefinitions() {
            var childNodes = this.getChildNodes(), secondLastChildNode = secondLast(childNodes), definitionsBNFNode = secondLastChildNode, definitions = definitionsBNFNode.generateDefinitions();
            return definitions;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(RuleBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return RuleBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/error.js
  var require_error = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return ErrorBNFNode;
      }
    });
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var ErrorBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(ErrorBNFNode2, NonTerminalNode);
      function ErrorBNFNode2() {
        _class_call_check(this, ErrorBNFNode2);
        return _call_super(this, ErrorBNFNode2, arguments);
      }
      _create_class(ErrorBNFNode2, null, [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(ErrorBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return ErrorBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/part/terminal.js
  var require_terminal = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return TerminalPart;
      }
    });
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var TerminalPart = /* @__PURE__ */ function() {
      function TerminalPart2() {
        _class_call_check(this, TerminalPart2);
      }
      _create_class(TerminalPart2, [
        {
          key: "isCallAhead",
          value: function isCallAhead() {
            var callAhead = false;
            return callAhead;
          }
        },
        {
          key: "isNonTerminalPart",
          value: function isNonTerminalPart() {
            var nonTerminalPart = false;
            return nonTerminalPart;
          }
        },
        {
          key: "isTerminalPart",
          value: function isTerminalPart() {
            var terminalPart = true;
            return terminalPart;
          }
        },
        {
          key: "isNoWhitespacePart",
          value: function isNoWhitespacePart() {
            var noWhitespacePart = false;
            return noWhitespacePart;
          }
        },
        {
          key: "isStartOfContentPart",
          value: function isStartOfContentPart() {
            var startOfContentPart = false;
            return startOfContentPart;
          }
        }
      ]);
      return TerminalPart2;
    }();
  });

  // node_modules/occam-parsers/lib/parseTree/terminalNode.js
  var require_terminalNode = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return TerminalNodeParseTree;
      }
    });
    var _necessary = require_browser();
    var _verticalBranch = /* @__PURE__ */ _interop_require_default(require_verticalBranch());
    var _constants = require_constants4();
    var _tokens = require_tokens();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var NEW_LINE_CHARACTER = _necessary.characters.NEW_LINE_CHARACTER;
    var CARRIAGE_RETURN_CHARACTER = _necessary.characters.CARRIAGE_RETURN_CHARACTER;
    var TerminalNodeParseTree = /* @__PURE__ */ function(VerticalBranchParseTree) {
      _inherits(TerminalNodeParseTree2, VerticalBranchParseTree);
      function TerminalNodeParseTree2() {
        _class_call_check(this, TerminalNodeParseTree2);
        return _call_super(this, TerminalNodeParseTree2, arguments);
      }
      _create_class(TerminalNodeParseTree2, null, [
        {
          key: "fromTerminalNodeAndTokens",
          value: function fromTerminalNodeAndTokens(terminalNode, tokens) {
            var content;
            content = terminalNode.getContent();
            content = content.replace(/[\r\n]/g, function(match) {
              switch (match) {
                case CARRIAGE_RETURN_CHARACTER:
                  return "\\r";
                case NEW_LINE_CHARACTER:
                  return "\\n";
                default:
                  return match;
              }
            });
            var type = terminalNode.getType(), significantTokenIndex = terminalNode.getSignificantTokenIndex(tokens), lineIndex = (0, _tokens.lineIndexFromTokenIndexAndTokens)(significantTokenIndex, tokens);
            var lineIndexes;
            if (lineIndex === null) {
              lineIndexes = _constants.EMPTY_STRING;
            } else {
              lineIndexes = " [".concat(lineIndex, "]");
            }
            var string = '"'.concat(content, '"[').concat(type, "]").concat(lineIndexes), stringLength = string.length, verticalBranchParseTreeWidth = stringLength, verticalBranchParseTree = _verticalBranch.default.fromWidth(verticalBranchParseTreeWidth), verticalBranchPosition = verticalBranchParseTree.getVerticalBranchPosition(), terminalNodeParseTree = _verticalBranch.default.fromStringAndVerticalBranchPosition(TerminalNodeParseTree2, string, verticalBranchPosition);
            terminalNodeParseTree.appendToTop(verticalBranchParseTree);
            return terminalNodeParseTree;
          }
        }
      ]);
      return TerminalNodeParseTree2;
    }(_verticalBranch.default);
  });

  // node_modules/occam-parsers/lib/node/terminal.js
  var require_terminal2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return TerminalNode;
      }
    });
    var _terminalNode = /* @__PURE__ */ _interop_require_default(require_terminalNode());
    function _array_like_to_array(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _array_without_holes(arr) {
      if (Array.isArray(arr))
        return _array_like_to_array(arr);
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _iterable_to_array(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _non_iterable_spread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _to_consumable_array(arr) {
      return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
    }
    function _unsupported_iterable_to_array(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _array_like_to_array(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _array_like_to_array(o, minLen);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var TerminalNode = /* @__PURE__ */ function() {
      function TerminalNode2(parentNode, significantToken) {
        _class_call_check(this, TerminalNode2);
        this.parentNode = parentNode;
        this.significantToken = significantToken;
      }
      _create_class(TerminalNode2, [
        {
          key: "getParentNode",
          value: function getParentNode() {
            return this.parentNode;
          }
        },
        {
          key: "getSignificantToken",
          value: function getSignificantToken() {
            return this.significantToken;
          }
        },
        {
          key: "setParentNode",
          value: function setParentNode(parentNode) {
            this.parentNode = parentNode;
          }
        },
        {
          key: "setSignificantToken",
          value: function setSignificantToken(significantToken) {
            this.significantToken = significantToken;
          }
        },
        {
          key: "isStartOfContentNode",
          value: function isStartOfContentNode() {
            var startOfContentNode = false;
            return startOfContentNode;
          }
        },
        {
          key: "isNoWhitespaceNode",
          value: function isNoWhitespaceNode() {
            var noWhitespaceNode = false;
            return noWhitespaceNode;
          }
        },
        {
          key: "isEpsilonNode",
          value: function isEpsilonNode() {
            var epsilonNode = false;
            return epsilonNode;
          }
        },
        {
          key: "isTerminalNode",
          value: function isTerminalNode() {
            var terminalNode = true;
            return terminalNode;
          }
        },
        {
          key: "isNonTerminalNode",
          value: function isNonTerminalNode() {
            var nonTerminalNode = false;
            return nonTerminalNode;
          }
        },
        {
          key: "getType",
          value: function getType() {
            return this.significantToken.getType();
          }
        },
        {
          key: "getContent",
          value: function getContent() {
            return this.significantToken.getContent();
          }
        },
        {
          key: "getPrecedence",
          value: function getPrecedence() {
            var precedence = null;
            return precedence;
          }
        },
        {
          key: "isLowerPrecedence",
          value: function isLowerPrecedence(parentRuleName, parentPrecedence) {
            var lowerPrecedence = false;
            return lowerPrecedence;
          }
        },
        {
          key: "getFirstSignificantTokenIndex",
          value: function getFirstSignificantTokenIndex(tokens) {
            var significantTokenIndex = this.getSignificantTokenIndex(tokens), firstSignificantTokenIndex = significantTokenIndex;
            return firstSignificantTokenIndex;
          }
        },
        {
          key: "getLastSignificantTokenIndex",
          value: function getLastSignificantTokenIndex(tokens) {
            var significantTokenIndex = this.getSignificantTokenIndex(tokens), lastSignificantTokenIndex = significantTokenIndex;
            return lastSignificantTokenIndex;
          }
        },
        {
          key: "getSignificantTokenIndex",
          value: function getSignificantTokenIndex(tokens) {
            var significantTokenIndex = null;
            if (this.significantToken !== null) {
              significantTokenIndex = tokens.indexOf(this.significantToken);
            }
            return significantTokenIndex;
          }
        },
        {
          key: "getSignificantTokens",
          value: function getSignificantTokens() {
            var significantTokens = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
            if (this.significantToken !== null) {
              significantTokens.push(this.significantToken);
            }
            return significantTokens;
          }
        },
        {
          key: "getAncestorNodes",
          value: function getAncestorNodes() {
            var ancestorNodes = [];
            var ancestorNode = this.parentNode;
            while (ancestorNode !== null) {
              ancestorNodes.push(ancestorNode);
              var parentNode = ancestorNode.getParentNode();
              ancestorNode = parentNode;
            }
            return ancestorNodes;
          }
        },
        {
          key: "mapAncestorNode",
          value: function mapAncestorNode(callback) {
            var ancestorNodes = this.getAncestorNodes();
            return ancestorNodes.map(callback);
          }
        },
        {
          key: "someAncestorNode",
          value: function someAncestorNode(callback) {
            var result = false;
            var index = 0, ancestorNode = this.parentNode;
            while (ancestorNode !== null) {
              result = !!callback(ancestorNode, index);
              if (result) {
                break;
              }
              var parentNode = ancestorNode.getParentNode();
              ancestorNode = parentNode;
              index++;
            }
            return result;
          }
        },
        {
          key: "findAncestorNode",
          value: function findAncestorNode(callback) {
            var index = 0, ancestorNode = this.parentNode;
            while (ancestorNode !== null) {
              var result = callback(ancestorNode, index);
              if (result) {
                return ancestorNode;
              }
              var parentNode = ancestorNode.getParentNode();
              ancestorNode = parentNode;
              index++;
            }
            ancestorNode = void 0;
            return ancestorNode;
          }
        },
        {
          key: "everyAncestorNode",
          value: function everyAncestorNode(callback) {
            var result = true;
            var index = 0, ancestorNode = this.parentNode;
            while (ancestorNode !== null) {
              result = !!callback(ancestorNode, index);
              if (!result) {
                break;
              }
              var parentNode = ancestorNode.getParentNode();
              ancestorNode = parentNode;
              index++;
            }
            return result;
          }
        },
        {
          key: "filterAncestorNode",
          value: function filterAncestorNode(callback) {
            var ancestorNodes = this.getAncestorNodes();
            return ancestorNodes.filter(callback);
          }
        },
        {
          key: "reduceAncestorNode",
          value: function reduceAncestorNode(callback, initialValue) {
            var ancestorNodes = this.getAncestorNodes();
            return ancestorNodes.reduce(callback, initialValue);
          }
        },
        {
          key: "forEachAncestorNode",
          value: function forEachAncestorNode(callback) {
            var ancestorNodes = this.getAncestorNodes();
            ancestorNodes.forEach(callback);
          }
        },
        {
          key: "getDescendantNodes",
          value: function getDescendantNodes() {
            var descendantNodes = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
            return descendantNodes;
          }
        },
        {
          key: "someDescendantNode",
          value: function someDescendantNode(callback) {
            var result = false;
            return result;
          }
        },
        {
          key: "findDescendantNode",
          value: function findDescendantNode(callback) {
            var descendantNode = void 0;
            return descendantNode;
          }
        },
        {
          key: "everyDescendantNode",
          value: function everyDescendantNode(callback) {
            var result = true;
            return result;
          }
        },
        {
          key: "asParseTree",
          value: function asParseTree(tokens) {
            var terminalNode = this, terminalNodeParseTree = _terminalNode.default.fromTerminalNodeAndTokens(terminalNode, tokens), parseTree = terminalNodeParseTree;
            return parseTree;
          }
        },
        {
          key: "match",
          value: function match(node) {
            var depth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity, exactly = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
            var matches = false;
            var nodeTerminalNode = node.isTerminalNode();
            if (nodeTerminalNode) {
              var terminalNode = node, significantToken = terminalNode.getSignificantToken();
              matches = exactly ? this.significantToken === significantToken : this.significantToken.match(significantToken);
            }
            return matches;
          }
        },
        {
          key: "clone",
          value: function clone() {
            for (var _len = arguments.length, remainingArguments = new Array(_len), _key = 0; _key < _len; _key++) {
              remainingArguments[_key] = arguments[_key];
            }
            var Class = this.constructor, parentNode = null, significantToken = this.significantToken, terminalNode = _construct(Class, [
              parentNode,
              significantToken
            ].concat(_to_consumable_array(remainingArguments)));
            return terminalNode;
          }
        },
        {
          key: "destroy",
          value: function destroy() {
            this.parentNode = null;
            this.significantToken = null;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing(Class) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              remainingArguments[_key - 1] = arguments[_key];
            }
            if (Class === void 0) {
              Class = TerminalNode2;
            }
            var parentNode = null, significantToken = null, terminalNode = _construct(Class, [
              parentNode,
              significantToken
            ].concat(_to_consumable_array(remainingArguments)));
            return terminalNode;
          }
        },
        {
          key: "fromSignificantToken",
          value: function fromSignificantToken(Class, significantToken) {
            for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              remainingArguments[_key - 2] = arguments[_key];
            }
            if (significantToken === void 0) {
              significantToken = Class;
              Class = TerminalNode2;
            }
            var parentNode = null, terminalNode = _construct(Class, [
              parentNode,
              significantToken
            ].concat(_to_consumable_array(remainingArguments)));
            return terminalNode;
          }
        }
      ]);
      return TerminalNode2;
    }();
  });

  // node_modules/occam-parsers/lib/parseTree/epsilonNode.js
  var require_epsilonNode = __commonJS((exports, module) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _occamlexers = require_lib3();
    var _verticalBranch = /* @__PURE__ */ _interop_require_default(require_verticalBranch());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var epsilon = _occamlexers.specialSymbols.epsilon;
    var EpsilonNodeParseTree = /* @__PURE__ */ function(VerticalBranchParseTree) {
      _inherits(EpsilonNodeParseTree2, VerticalBranchParseTree);
      function EpsilonNodeParseTree2() {
        _class_call_check(this, EpsilonNodeParseTree2);
        return _call_super(this, EpsilonNodeParseTree2, arguments);
      }
      _create_class(EpsilonNodeParseTree2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var string = epsilon, stringLength = string.length, verticalBranchParseTreeWidth = stringLength, verticalBranchParseTree = _verticalBranch.default.fromWidth(verticalBranchParseTreeWidth), verticalBranchPosition = verticalBranchParseTree.getVerticalBranchPosition(), terminalNodeParseTree = _verticalBranch.default.fromStringAndVerticalBranchPosition(EpsilonNodeParseTree2, string, verticalBranchPosition);
            terminalNodeParseTree.appendToTop(verticalBranchParseTree);
            var epsilonNodeParseTree = terminalNodeParseTree;
            return epsilonNodeParseTree;
          }
        }
      ]);
      return EpsilonNodeParseTree2;
    }(_verticalBranch.default);
    module.exports = EpsilonNodeParseTree;
  });

  // node_modules/occam-parsers/lib/node/terminal/epsilon.js
  var require_epsilon = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return EpsilonNode;
      }
    });
    var _occamlexers = require_lib3();
    var _terminal = /* @__PURE__ */ _interop_require_default(require_terminal2());
    var _epsilonNode = /* @__PURE__ */ _interop_require_default(require_epsilonNode());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var epsilon = _occamlexers.specialSymbols.epsilon;
    var EpsilonNode = /* @__PURE__ */ function(TerminalNode) {
      _inherits(EpsilonNode2, TerminalNode);
      function EpsilonNode2() {
        _class_call_check(this, EpsilonNode2);
        return _call_super(this, EpsilonNode2, arguments);
      }
      _create_class(EpsilonNode2, [
        {
          key: "getType",
          value: function getType() {
            var type = null;
            return type;
          }
        },
        {
          key: "getContent",
          value: function getContent() {
            var content = epsilon;
            return content;
          }
        },
        {
          key: "isEpsilonNode",
          value: function isEpsilonNode() {
            var epsilonNode = true;
            return epsilonNode;
          }
        },
        {
          key: "asParseTree",
          value: function asParseTree(tokens) {
            var epsilonNodeParseTree = _epsilonNode.default.fromNothing(), parseTree = epsilonNodeParseTree;
            return parseTree;
          }
        },
        {
          key: "match",
          value: function match(node, depth) {
            var matches = false;
            var nodeTerminalNode = node.isTerminalNode();
            if (nodeTerminalNode) {
              var terminalNode = node, terminalNodeEpsilonNode = terminalNode.isEpsilonNode();
              if (terminalNodeEpsilonNode) {
                matches = true;
              }
            }
            return matches;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _terminal.default.fromNothing(EpsilonNode2);
          }
        }
      ]);
      return EpsilonNode2;
    }(_terminal.default);
  });

  // node_modules/occam-parsers/lib/part/terminal/epsilon.js
  var require_epsilon2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return EpsilonPart;
      }
    });
    var _occamlexers = require_lib3();
    var _terminal = /* @__PURE__ */ _interop_require_default(require_terminal());
    var _epsilon = /* @__PURE__ */ _interop_require_default(require_epsilon());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var epsilon = _occamlexers.specialSymbols.epsilon;
    var EpsilonPart = /* @__PURE__ */ function(TerminalPart) {
      _inherits(EpsilonPart2, TerminalPart);
      function EpsilonPart2() {
        _class_call_check(this, EpsilonPart2);
        return _call_super(this, EpsilonPart2, arguments);
      }
      _create_class(EpsilonPart2, [
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var savedIndex = state.getSavedIndex(), epsilonBNFNode = _epsilon.default.fromNothing();
            parsed = epsilonBNFNode !== null;
            if (parsed) {
              nodes.push(epsilonBNFNode);
              if (parsed) {
                if (callAhead !== null) {
                  parsed = callAhead();
                }
              }
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var string = epsilon;
            return string;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var epsilonPart = new EpsilonPart2();
            return epsilonPart;
          }
        }
      ]);
      return EpsilonPart2;
    }(_terminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/epsilon.js
  var require_epsilon3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return EpsilonBNFNode;
      }
    });
    var _epsilon = /* @__PURE__ */ _interop_require_default(require_epsilon2());
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var EpsilonBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(EpsilonBNFNode2, NonTerminalNode);
      function EpsilonBNFNode2() {
        _class_call_check(this, EpsilonBNFNode2);
        return _call_super(this, EpsilonBNFNode2, arguments);
      }
      _create_class(EpsilonBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(callAhead) {
            var epsilonPart = _epsilon.default.fromNothing();
            return epsilonPart;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(EpsilonBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return EpsilonBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/document.js
  var require_document2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return DocumentBNFNode;
      }
    });
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _ruleNames = require_ruleNames();
    var _node = require_node2();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var DocumentBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(DocumentBNFNode2, NonTerminalNode);
      function DocumentBNFNode2() {
        _class_call_check(this, DocumentBNFNode2);
        return _call_super(this, DocumentBNFNode2, arguments);
      }
      _create_class(DocumentBNFNode2, [
        {
          key: "generateRules",
          value: function generateRules(Rule) {
            var ruleName = _ruleNames.RULE_RULE_NAME, childNodes = this.getChildNodes(), ruleBNFNodes = (0, _node.nodesFromChildNodesAndRuleName)(childNodes, ruleName), rules = ruleBNFNodes.map(function(ruleBNFNode) {
              var rule = ruleBNFNode.generateRule(Rule);
              return rule;
            });
            return rules;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(DocumentBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return DocumentBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/part/nonTerminal/ruleName.js
  var require_ruleName2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RuleNamePart;
      }
    });
    var _occamlexers = require_lib3();
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal2());
    var _constants = require_constants4();
    var _partTypes = require_partTypes();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var ellipsis = _occamlexers.specialSymbols.ellipsis;
    var RuleNamePart = /* @__PURE__ */ function(NonTerminalPart) {
      _inherits(RuleNamePart2, NonTerminalPart);
      function RuleNamePart2(type, callAAhead, ruleName) {
        _class_call_check(this, RuleNamePart2);
        var _this;
        _this = _call_super(this, RuleNamePart2, [
          type,
          callAAhead
        ]);
        _this.ruleName = ruleName;
        return _this;
      }
      _create_class(RuleNamePart2, [
        {
          key: "getRuleName",
          value: function getRuleName() {
            return this.ruleName;
          }
        },
        {
          key: "isRuleNamePart",
          value: function isRuleNamePart() {
            var ruleNamePart = true;
            return ruleNamePart;
          }
        },
        {
          key: "findRule",
          value: function findRule(state) {
            var ruleMap = state.getRuleMap(), rule = ruleMap[this.ruleName] || null;
            return rule;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var rule = this.findRule(state);
            parsed = rule !== null ? rule.parse(nodes, state, callback, callAhead) : false;
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var callAAhead = this.isCallAhead(), callAAheadString = callAAhead ? ellipsis : _constants.EMPTY_STRING, string = "".concat(this.ruleName).concat(callAAheadString);
            return string;
          }
        }
      ], [
        {
          key: "fromRuleName",
          value: function fromRuleName(ruleName) {
            var type = _partTypes.RuleNamePartType, callAAhead = false, ruleNamePart = new RuleNamePart2(type, callAAhead, ruleName);
            return ruleNamePart;
          }
        },
        {
          key: "fromCallAheadAndRuleName",
          value: function fromCallAheadAndRuleName(callAAhead, ruleName) {
            var type = _partTypes.RuleNamePartType, ruleNamePart = new RuleNamePart2(type, callAAhead, ruleName);
            return ruleNamePart;
          }
        }
      ]);
      return RuleNamePart2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/ruleName.js
  var require_ruleName3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RuleNameBNFNode;
      }
    });
    var _necessary = require_browser();
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName2());
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var first = _necessary.arrayUtilities.first;
    var RuleNameBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(RuleNameBNFNode2, NonTerminalNode);
      function RuleNameBNFNode2() {
        _class_call_check(this, RuleNameBNFNode2);
        return _call_super(this, RuleNameBNFNode2, arguments);
      }
      _create_class(RuleNameBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(callAhead) {
            var childNodes = this.getChildNodes(), firstChildNode = first(childNodes), terminalNode = firstChildNode, terminalNodeContent = terminalNode.getContent(), ruleName = terminalNodeContent, ruleNamePart = _ruleName.default.fromCallAheadAndRuleName(callAhead, ruleName);
            return ruleNamePart;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(RuleNameBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return RuleNameBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/part/terminal/wildcard.js
  var require_wildcard = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return WildcardPart;
      }
    });
    var _occamlexers = require_lib3();
    var _terminal = /* @__PURE__ */ _interop_require_default(require_terminal());
    var _terminal1 = /* @__PURE__ */ _interop_require_default(require_terminal2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var wildcard = _occamlexers.specialSymbols.wildcard;
    var WildcardPart = /* @__PURE__ */ function(TerminalPart) {
      _inherits(WildcardPart2, TerminalPart);
      function WildcardPart2() {
        _class_call_check(this, WildcardPart2);
        return _call_super(this, WildcardPart2, arguments);
      }
      _create_class(WildcardPart2, [
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var terminalNode = null;
            var savedIndex = state.getSavedIndex(), nextSignificantToken = state.getNextSignificantToken(), significantToken = nextSignificantToken;
            if (significantToken !== null) {
              terminalNode = _terminal1.default.fromSignificantToken(significantToken);
            }
            parsed = terminalNode !== null;
            if (parsed) {
              nodes.push(terminalNode);
              if (parsed) {
                if (callAhead !== null) {
                  parsed = callAhead();
                }
              }
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var string = wildcard;
            return string;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var wildcardPart = new WildcardPart2();
            return wildcardPart;
          }
        }
      ]);
      return WildcardPart2;
    }(_terminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/wildcard.js
  var require_wildcard2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return WildcardBNFNode;
      }
    });
    var _wildcard = /* @__PURE__ */ _interop_require_default(require_wildcard());
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var WildcardBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(WildcardBNFNode2, NonTerminalNode);
      function WildcardBNFNode2() {
        _class_call_check(this, WildcardBNFNode2);
        return _call_super(this, WildcardBNFNode2, arguments);
      }
      _create_class(WildcardBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(callAhead) {
            var wildcardPart = _wildcard.default.fromNothing();
            return wildcardPart;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(WildcardBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return WildcardBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/parseTree/endOfLineNode.js
  var require_endOfLineNode = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return EndOfLineNodeParseTree;
      }
    });
    var _occamlexers = require_lib3();
    var _verticalBranch = /* @__PURE__ */ _interop_require_default(require_verticalBranch());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var endOfLine = _occamlexers.specialSymbols.endOfLine;
    var EndOfLineNodeParseTree = /* @__PURE__ */ function(VerticalBranchParseTree) {
      _inherits(EndOfLineNodeParseTree2, VerticalBranchParseTree);
      function EndOfLineNodeParseTree2() {
        _class_call_check(this, EndOfLineNodeParseTree2);
        return _call_super(this, EndOfLineNodeParseTree2, arguments);
      }
      _create_class(EndOfLineNodeParseTree2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var string = endOfLine, stringLength = string.length, verticalBranchParseTreeWidth = stringLength, verticalBranchParseTree = _verticalBranch.default.fromWidth(verticalBranchParseTreeWidth), verticalBranchPosition = verticalBranchParseTree.getVerticalBranchPosition(), terminalNodeParseTree = _verticalBranch.default.fromStringAndVerticalBranchPosition(EndOfLineNodeParseTree2, string, verticalBranchPosition);
            terminalNodeParseTree.appendToTop(verticalBranchParseTree);
            var endOfLineNodeParseTree = terminalNodeParseTree;
            return endOfLineNodeParseTree;
          }
        }
      ]);
      return EndOfLineNodeParseTree2;
    }(_verticalBranch.default);
  });

  // node_modules/occam-parsers/lib/node/terminal/endOfLine.js
  var require_endOfLine5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return EndOfLineNode;
      }
    });
    var _terminal = /* @__PURE__ */ _interop_require_default(require_terminal2());
    var _endOfLineNode = /* @__PURE__ */ _interop_require_default(require_endOfLineNode());
    var _constants = require_constants4();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _get = Reflect.get;
      } else {
        _get = function get(target2, property2, receiver2) {
          var base = _super_prop_base(target2, property2);
          if (!base)
            return;
          var desc = Object.getOwnPropertyDescriptor(base, property2);
          if (desc.get) {
            return desc.get.call(receiver2 || target2);
          }
          return desc.value;
        };
      }
      return _get(target, property, receiver || target);
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _super_prop_base(object, property) {
      while (!Object.prototype.hasOwnProperty.call(object, property)) {
        object = _get_prototype_of(object);
        if (object === null)
          break;
      }
      return object;
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var EndOfLineNode = /* @__PURE__ */ function(TerminalNode) {
      _inherits(EndOfLineNode2, TerminalNode);
      function EndOfLineNode2() {
        _class_call_check(this, EndOfLineNode2);
        return _call_super(this, EndOfLineNode2, arguments);
      }
      _create_class(EndOfLineNode2, [
        {
          key: "getContent",
          value: function getContent() {
            var faithful = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
            var content = faithful ? _get(_get_prototype_of(EndOfLineNode2.prototype), "getContent", this).call(this) : _constants.EMPTY_STRING;
            return content;
          }
        },
        {
          key: "asParseTree",
          value: function asParseTree(tokens) {
            var endOfLineNodeParseTree = _endOfLineNode.default.fromNothing(), parseTree = endOfLineNodeParseTree;
            return parseTree;
          }
        }
      ], [
        {
          key: "fromSignificantToken",
          value: function fromSignificantToken(significantToken) {
            return _terminal.default.fromSignificantToken(EndOfLineNode2, significantToken);
          }
        }
      ]);
      return EndOfLineNode2;
    }(_terminal.default);
  });

  // node_modules/occam-parsers/lib/part/terminal/endOfLine.js
  var require_endOfLine6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return EndOfLinePart;
      }
    });
    var _occamlexers = require_lib3();
    var _terminal = /* @__PURE__ */ _interop_require_default(require_terminal());
    var _endOfLine = /* @__PURE__ */ _interop_require_default(require_endOfLine5());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var endOfLine = _occamlexers.specialSymbols.endOfLine;
    var EndOfLinePart = /* @__PURE__ */ function(TerminalPart) {
      _inherits(EndOfLinePart2, TerminalPart);
      function EndOfLinePart2() {
        _class_call_check(this, EndOfLinePart2);
        return _call_super(this, EndOfLinePart2, arguments);
      }
      _create_class(EndOfLinePart2, [
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var endOfLineNode = null;
            var savedIndex = state.getSavedIndex(), nextSignificantToken = state.getNextSignificantToken(), significantToken = nextSignificantToken;
            if (significantToken !== null) {
              var significantTokenEndOfLineToken = significantToken.isEndOfLineToken();
              if (significantTokenEndOfLineToken) {
                endOfLineNode = _endOfLine.default.fromSignificantToken(significantToken);
              }
            }
            parsed = endOfLineNode !== null;
            if (parsed) {
              nodes.push(endOfLineNode);
              if (parsed) {
                if (callAhead !== null) {
                  parsed = callAhead();
                }
              }
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var string = endOfLine;
            return string;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var endOfLinePart = new EndOfLinePart2();
            return endOfLinePart;
          }
        }
      ]);
      return EndOfLinePart2;
    }(_terminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/endOfLine.js
  var require_endOfLine7 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return EndOfLineBNFNode;
      }
    });
    var _endOfLine = /* @__PURE__ */ _interop_require_default(require_endOfLine6());
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var EndOfLineBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(EndOfLineBNFNode2, NonTerminalNode);
      function EndOfLineBNFNode2() {
        _class_call_check(this, EndOfLineBNFNode2);
        return _call_super(this, EndOfLineBNFNode2, arguments);
      }
      _create_class(EndOfLineBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(callAhead) {
            var endOfLinePart = _endOfLine.default.fromNothing();
            return endOfLinePart;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(EndOfLineBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return EndOfLineBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/partChoice.js
  var require_partChoice = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return PartChoice;
      }
    });
    var _necessary = require_browser();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SPACE_CHARACTER = _necessary.characters.SPACE_CHARACTER;
    var PartChoice = /* @__PURE__ */ function() {
      function PartChoice2(part, precedence) {
        _class_call_check(this, PartChoice2);
        this.part = part;
        this.precedence = precedence;
      }
      _create_class(PartChoice2, [
        {
          key: "getPart",
          value: function getPart() {
            return this.part;
          }
        },
        {
          key: "getPrecedence",
          value: function getPrecedence() {
            return this.precedence;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var string;
            var partString = this.part.asString();
            string = partString;
            if (this.precedence !== null) {
              var precedence = this.precedence === Infinity ? SPACE_CHARACTER : this.precedence;
              string = "".concat(string, " (").concat(precedence, ")");
            }
            return string;
          }
        }
      ], [
        {
          key: "fromPart",
          value: function fromPart(part) {
            var precedence = null, partChoice = new PartChoice2(part, precedence);
            return partChoice;
          }
        },
        {
          key: "fromPartAndPrecedence",
          value: function fromPartAndPrecedence(part, precedence) {
            var partChoice = new PartChoice2(part, precedence);
            return partChoice;
          }
        }
      ]);
      return PartChoice2;
    }();
  });

  // node_modules/occam-parsers/lib/node/bnf/partChoice.js
  var require_partChoice2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return PartChoiceBNFNode;
      }
    });
    var _partChoice = /* @__PURE__ */ _interop_require_default(require_partChoice());
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _node = require_node2();
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var PartChoiceBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(PartChoiceBNFNode2, NonTerminalNode);
      function PartChoiceBNFNode2() {
        _class_call_check(this, PartChoiceBNFNode2);
        return _call_super(this, PartChoiceBNFNode2, arguments);
      }
      _create_class(PartChoiceBNFNode2, [
        {
          key: "generatePartChoice",
          value: function generatePartChoice(callAhead) {
            var ruleName;
            var childNodes = this.getChildNodes();
            ruleName = _ruleNames.PART_RULE_NAME;
            var partBNFNode = (0, _node.nodeFromChildNodesAndRuleName)(childNodes, ruleName);
            ruleName = _ruleNames.PRECEDENCE_RULE_NAME;
            var precedenceBNFNode = (0, _node.nodeFromChildNodesAndRuleName)(childNodes, ruleName);
            callAhead = false;
            var part = partBNFNode.generatePart(callAhead), precedence = precedenceBNFNode === null ? null : precedenceBNFNode.getPrecedence(), definition = _partChoice.default.fromPartAndPrecedence(part, precedence);
            return definition;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(PartChoiceBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return PartChoiceBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/precedence.js
  var require_precedence = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return PrecedenceBNFNode;
      }
    });
    var _necessary = require_browser();
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var second = _necessary.arrayUtilities.second;
    var PrecedenceBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(PrecedenceBNFNode2, NonTerminalNode);
      function PrecedenceBNFNode2() {
        _class_call_check(this, PrecedenceBNFNode2);
        return _call_super(this, PrecedenceBNFNode2, arguments);
      }
      _create_class(PrecedenceBNFNode2, [
        {
          key: "getPrecedence",
          value: function getPrecedence() {
            var precedence = Infinity;
            var childNodes = this.getChildNodes(), childNodesLength = childNodes.length;
            if (childNodesLength === 3) {
              var secondChildNode = second(childNodes), terminalNode = secondChildNode, content = terminalNode.getContent();
              precedence = Number(content);
            }
            return precedence;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(PrecedenceBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return PrecedenceBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/quantifier.js
  var require_quantifier = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return QuantifierBNFNode;
      }
    });
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var QuantifierBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(QuantifierBNFNode2, NonTerminalNode);
      function QuantifierBNFNode2() {
        _class_call_check(this, QuantifierBNFNode2);
        return _call_super(this, QuantifierBNFNode2, arguments);
      }
      _create_class(QuantifierBNFNode2, null, [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(QuantifierBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return QuantifierBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/utilities/parse.js
  var require_parse = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get parsePart() {
        return parsePart;
      },
      get parseParts() {
        return parseParts;
      }
    });
    function parsePart(part, nodes, state, callback, callAhead) {
      var parsed;
      var index = 0, parts = [
        part
      ];
      parsed = parsePartOfParts(index, parts, nodes, state, callback, callAhead);
      return parsed;
    }
    function parseParts(parts, nodes, state, callback, callAhead) {
      var parsed;
      var index = 0;
      parsed = parsePartOfParts(index, parts, nodes, state, callback, callAhead);
      return parsed;
    }
    function parsePartOfParts(index, parts, nodes, state, callback, callAhead) {
      var parsed;
      var partsLength = parts.length;
      if (index === partsLength) {
        parsed = callback !== null ? callback() : true;
      } else {
        var part = parts[index], partCallAhead = callAhead === null ? part.isCallAhead() : true;
        index++;
        parsed = partCallAhead ? parsePartWithCallAhead(part, index, parts, nodes, state, callback, callAhead) : parsePartWithoutCallAhead(part, index, parts, nodes, state, callback, callAhead);
      }
      return parsed;
    }
    function parsePartWithCallAhead(part, index, parts, nodes, state, callback, callAhead) {
      var parsed;
      var nodesLength = nodes.length;
      callAhead = function() {
        var parsed2;
        parsed2 = parsePartOfParts(index, parts, nodes, state, callback, callAhead);
        return parsed2;
      };
      parsed = part.parse(nodes, state, callback, callAhead);
      if (!parsed) {
        var start = nodesLength;
        nodes.splice(start);
      }
      return parsed;
    }
    function parsePartWithoutCallAhead(part, index, parts, nodes, state, callback, callAhead) {
      var parsed;
      parsed = part.parse(nodes, state, callback, callAhead);
      if (parsed) {
        parsed = parsePartOfParts(index, parts, nodes, state, callback, callAhead);
      }
      return parsed;
    }
  });

  // node_modules/occam-parsers/lib/definition.js
  var require_definition = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Definition;
      }
    });
    var _necessary = require_browser();
    var _parse = require_parse();
    var _constants = require_constants4();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var SPACE_CHARACTER = _necessary.characters.SPACE_CHARACTER;
    var Definition = /* @__PURE__ */ function() {
      function Definition2(parts, precedence) {
        _class_call_check(this, Definition2);
        this.parts = parts;
        this.precedence = precedence;
      }
      _create_class(Definition2, [
        {
          key: "getParts",
          value: function getParts() {
            return this.parts;
          }
        },
        {
          key: "getPrecedence",
          value: function getPrecedence() {
            return this.precedence;
          }
        },
        {
          key: "parse",
          value: function parse(childNodes, state, callback, callAhead) {
            var parsed;
            var nodes = childNodes, savedIndex = state.getSavedIndex();
            parsed = (0, _parse.parseParts)(this.parts, nodes, state, callback, callAhead);
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var string;
            var partsString = this.parts.reduce(function(partsString2, part) {
              var partString = part.asString();
              if (partsString2 === _constants.EMPTY_STRING) {
                partsString2 = partString;
              } else {
                partsString2 = "".concat(partsString2, " ").concat(partString);
              }
              return partsString2;
            }, _constants.EMPTY_STRING);
            string = partsString;
            if (this.precedence !== null) {
              var precedence = this.precedence === Infinity ? SPACE_CHARACTER : this.precedence;
              string = "".concat(string, " (").concat(precedence, ")");
            }
            return string;
          }
        }
      ], [
        {
          key: "fromParts",
          value: function fromParts(Class, parts) {
            if (parts === void 0) {
              parts = Class;
              Class = Definition2;
            }
            var precedence = null, definition = new Class(parts, precedence);
            return definition;
          }
        },
        {
          key: "fromPartsAndPrecedence",
          value: function fromPartsAndPrecedence(Class, parts, precedence) {
            if (precedence === void 0) {
              precedence = parts;
              parts = Class;
              Class = Definition2;
            }
            var definition = new Class(parts, precedence);
            return definition;
          }
        }
      ]);
      return Definition2;
    }();
  });

  // node_modules/occam-parsers/lib/node/bnf/definition.js
  var require_definition2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return DefinitionBNFNode;
      }
    });
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _ruleNames = require_ruleNames();
    var _node = require_node2();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var DefinitionBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(DefinitionBNFNode2, NonTerminalNode);
      function DefinitionBNFNode2() {
        _class_call_check(this, DefinitionBNFNode2);
        return _call_super(this, DefinitionBNFNode2, arguments);
      }
      _create_class(DefinitionBNFNode2, [
        {
          key: "generateDefinition",
          value: function generateDefinition() {
            var ruleName;
            var childNodes = this.getChildNodes();
            ruleName = _ruleNames.PART_RULE_NAME;
            var partBNFNodes = (0, _node.nodesFromChildNodesAndRuleName)(childNodes, ruleName);
            ruleName = _ruleNames.PRECEDENCE_RULE_NAME;
            var precedenceBNFNode = (0, _node.nodeFromChildNodesAndRuleName)(childNodes, ruleName), callAhead = false, parts = partBNFNodes.map(function(partBNFNode) {
              var part = partBNFNode.generatePart(callAhead);
              return part;
            }), precedence = precedenceBNFNode === null ? null : precedenceBNFNode.getPrecedence(), definition = _definition.default.fromPartsAndPrecedence(parts, precedence);
            return definition;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(DefinitionBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return DefinitionBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/definitions.js
  var require_definitions = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return DefinitionsBNFNode;
      }
    });
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _ruleNames = require_ruleNames();
    var _node = require_node2();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var DefinitionsBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(DefinitionsBNFNode2, NonTerminalNode);
      function DefinitionsBNFNode2() {
        _class_call_check(this, DefinitionsBNFNode2);
        return _call_super(this, DefinitionsBNFNode2, arguments);
      }
      _create_class(DefinitionsBNFNode2, [
        {
          key: "generateDefinitions",
          value: function generateDefinitions() {
            var ruleName = _ruleNames.DEFINITION_RULE_NAME, childNodes = this.getChildNodes(), definitionBNFNodes = (0, _node.nodesFromChildNodesAndRuleName)(childNodes, ruleName), definitions = definitionBNFNodes.map(function(definitionBNFNode) {
              var definition = definitionBNFNode.generateDefinition();
              return definition;
            });
            return definitions;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNode, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(DefinitionsBNFNode2, ruleName, childNode, opacity, precedence);
          }
        }
      ]);
      return DefinitionsBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/terminalPart.js
  var require_terminalPart = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return TerminalPartBNFNode;
      }
    });
    var _necessary = require_browser();
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var first = _necessary.arrayUtilities.first;
    var TerminalPartBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(TerminalPartBNFNode2, NonTerminalNode);
      function TerminalPartBNFNode2() {
        _class_call_check(this, TerminalPartBNFNode2);
        return _call_super(this, TerminalPartBNFNode2, arguments);
      }
      _create_class(TerminalPartBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(callAhead) {
            var childNodes = this.getChildNodes(), firstChildNode = first(childNodes), node = firstChildNode, part = node.generatePart(callAhead);
            return part;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(TerminalPartBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return TerminalPartBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/part/nonTerminal/choiceOfParts.js
  var require_choiceOfParts = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return ChoiceOfPartsPart;
      }
    });
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal2());
    var _parse = require_parse();
    var _partTypes = require_partTypes();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var ChoiceOfPartsPart = /* @__PURE__ */ function(NonTerminalPart) {
      _inherits(ChoiceOfPartsPart2, NonTerminalPart);
      function ChoiceOfPartsPart2(type, callAhead, partChoices) {
        _class_call_check(this, ChoiceOfPartsPart2);
        var _this;
        _this = _call_super(this, ChoiceOfPartsPart2, [
          type,
          callAhead
        ]);
        _this.partChoices = partChoices;
        return _this;
      }
      _create_class(ChoiceOfPartsPart2, [
        {
          key: "getPartChoices",
          value: function getPartChoices() {
            return this.partChoices;
          }
        },
        {
          key: "getParts",
          value: function getParts() {
            var parts = this.partChoices.map(function(partChoice) {
              var part = partChoice.getPart();
              return part;
            });
            return parts;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var savedPrecedence = state.getSavedPrecedence();
            parsed = this.partChoices.some(function(partChoice) {
              var parsed2;
              var part = partChoice.getPart(), savedIndex = state.getSavedIndex(), precedence = partChoice.getPrecedence(), nodesLength = nodes.length;
              if (precedence !== null) {
                state.setPrecedence(precedence);
              }
              callback = callAhead === null ? null : function() {
                var parsed3;
                parsed3 = callAhead();
                return parsed3;
              };
              parsed2 = (0, _parse.parsePart)(part, nodes, state, callback, callAhead);
              if (!parsed2) {
                var start = nodesLength;
                nodes.splice(start);
                state.backtrack(savedIndex);
              }
              return parsed2;
            });
            if (!parsed) {
              state.resetPrecedence(savedPrecedence);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var partChoicesString = this.partChoices.reduce(function(partChoicesString2, partChoice) {
              var partChoiceString = partChoice.asString();
              if (partChoicesString2 === null) {
                partChoicesString2 = partChoiceString;
              } else {
                partChoicesString2 = "".concat(partChoicesString2, " | ").concat(partChoiceString);
              }
              return partChoicesString2;
            }, null), string = "( ".concat(partChoicesString, " )");
            return string;
          }
        }
      ], [
        {
          key: "fromPartChoices",
          value: function fromPartChoices(partChoices) {
            var type = _partTypes.ChoiceOfPartsPartType, callAhead = false, choiceOfPartsPart = new ChoiceOfPartsPart2(type, callAhead, partChoices);
            return choiceOfPartsPart;
          }
        }
      ]);
      return ChoiceOfPartsPart2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/choiceOfParts.js
  var require_choiceOfParts2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return ChoiceOfPartsBNFNode;
      }
    });
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _choiceOfParts = /* @__PURE__ */ _interop_require_default(require_choiceOfParts());
    var _ruleNames = require_ruleNames();
    var _node = require_node2();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var ChoiceOfPartsBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(ChoiceOfPartsBNFNode2, NonTerminalNode);
      function ChoiceOfPartsBNFNode2() {
        _class_call_check(this, ChoiceOfPartsBNFNode2);
        return _call_super(this, ChoiceOfPartsBNFNode2, arguments);
      }
      _create_class(ChoiceOfPartsBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(callAhead) {
            var ruleName = _ruleNames.PART_CHOICE_RULE_NAME, childNodes = this.getChildNodes(), partChoiceBNFNodes = (0, _node.nodesFromChildNodesAndRuleName)(childNodes, ruleName);
            callAhead = false;
            var partChoices = partChoiceBNFNodes.map(function(partChoiceBNFNode) {
              var partChoice = partChoiceBNFNode.generatePartChoice(callAhead);
              return partChoice;
            }), choiceOfPartsPart = _choiceOfParts.default.fromPartChoices(partChoices), part = choiceOfPartsPart;
            return part;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(ChoiceOfPartsBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return ChoiceOfPartsBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/part/terminal/stringLiteral.js
  var require_stringLiteral2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return StringLiteralPart;
      }
    });
    var _terminal = /* @__PURE__ */ _interop_require_default(require_terminal());
    var _terminal1 = /* @__PURE__ */ _interop_require_default(require_terminal2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var StringLiteralPart = /* @__PURE__ */ function(TerminalPart) {
      _inherits(StringLiteralPart2, TerminalPart);
      function StringLiteralPart2(content) {
        _class_call_check(this, StringLiteralPart2);
        var _this;
        _this = _call_super(this, StringLiteralPart2);
        _this.content = content;
        return _this;
      }
      _create_class(StringLiteralPart2, [
        {
          key: "getContent",
          value: function getContent() {
            return this.content;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var terminalNode = null;
            var savedIndex = state.getSavedIndex(), nextSignificantToken = state.getNextSignificantToken(), significantToken = nextSignificantToken;
            if (significantToken !== null) {
              var content = significantToken.getContent();
              if (content === this.content) {
                terminalNode = _terminal1.default.fromSignificantToken(significantToken);
              }
            }
            parsed = terminalNode !== null;
            if (parsed) {
              nodes.push(terminalNode);
              if (parsed) {
                if (callAhead !== null) {
                  parsed = callAhead();
                }
              }
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var content = this.content.replace(/\\/, "\\\\"), string = '"'.concat(content, '"');
            return string;
          }
        }
      ], [
        {
          key: "fromContent",
          value: function fromContent(content) {
            var stringLiteralPart = new StringLiteralPart2(content);
            return stringLiteralPart;
          }
        }
      ]);
      return StringLiteralPart2;
    }(_terminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/stringLiteral.js
  var require_stringLiteral3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return StringLiteralBNFNode;
      }
    });
    var _necessary = require_browser();
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral2());
    var _constants = require_constants4();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var first = _necessary.arrayUtilities.first;
    var second = _necessary.arrayUtilities.second;
    var StringLiteralBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(StringLiteralBNFNode2, NonTerminalNode);
      function StringLiteralBNFNode2() {
        _class_call_check(this, StringLiteralBNFNode2);
        var _this;
        _this = _call_super(this, StringLiteralBNFNode2, arguments), _define_property(_this, "regularExpression", /^"((?:\\.|[^"\\])*)"$/);
        return _this;
      }
      _create_class(StringLiteralBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(callAhead) {
            var content = this.getContent(), stringLiteralPart = _stringLiteral.default.fromContent(content);
            return stringLiteralPart;
          }
        },
        {
          key: "getContent",
          value: function getContent() {
            var content;
            var childNodes = this.getChildNodes(), firstChildNode = first(childNodes), terminalNode = firstChildNode, terminalNodeContent = terminalNode.getContent(), matches = terminalNodeContent.match(this.regularExpression), secondMatch = second(matches);
            content = secondMatch;
            content = sanitiseContent(content);
            return content;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(StringLiteralBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return StringLiteralBNFNode2;
    }(_nonTerminal.default);
    function sanitiseContent(content) {
      content = content.replace(/\\\\/g, _constants.ESCAPED_BACKSLASH).replace(/\\"/g, _constants.ESCAPED_DOUBLE_QUOTE);
      return content;
    }
  });

  // node_modules/occam-parsers/lib/node/bnf/nonTerminalPart.js
  var require_nonTerminalPart = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NonTerminalPartBNFNode;
      }
    });
    var _necessary = require_browser();
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _ruleNames = require_ruleNames();
    var _node = require_node2();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var first = _necessary.arrayUtilities.first;
    var NonTerminalPartBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(NonTerminalPartBNFNode2, NonTerminalNode);
      function NonTerminalPartBNFNode2() {
        _class_call_check(this, NonTerminalPartBNFNode2);
        return _call_super(this, NonTerminalPartBNFNode2, arguments);
      }
      _create_class(NonTerminalPartBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(callAhead) {
            var childNodes = this.getChildNodes();
            if (!callAhead) {
              var ruleName = _ruleNames.CALL_AHEAD_MODIFIER_RULE_NAME, callAheadModifierBNFNode = (0, _node.nodeFromChildNodesAndRuleName)(childNodes, ruleName);
              callAhead = callAheadModifierBNFNode !== null;
            }
            var firstChildNode = first(childNodes), node = firstChildNode, part = node.generatePart(callAhead);
            return part;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(NonTerminalPartBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return NonTerminalPartBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/part/nonTerminal/sequenceOfParts.js
  var require_sequenceOfParts = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return SequenceOfPartsPart;
      }
    });
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal2());
    var _parse = require_parse();
    var _partTypes = require_partTypes();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var SequenceOfPartsPart = /* @__PURE__ */ function(NonTerminalPart) {
      _inherits(SequenceOfPartsPart2, NonTerminalPart);
      function SequenceOfPartsPart2(type, callAhead, parts) {
        _class_call_check(this, SequenceOfPartsPart2);
        var _this;
        _this = _call_super(this, SequenceOfPartsPart2, [
          type,
          callAhead
        ]);
        _this.parts = parts;
        return _this;
      }
      _create_class(SequenceOfPartsPart2, [
        {
          key: "getParts",
          value: function getParts() {
            return this.parts;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var savedIndex = state.getSavedIndex(), nodesLength = nodes.length;
            callback = callAhead === null ? null : function() {
              var parsed2;
              parsed2 = callAhead();
              return parsed2;
            };
            parsed = (0, _parse.parseParts)(this.parts, nodes, state, callback, callAhead);
            if (!parsed) {
              var start = nodesLength;
              nodes.splice(start);
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var partsString = this.parts.reduce(function(partsString2, part) {
              var partString = part.asString();
              if (partsString2 === null) {
                partsString2 = partString;
              } else {
                partsString2 = "".concat(partsString2, " ").concat(partString);
              }
              return partsString2;
            }, null), string = "( ".concat(partsString, " )");
            return string;
          }
        }
      ], [
        {
          key: "fromParts",
          value: function fromParts(parts) {
            var type = _partTypes.SequenceOfPartsPartType, callAhead = false, sequenceOfPartsPart = new SequenceOfPartsPart2(type, callAhead, parts);
            return sequenceOfPartsPart;
          }
        }
      ]);
      return SequenceOfPartsPart2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/sequenceOfParts.js
  var require_sequenceOfParts2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return SequenceOfPartsBNFNode;
      }
    });
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _sequenceOfParts = /* @__PURE__ */ _interop_require_default(require_sequenceOfParts());
    var _ruleNames = require_ruleNames();
    var _node = require_node2();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var SequenceOfPartsBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(SequenceOfPartsBNFNode2, NonTerminalNode);
      function SequenceOfPartsBNFNode2() {
        _class_call_check(this, SequenceOfPartsBNFNode2);
        return _call_super(this, SequenceOfPartsBNFNode2, arguments);
      }
      _create_class(SequenceOfPartsBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(callAhead) {
            var ruleName = _ruleNames.PART_RULE_NAME, childNodes = this.getChildNodes(), partBNFNodes = (0, _node.nodesFromChildNodesAndRuleName)(childNodes, ruleName);
            callAhead = false;
            var parts = partBNFNodes.map(function(partBNFNode) {
              var part2 = partBNFNode.generatePart(callAhead);
              return part2;
            }), sequenceOfPartsPart = _sequenceOfParts.default.fromParts(parts), part = sequenceOfPartsPart;
            return part;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(SequenceOfPartsBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return SequenceOfPartsBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/opacityModifier.js
  var require_opacityModifier = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return OpacityModifierBNFNode;
      }
    });
    var _necessary = require_browser();
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var second = _necessary.arrayUtilities.second;
    var OpacityModifierBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(OpacityModifierBNFNode2, NonTerminalNode);
      function OpacityModifierBNFNode2() {
        _class_call_check(this, OpacityModifierBNFNode2);
        return _call_super(this, OpacityModifierBNFNode2, arguments);
      }
      _create_class(OpacityModifierBNFNode2, [
        {
          key: "getOpacity",
          value: function getOpacity() {
            var childNodes = this.getChildNodes(), secondChildNode = second(childNodes), terminalNode = secondChildNode, terminalNodeContent = terminalNode.getContent(), opacity = terminalNodeContent;
            return opacity;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNode, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(OpacityModifierBNFNode2, ruleName, childNode, opacity, precedence);
          }
        }
      ]);
      return OpacityModifierBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/parseTree/noWhitespaceNode.js
  var require_noWhitespaceNode = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NoWhitespaceNodeParseTree;
      }
    });
    var _occamlexers = require_lib3();
    var _verticalBranch = /* @__PURE__ */ _interop_require_default(require_verticalBranch());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var noWhitespace = _occamlexers.specialSymbols.noWhitespace;
    var NoWhitespaceNodeParseTree = /* @__PURE__ */ function(VerticalBranchParseTree) {
      _inherits(NoWhitespaceNodeParseTree2, VerticalBranchParseTree);
      function NoWhitespaceNodeParseTree2() {
        _class_call_check(this, NoWhitespaceNodeParseTree2);
        return _call_super(this, NoWhitespaceNodeParseTree2, arguments);
      }
      _create_class(NoWhitespaceNodeParseTree2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var string = noWhitespace, stringLength = string.length, verticalBranchParseTreeWidth = stringLength, verticalBranchParseTree = _verticalBranch.default.fromWidth(verticalBranchParseTreeWidth), verticalBranchPosition = verticalBranchParseTree.getVerticalBranchPosition(), terminalNodeParseTree = _verticalBranch.default.fromStringAndVerticalBranchPosition(NoWhitespaceNodeParseTree2, string, verticalBranchPosition);
            terminalNodeParseTree.appendToTop(verticalBranchParseTree);
            var noWhitespaceNodeParseTree = terminalNodeParseTree;
            return noWhitespaceNodeParseTree;
          }
        }
      ]);
      return NoWhitespaceNodeParseTree2;
    }(_verticalBranch.default);
  });

  // node_modules/occam-parsers/lib/node/terminal/noWhitespace.js
  var require_noWhitespace = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NoWhitespaceNode;
      }
    });
    var _terminal = /* @__PURE__ */ _interop_require_default(require_terminal2());
    var _noWhitespaceNode = /* @__PURE__ */ _interop_require_default(require_noWhitespaceNode());
    var _constants = require_constants4();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var NoWhitespaceNode = /* @__PURE__ */ function(TerminalNode) {
      _inherits(NoWhitespaceNode2, TerminalNode);
      function NoWhitespaceNode2() {
        _class_call_check(this, NoWhitespaceNode2);
        return _call_super(this, NoWhitespaceNode2, arguments);
      }
      _create_class(NoWhitespaceNode2, [
        {
          key: "getType",
          value: function getType() {
            var type = null;
            return type;
          }
        },
        {
          key: "getContent",
          value: function getContent() {
            var content = _constants.EMPTY_STRING;
            return content;
          }
        },
        {
          key: "isNoWhitespaceNode",
          value: function isNoWhitespaceNode() {
            var noWhitespaceNode = true;
            return noWhitespaceNode;
          }
        },
        {
          key: "asParseTree",
          value: function asParseTree(tokens) {
            var noWhitespaceNodeParseTree = _noWhitespaceNode.default.fromNothing(), parseTree = noWhitespaceNodeParseTree;
            return parseTree;
          }
        },
        {
          key: "match",
          value: function match(node, depth) {
            var matches = false;
            var nodeTerminalNode = node.isTerminalNode();
            if (nodeTerminalNode) {
              var terminalNode = node, terminalNodeNoWhitespaceNode = terminalNode.isNoWhitespaceNode();
              if (terminalNodeNoWhitespaceNode) {
                matches = true;
              }
            }
            return matches;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _terminal.default.fromNothing(NoWhitespaceNode2);
          }
        }
      ]);
      return NoWhitespaceNode2;
    }(_terminal.default);
  });

  // node_modules/occam-parsers/lib/part/terminal/noWhitespace.js
  var require_noWhitespace2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NoWhitespacePart;
      }
    });
    var _occamlexers = require_lib3();
    var _terminal = /* @__PURE__ */ _interop_require_default(require_terminal());
    var _noWhitespace = /* @__PURE__ */ _interop_require_default(require_noWhitespace());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var noWhitespace = _occamlexers.specialSymbols.noWhitespace;
    var NoWhitespacePart = /* @__PURE__ */ function(TerminalPart) {
      _inherits(NoWhitespacePart2, TerminalPart);
      function NoWhitespacePart2() {
        _class_call_check(this, NoWhitespacePart2);
        return _call_super(this, NoWhitespacePart2, arguments);
      }
      _create_class(NoWhitespacePart2, [
        {
          key: "isNoWhitespacePart",
          value: function isNoWhitespacePart() {
            var noWhitespacePart = true;
            return noWhitespacePart;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var noWhitespaceNode = null;
            var savedIndex = state.getSavedIndex(), nextTokenWhitespaceToken = state.isNextTokenWhitespaceToken();
            if (!nextTokenWhitespaceToken) {
              noWhitespaceNode = _noWhitespace.default.fromNothing();
            }
            parsed = noWhitespaceNode !== null;
            if (parsed) {
              nodes.push(noWhitespaceNode);
              if (parsed) {
                if (callAhead !== null) {
                  parsed = callAhead();
                }
              }
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var string = noWhitespace;
            return string;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var noWhitespacePart = new NoWhitespacePart2();
            return noWhitespacePart;
          }
        }
      ]);
      return NoWhitespacePart2;
    }(_terminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/noWhitespacePart.js
  var require_noWhitespacePart = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NoWhitespacePartBNFNode;
      }
    });
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _noWhitespace = /* @__PURE__ */ _interop_require_default(require_noWhitespace2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var NoWhitespacePartBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(NoWhitespacePartBNFNode2, NonTerminalNode);
      function NoWhitespacePartBNFNode2() {
        _class_call_check(this, NoWhitespacePartBNFNode2);
        return _call_super(this, NoWhitespacePartBNFNode2, arguments);
      }
      _create_class(NoWhitespacePartBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(callAhead) {
            var noWhitespacePart = _noWhitespace.default.fromNothing();
            return noWhitespacePart;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(NoWhitespacePartBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return NoWhitespacePartBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/callAheadModifier.js
  var require_callAheadModifier = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CallAheadModifierBNFNode;
      }
    });
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var CallAheadModifierBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(CallAheadModifierBNFNode2, NonTerminalNode);
      function CallAheadModifierBNFNode2() {
        _class_call_check(this, CallAheadModifierBNFNode2);
        return _call_super(this, CallAheadModifierBNFNode2, arguments);
      }
      _create_class(CallAheadModifierBNFNode2, null, [
        {
          key: "fromRuleNameChildNodesAndCallAhead",
          value: function fromRuleNameChildNodesAndCallAhead(ruleName, childNode, opacity) {
            return _nonTerminal.default.fromRuleNameChildNodesAndCallAhead(CallAheadModifierBNFNode2, ruleName, childNode, opacity);
          }
        }
      ]);
      return CallAheadModifierBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/part/terminal/regularExpression.js
  var require_regularExpression2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RegularExpressionPart;
      }
    });
    var _necessary = require_browser();
    var _terminal = /* @__PURE__ */ _interop_require_default(require_terminal());
    var _terminal1 = /* @__PURE__ */ _interop_require_default(require_terminal2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var first = _necessary.arrayUtilities.first;
    var RegularExpressionPart = /* @__PURE__ */ function(TerminalPart) {
      _inherits(RegularExpressionPart2, TerminalPart);
      function RegularExpressionPart2(regularExpression) {
        _class_call_check(this, RegularExpressionPart2);
        var _this;
        _this = _call_super(this, RegularExpressionPart2);
        _this.regularExpression = regularExpression;
        return _this;
      }
      _create_class(RegularExpressionPart2, [
        {
          key: "getRegularExpression",
          value: function getRegularExpression() {
            return this.regularExpression;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var terminalNode = null;
            var savedIndex = state.getSavedIndex(), nextSignificantToken = state.getNextSignificantToken(), significantToken = nextSignificantToken;
            if (significantToken !== null) {
              var content = significantToken.getContent(), matches = content.match(this.regularExpression);
              if (matches !== null) {
                var firstMatch = first(matches);
                if (firstMatch === content) {
                  terminalNode = _terminal1.default.fromSignificantToken(significantToken);
                }
              }
            }
            parsed = terminalNode !== null;
            if (parsed) {
              nodes.push(terminalNode);
              if (parsed) {
                if (callAhead !== null) {
                  parsed = callAhead();
                }
              }
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var regularExpressionString = this.regularExpression.toString(), string = regularExpressionString;
            return string;
          }
        }
      ], [
        {
          key: "fromRegularExpression",
          value: function fromRegularExpression(regularExpression) {
            var regularExpressionPart = new RegularExpressionPart2(regularExpression);
            return regularExpressionPart;
          }
        }
      ]);
      return RegularExpressionPart2;
    }(_terminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/regularExpression.js
  var require_regularExpression3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RegularExpressionBNFNode;
      }
    });
    var _necessary = require_browser();
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _regularExpression = /* @__PURE__ */ _interop_require_default(require_regularExpression2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var first = _necessary.arrayUtilities.first;
    var second = _necessary.arrayUtilities.second;
    var RegularExpressionBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(RegularExpressionBNFNode2, NonTerminalNode);
      function RegularExpressionBNFNode2() {
        _class_call_check(this, RegularExpressionBNFNode2);
        var _this;
        _this = _call_super(this, RegularExpressionBNFNode2, arguments), _define_property(_this, "regularExpression", /^\/((?:\\.|[^\/])*)\/$/);
        return _this;
      }
      _create_class(RegularExpressionBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(callAhead) {
            var regularExpression = this.getRegularExpression(), regularExpressionPart = _regularExpression.default.fromRegularExpression(regularExpression);
            return regularExpressionPart;
          }
        },
        {
          key: "getRegularExpression",
          value: function getRegularExpression() {
            var childNodes = this.getChildNodes(), firstChildNode = first(childNodes), terminalNode = firstChildNode, terminalNodeContent = terminalNode.getContent(), matches = terminalNodeContent.match(this.regularExpression), secondMatch = second(matches), pattern = secondMatch, regularExpression = new RegExp(pattern);
            return regularExpression;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(RegularExpressionBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return RegularExpressionBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/parseTree/startOfContentNode.js
  var require_startOfContentNode = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return StartOfContentNodeParseTree;
      }
    });
    var _occamlexers = require_lib3();
    var _verticalBranch = /* @__PURE__ */ _interop_require_default(require_verticalBranch());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var startOfContent = _occamlexers.specialSymbols.startOfContent;
    var StartOfContentNodeParseTree = /* @__PURE__ */ function(VerticalBranchParseTree) {
      _inherits(StartOfContentNodeParseTree2, VerticalBranchParseTree);
      function StartOfContentNodeParseTree2() {
        _class_call_check(this, StartOfContentNodeParseTree2);
        return _call_super(this, StartOfContentNodeParseTree2, arguments);
      }
      _create_class(StartOfContentNodeParseTree2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var string = startOfContent, stringLength = string.length, verticalBranchParseTreeWidth = stringLength, verticalBranchParseTree = _verticalBranch.default.fromWidth(verticalBranchParseTreeWidth), verticalBranchPosition = verticalBranchParseTree.getVerticalBranchPosition(), terminalNodeParseTree = _verticalBranch.default.fromStringAndVerticalBranchPosition(StartOfContentNodeParseTree2, string, verticalBranchPosition);
            terminalNodeParseTree.appendToTop(verticalBranchParseTree);
            var startOfContentNodeParseTree = terminalNodeParseTree;
            return startOfContentNodeParseTree;
          }
        }
      ]);
      return StartOfContentNodeParseTree2;
    }(_verticalBranch.default);
  });

  // node_modules/occam-parsers/lib/node/terminal/startOfContent.js
  var require_startOfContent = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return StartOfContentNode;
      }
    });
    var _terminal = /* @__PURE__ */ _interop_require_default(require_terminal2());
    var _startOfContentNode = /* @__PURE__ */ _interop_require_default(require_startOfContentNode());
    var _constants = require_constants4();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var StartOfContentNode = /* @__PURE__ */ function(TerminalNode) {
      _inherits(StartOfContentNode2, TerminalNode);
      function StartOfContentNode2() {
        _class_call_check(this, StartOfContentNode2);
        return _call_super(this, StartOfContentNode2, arguments);
      }
      _create_class(StartOfContentNode2, [
        {
          key: "getType",
          value: function getType() {
            var type = null;
            return type;
          }
        },
        {
          key: "getContent",
          value: function getContent() {
            var content = _constants.EMPTY_STRING;
            return content;
          }
        },
        {
          key: "isStartOfContentNode",
          value: function isStartOfContentNode() {
            var startOfContentNode = true;
            return startOfContentNode;
          }
        },
        {
          key: "asParseTree",
          value: function asParseTree(tokens) {
            var startOfContentNodeParseTree = _startOfContentNode.default.fromNothing(), parseTree = startOfContentNodeParseTree;
            return parseTree;
          }
        },
        {
          key: "match",
          value: function match(node, depth) {
            var matches = false;
            var nodeTerminalNode = node.isTerminalNode();
            if (nodeTerminalNode) {
              var terminalNode = node, terminalNodeStartOfContentNode = terminalNode.isStartOfContentNode();
              if (terminalNodeStartOfContentNode) {
                matches = true;
              }
            }
            return matches;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _terminal.default.fromNothing(StartOfContentNode2);
          }
        }
      ]);
      return StartOfContentNode2;
    }(_terminal.default);
  });

  // node_modules/occam-parsers/lib/part/terminal/startOfContent.js
  var require_startOfContent2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return StartOfContentPart;
      }
    });
    var _occamlexers = require_lib3();
    var _terminal = /* @__PURE__ */ _interop_require_default(require_terminal());
    var _startOfContent = /* @__PURE__ */ _interop_require_default(require_startOfContent());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var startOfContent = _occamlexers.specialSymbols.startOfContent;
    var StartOfContentPart = /* @__PURE__ */ function(TerminalPart) {
      _inherits(StartOfContentPart2, TerminalPart);
      function StartOfContentPart2() {
        _class_call_check(this, StartOfContentPart2);
        return _call_super(this, StartOfContentPart2, arguments);
      }
      _create_class(StartOfContentPart2, [
        {
          key: "isStartOfContentPart",
          value: function isStartOfContentPart() {
            var startOfContentPart = true;
            return startOfContentPart;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var startOfContentNode = null;
            var savedIndex = state.getSavedIndex(), atStartOfContent = state.isAtStartOfContent();
            if (atStartOfContent) {
              startOfContentNode = _startOfContent.default.fromNothing();
            }
            parsed = startOfContentNode !== null;
            if (parsed) {
              nodes.push(startOfContentNode);
              if (parsed) {
                if (callAhead !== null) {
                  parsed = callAhead();
                }
              }
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var string = startOfContent;
            return string;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var startOfContentPart = new StartOfContentPart2();
            return startOfContentPart;
          }
        }
      ]);
      return StartOfContentPart2;
    }(_terminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/startOfContentPart.js
  var require_startOfContentPart = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return StartOfContentPartBNFNode;
      }
    });
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _startOfContent = /* @__PURE__ */ _interop_require_default(require_startOfContent2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var StartOfContentPartBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(StartOfContentPartBNFNode2, NonTerminalNode);
      function StartOfContentPartBNFNode2() {
        _class_call_check(this, StartOfContentPartBNFNode2);
        return _call_super(this, StartOfContentPartBNFNode2, arguments);
      }
      _create_class(StartOfContentPartBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(callAhead) {
            var startOfContentPart = _startOfContent.default.fromNothing();
            return startOfContentPart;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(StartOfContentPartBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return StartOfContentPartBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/optionalQuantifier.js
  var require_optionalQuantifier = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return OptionalQuantifierBNFNode;
      }
    });
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var OptionalQuantifierBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(OptionalQuantifierBNFNode2, NonTerminalNode);
      function OptionalQuantifierBNFNode2() {
        _class_call_check(this, OptionalQuantifierBNFNode2);
        return _call_super(this, OptionalQuantifierBNFNode2, arguments);
      }
      _create_class(OptionalQuantifierBNFNode2, null, [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(OptionalQuantifierBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return OptionalQuantifierBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/oneOneOrMoreQuantifier.js
  var require_oneOneOrMoreQuantifier = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return OneOrMoreQuantifierBNFNode;
      }
    });
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var OneOrMoreQuantifierBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(OneOrMoreQuantifierBNFNode2, NonTerminalNode);
      function OneOrMoreQuantifierBNFNode2() {
        _class_call_check(this, OneOrMoreQuantifierBNFNode2);
        return _call_super(this, OneOrMoreQuantifierBNFNode2, arguments);
      }
      _create_class(OneOrMoreQuantifierBNFNode2, null, [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(OneOrMoreQuantifierBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return OneOrMoreQuantifierBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/part/terminal/significantTokenType.js
  var require_significantTokenType = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return SignificantTokenTypePart;
      }
    });
    var _terminal = /* @__PURE__ */ _interop_require_default(require_terminal());
    var _terminal1 = /* @__PURE__ */ _interop_require_default(require_terminal2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var SignificantTokenTypePart = /* @__PURE__ */ function(TerminalPart) {
      _inherits(SignificantTokenTypePart2, TerminalPart);
      function SignificantTokenTypePart2(significantTokenType) {
        _class_call_check(this, SignificantTokenTypePart2);
        var _this;
        _this = _call_super(this, SignificantTokenTypePart2);
        _this.significantTokenType = significantTokenType;
        return _this;
      }
      _create_class(SignificantTokenTypePart2, [
        {
          key: "getSignificantTokenType",
          value: function getSignificantTokenType() {
            return this.significantTokenType;
          }
        },
        {
          key: "parse",
          value: function parse(nodes, state, callback, callAhead) {
            var parsed;
            var terminalNode = null;
            var savedIndex = state.getSavedIndex(), nextSignificantToken = state.getNextSignificantToken(), significantToken = nextSignificantToken;
            if (significantToken !== null) {
              var significantTokenType = significantToken.getType();
              if (significantTokenType === this.significantTokenType) {
                terminalNode = _terminal1.default.fromSignificantToken(significantToken);
              }
            }
            parsed = terminalNode !== null;
            if (parsed) {
              nodes.push(terminalNode);
              if (parsed) {
                if (callAhead !== null) {
                  parsed = callAhead();
                }
              }
            }
            if (!parsed) {
              state.backtrack(savedIndex);
            }
            return parsed;
          }
        },
        {
          key: "asString",
          value: function asString() {
            var string = "[".concat(this.significantTokenType, "]");
            return string;
          }
        }
      ], [
        {
          key: "fromSignificantTokenType",
          value: function fromSignificantTokenType(significantTokenType) {
            var significantTokenTypePart = new SignificantTokenTypePart2(significantTokenType);
            return significantTokenTypePart;
          }
        }
      ]);
      return SignificantTokenTypePart2;
    }(_terminal.default);
  });

  // node_modules/occam-parsers/lib/node/bnf/significantTokenType.js
  var require_significantTokenType2 = __commonJS((exports, module) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return SignificantTokenTypeBNFNode;
      }
    });
    var _necessary = require_browser();
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _significantTokenType = /* @__PURE__ */ _interop_require_default(require_significantTokenType());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var first = _necessary.arrayUtilities.first;
    var second = _necessary.arrayUtilities.second;
    var SignificantTokenTypeBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(SignificantTokenTypeBNFNode2, NonTerminalNode);
      function SignificantTokenTypeBNFNode2() {
        _class_call_check(this, SignificantTokenTypeBNFNode2);
        var _this;
        _this = _call_super(this, SignificantTokenTypeBNFNode2, arguments), _define_property(_this, "regularExpression", /^\[([^\]]+)]$/);
        return _this;
      }
      _create_class(SignificantTokenTypeBNFNode2, [
        {
          key: "generatePart",
          value: function generatePart(callAhead) {
            var significantTokenType = this.getSignificantTokenType(), significantTokenTypePart = _significantTokenType.default.fromSignificantTokenType(significantTokenType);
            return significantTokenTypePart;
          }
        },
        {
          key: "getSignificantTokenType",
          value: function getSignificantTokenType() {
            var childNodes = this.getChildNodes(), firstChildNode = first(childNodes), terminalNode = firstChildNode, terminalNodeContent = terminalNode.getContent(), matches = terminalNodeContent.match(this.regularExpression), secondMatch = second(matches), significantTokenType = secondMatch;
            return significantTokenType;
          }
        }
      ], [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(SignificantTokenTypeBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return SignificantTokenTypeBNFNode2;
    }(_nonTerminal.default);
    module.exports = SignificantTokenTypeBNFNode;
  });

  // node_modules/occam-parsers/lib/node/bnf/zeroOneOrMoreQuantifier.js
  var require_zeroOneOrMoreQuantifier = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return ZerorOrMoreQuantifierBNFNode;
      }
    });
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var ZerorOrMoreQuantifierBNFNode = /* @__PURE__ */ function(NonTerminalNode) {
      _inherits(ZerorOrMoreQuantifierBNFNode2, NonTerminalNode);
      function ZerorOrMoreQuantifierBNFNode2() {
        _class_call_check(this, ZerorOrMoreQuantifierBNFNode2);
        return _call_super(this, ZerorOrMoreQuantifierBNFNode2, arguments);
      }
      _create_class(ZerorOrMoreQuantifierBNFNode2, null, [
        {
          key: "fromRuleNameChildNodesOpacityAndPrecedence",
          value: function fromRuleNameChildNodesOpacityAndPrecedence(ruleName, childNodes, opacity, precedence) {
            return _nonTerminal.default.fromRuleNameChildNodesOpacityAndPrecedence(ZerorOrMoreQuantifierBNFNode2, ruleName, childNodes, opacity, precedence);
          }
        }
      ]);
      return ZerorOrMoreQuantifierBNFNode2;
    }(_nonTerminal.default);
  });

  // node_modules/occam-parsers/lib/nonTerminalNodeMap.js
  var require_nonTerminalNodeMap = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _part = /* @__PURE__ */ _interop_require_default(require_part());
    var _name = /* @__PURE__ */ _interop_require_default(require_name2());
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule3());
    var _error = /* @__PURE__ */ _interop_require_default(require_error());
    var _epsilon = /* @__PURE__ */ _interop_require_default(require_epsilon3());
    var _document = /* @__PURE__ */ _interop_require_default(require_document2());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName3());
    var _wildcard = /* @__PURE__ */ _interop_require_default(require_wildcard2());
    var _endOfLine = /* @__PURE__ */ _interop_require_default(require_endOfLine7());
    var _partChoice = /* @__PURE__ */ _interop_require_default(require_partChoice2());
    var _precedence = /* @__PURE__ */ _interop_require_default(require_precedence());
    var _quantifier = /* @__PURE__ */ _interop_require_default(require_quantifier());
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition2());
    var _definitions = /* @__PURE__ */ _interop_require_default(require_definitions());
    var _terminalPart = /* @__PURE__ */ _interop_require_default(require_terminalPart());
    var _choiceOfParts = /* @__PURE__ */ _interop_require_default(require_choiceOfParts2());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral3());
    var _nonTerminalPart = /* @__PURE__ */ _interop_require_default(require_nonTerminalPart());
    var _sequenceOfParts = /* @__PURE__ */ _interop_require_default(require_sequenceOfParts2());
    var _opacityModifier = /* @__PURE__ */ _interop_require_default(require_opacityModifier());
    var _noWhitespacePart = /* @__PURE__ */ _interop_require_default(require_noWhitespacePart());
    var _callAheadModifier = /* @__PURE__ */ _interop_require_default(require_callAheadModifier());
    var _regularExpression = /* @__PURE__ */ _interop_require_default(require_regularExpression3());
    var _startOfContentPart = /* @__PURE__ */ _interop_require_default(require_startOfContentPart());
    var _optionalQuantifier = /* @__PURE__ */ _interop_require_default(require_optionalQuantifier());
    var _oneOneOrMoreQuantifier = /* @__PURE__ */ _interop_require_default(require_oneOneOrMoreQuantifier());
    var _significantTokenType = /* @__PURE__ */ _interop_require_default(require_significantTokenType2());
    var _zeroOneOrMoreQuantifier = /* @__PURE__ */ _interop_require_default(require_zeroOneOrMoreQuantifier());
    var _ruleNames = require_ruleNames();
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var _obj;
    var NonTerminalNodeMap = (_obj = {}, _define_property(_obj, _ruleNames.NAME_RULE_NAME, _name.default), _define_property(_obj, _ruleNames.PART_RULE_NAME, _part.default), _define_property(_obj, _ruleNames.RULE_RULE_NAME, _rule.default), _define_property(_obj, _ruleNames.ERROR_RULE_NAME, _error.default), _define_property(_obj, _ruleNames.EPSILON_RULE_NAME, _epsilon.default), _define_property(_obj, _ruleNames.DOCUMENT_RULE_NAME, _document.default), _define_property(_obj, _ruleNames.WILDCARD_RULE_NAME, _wildcard.default), _define_property(_obj, _ruleNames.RULE_NAME_RULE_NAME, _ruleName.default), _define_property(_obj, _ruleNames.DEFINITION_RULE_NAME, _definition.default), _define_property(_obj, _ruleNames.PRECEDENCE_RULE_NAME, _precedence.default), _define_property(_obj, _ruleNames.QUANTIFIER_RULE_NAME, _quantifier.default), _define_property(_obj, _ruleNames.END_OF_LINE_RULE_NAME, _endOfLine.default), _define_property(_obj, _ruleNames.PART_CHOICE_RULE_NAME, _partChoice.default), _define_property(_obj, _ruleNames.DEFINITIONS_RULE_NAME, _definitions.default), _define_property(_obj, _ruleNames.TERMINAL_PART_RULE_NAME, _terminalPart.default), _define_property(_obj, _ruleNames.STRING_LITERAL_RULE_NAME, _stringLiteral.default), _define_property(_obj, _ruleNames.CHOICE_OF_PARTS_RULE_NAME, _choiceOfParts.default), _define_property(_obj, _ruleNames.OPACITY_MODIFIER_RULE_NAME, _opacityModifier.default), _define_property(_obj, _ruleNames.NON_TERMINAL_PART_RULE_NAME, _nonTerminalPart.default), _define_property(_obj, _ruleNames.SEQUENCE_OF_PARTS_RULE_NAME, _sequenceOfParts.default), _define_property(_obj, _ruleNames.NO_WHITESPACE_PART_RULE_NAME, _noWhitespacePart.default), _define_property(_obj, _ruleNames.REGULAR_EXPRESSION_RULE_NAME, _regularExpression.default), _define_property(_obj, _ruleNames.CALL_AHEAD_MODIFIER_RULE_NAME, _callAheadModifier.default), _define_property(_obj, _ruleNames.OPTIONAL_QUANTIFIER_RULE_NAME, _optionalQuantifier.default), _define_property(_obj, _ruleNames.START_OF_CONTENT_PART_RULE_NAME, _startOfContentPart.default), _define_property(_obj, _ruleNames.SIGNIFICANT_TOKEN_TYPE_RULE_NAME, _significantTokenType.default), _define_property(_obj, _ruleNames.ONE_OR_MORE_QUANTIFIER_RULE_NAME, _oneOneOrMoreQuantifier.default), _define_property(_obj, _ruleNames.ZERO_OR_MORE_QUANTIFIER_RULE_NAME, _zeroOneOrMoreQuantifier.default), _obj);
    var _default = NonTerminalNodeMap;
  });

  // node_modules/occam-parsers/lib/state.js
  var require_state2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return State;
      }
    });
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var State = /* @__PURE__ */ function() {
      function State2(index, tokens, ruleMap, precedence, startOfContent, NonTerminalNodeMap, defaultNonTerminalNode) {
        _class_call_check(this, State2);
        this.index = index;
        this.tokens = tokens;
        this.ruleMap = ruleMap;
        this.precedence = precedence;
        this.startOfContent = startOfContent;
        this.NonTerminalNodeMap = NonTerminalNodeMap;
        this.defaultNonTerminalNode = defaultNonTerminalNode;
      }
      _create_class(State2, [
        {
          key: "getIndex",
          value: function getIndex() {
            return this.index;
          }
        },
        {
          key: "getTokens",
          value: function getTokens() {
            return this.tokens;
          }
        },
        {
          key: "getRuleMap",
          value: function getRuleMap() {
            return this.ruleMap;
          }
        },
        {
          key: "getPrecedence",
          value: function getPrecedence() {
            return this.precedence;
          }
        },
        {
          key: "getStartOfContent",
          value: function getStartOfContent() {
            return this.startOfContent;
          }
        },
        {
          key: "getNonTerminalNode",
          value: function getNonTerminalNode() {
            return this.NonTerminalNodeMap;
          }
        },
        {
          key: "getDefaultNonTerminalNode",
          value: function getDefaultNonTerminalNode() {
            return this.defaultNonTerminalNode;
          }
        },
        {
          key: "setIndex",
          value: function setIndex(index) {
            this.index = index;
          }
        },
        {
          key: "setTokens",
          value: function setTokens(tokens) {
            this.tokens = tokens;
          }
        },
        {
          key: "setRuleMap",
          value: function setRuleMap(ruleMap) {
            this.ruleMap = ruleMap;
          }
        },
        {
          key: "setPrecedence",
          value: function setPrecedence(precedence) {
            this.precedence = precedence;
          }
        },
        {
          key: "setStartOfContent",
          value: function setStartOfContent(startOfContent) {
            this.startOfContent = startOfContent;
          }
        },
        {
          key: "getSavedPrecedence",
          value: function getSavedPrecedence() {
            var savedPrecedence = this.precedence;
            return savedPrecedence;
          }
        },
        {
          key: "getSavedIndex",
          value: function getSavedIndex() {
            var savedIndex = this.index;
            return savedIndex;
          }
        },
        {
          key: "getNextToken",
          value: function getNextToken() {
            var nextToken = null;
            var tokensLength = this.tokens.length;
            if (this.index < tokensLength) {
              nextToken = this.tokens[this.index++];
            }
            return nextToken;
          }
        },
        {
          key: "isAtStartOfContent",
          value: function isAtStartOfContent() {
            var atStartOfContent = this.startOfContent ? this.index === 0 : false;
            return atStartOfContent;
          }
        },
        {
          key: "getNextSignificantToken",
          value: function getNextSignificantToken() {
            var nextSignificantToken = null;
            var tokensLength = this.tokens.length;
            while (this.index < tokensLength) {
              var token = this.tokens[this.index++], tokenSignificant = token.isSignificant();
              if (tokenSignificant) {
                var significantToken = token;
                nextSignificantToken = significantToken;
                break;
              }
            }
            return nextSignificantToken;
          }
        },
        {
          key: "isNextTokenWhitespaceToken",
          value: function isNextTokenWhitespaceToken() {
            var nextTokenWhitespaceToken = false;
            var tokensLength = this.tokens.length;
            if (this.index < tokensLength) {
              var nextToken = this.tokens[this.index];
              nextTokenWhitespaceToken = nextToken.isWhitespaceToken();
            }
            return nextTokenWhitespaceToken;
          }
        },
        {
          key: "backtrack",
          value: function backtrack(savedIndex) {
            this.index = savedIndex;
          }
        },
        {
          key: "resetPrecedence",
          value: function resetPrecedence(savedPrecedence) {
            this.precedence = savedPrecedence;
          }
        },
        {
          key: "NonTerminalNodeFromRuleName",
          value: function NonTerminalNodeFromRuleName(ruleName) {
            var NonTerminalNode = this.NonTerminalNodeMap[ruleName] || this.defaultNonTerminalNode;
            return NonTerminalNode;
          }
        }
      ], [
        {
          key: "fromTokensRuleMapStartOfContentNonTerminalNodeMapAndDefaultNonTerminalNode",
          value: function fromTokensRuleMapStartOfContentNonTerminalNodeMapAndDefaultNonTerminalNode(tokens, ruleMap, startOfContent, NonTerminalNodeMap, defaultNonTerminalNode) {
            var index = 0, precedence = null, state = new State2(index, tokens, ruleMap, precedence, startOfContent, NonTerminalNodeMap, defaultNonTerminalNode);
            return state;
          }
        }
      ]);
      return State2;
    }();
  });

  // node_modules/occam-parsers/lib/mixins/parser.js
  var require_parser = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _necessary = require_browser();
    var _state = /* @__PURE__ */ _interop_require_default(require_state2());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var first = _necessary.arrayUtilities.first;
    function parse(tokens) {
      var rule = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.startRule, startOfContent = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
      var node = null;
      var nodes = [], _this_constructor = this.constructor, NonTerminalNodeMap = _this_constructor.NonTerminalNodeMap, defaultNonTerminalNode = _this_constructor.defaultNonTerminalNode, state = _state.default.fromTokensRuleMapStartOfContentNonTerminalNodeMapAndDefaultNonTerminalNode(tokens, this.ruleMap, startOfContent, NonTerminalNodeMap, defaultNonTerminalNode), callback = null, callAhead = null, parsed = rule.parse(nodes, state, callback, callAhead);
      if (parsed) {
        var firstNode = first(nodes);
        node = firstNode;
      }
      return node;
    }
    var parserMixins = {
      parse
    };
    var _default = parserMixins;
  });

  // node_modules/occam-parsers/lib/definition/name.js
  var require_name3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NameDefinition;
      }
    });
    var _occamlexers = require_lib3();
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _significantTokenType = /* @__PURE__ */ _interop_require_default(require_significantTokenType());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var nameType = _occamlexers.types.nameType;
    var NameDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(NameDefinition2, Definition);
      function NameDefinition2() {
        _class_call_check(this, NameDefinition2);
        return _call_super(this, NameDefinition2, arguments);
      }
      _create_class(NameDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var significantTokenType = nameType, nameSignificantTokenTypePart = _significantTokenType.default.fromSignificantTokenType(significantTokenType), parts = [
              nameSignificantTokenTypePart
            ], precedence = null, nameDefinition = new NameDefinition2(parts, precedence);
            return nameDefinition;
          }
        }
      ]);
      return NameDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/name.js
  var require_name4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NameBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _name = /* @__PURE__ */ _interop_require_default(require_name3());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var NameBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(NameBNFRule2, Rule);
      function NameBNFRule2() {
        _class_call_check(this, NameBNFRule2);
        return _call_super(this, NameBNFRule2, arguments);
      }
      _create_class(NameBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var nameDefinition = _name.default.fromNothing(), name = _ruleNames.NAME_RULE_NAME, opacity = null, definitions = [
              nameDefinition
            ], nameRule = new NameBNFRule2(name, opacity, definitions);
            return nameRule;
          }
        }
      ]);
      return NameBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/partRule/terminal.js
  var require_terminal3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return TerminalPartRuleDefinition;
      }
    });
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName2());
    var _zeroOrMoreParts = /* @__PURE__ */ _interop_require_default(require_zeroOrMoreParts());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var TerminalPartRuleDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(TerminalPartRuleDefinition2, Definition);
      function TerminalPartRuleDefinition2() {
        _class_call_check(this, TerminalPartRuleDefinition2);
        return _call_super(this, TerminalPartRuleDefinition2, arguments);
      }
      _create_class(TerminalPartRuleDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var ruleName;
            ruleName = _ruleNames.QUANTIFIER_RULE_NAME;
            var quantifierRuleNamePart = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.TERMINAL_PART_RULE_NAME;
            var terminalPartRuleNamePart = _ruleName.default.fromRuleName(ruleName), zeroOrMoreQuantifierRuleNamePartsPart = _zeroOrMoreParts.default.fromPart(quantifierRuleNamePart), parts = [
              terminalPartRuleNamePart,
              zeroOrMoreQuantifierRuleNamePartsPart
            ], precedence = null, terminalPartRuleDefinition = new TerminalPartRuleDefinition2(parts, precedence);
            return terminalPartRuleDefinition;
          }
        }
      ]);
      return TerminalPartRuleDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/definition/partRule/nonTerminal.js
  var require_nonTerminal3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NonTerminalPartRuleDefinition;
      }
    });
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName2());
    var _zeroOrMoreParts = /* @__PURE__ */ _interop_require_default(require_zeroOrMoreParts());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var NonTerminalPartRuleDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(NonTerminalPartRuleDefinition2, Definition);
      function NonTerminalPartRuleDefinition2() {
        _class_call_check(this, NonTerminalPartRuleDefinition2);
        return _call_super(this, NonTerminalPartRuleDefinition2, arguments);
      }
      _create_class(NonTerminalPartRuleDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var ruleName;
            ruleName = _ruleNames.QUANTIFIER_RULE_NAME;
            var quantifierRuleNamePart = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.NON_TERMINAL_PART_RULE_NAME;
            var nonTerminalPartRuleNamePart = _ruleName.default.fromRuleName(ruleName), zeroOrMoreQuantifierRuleNamePartsPart = _zeroOrMoreParts.default.fromPart(quantifierRuleNamePart), parts = [
              nonTerminalPartRuleNamePart,
              zeroOrMoreQuantifierRuleNamePartsPart
            ], precedence = null, nonTerminalPartRuleDefinition = new NonTerminalPartRuleDefinition2(parts, precedence);
            return nonTerminalPartRuleDefinition;
          }
        }
      ]);
      return NonTerminalPartRuleDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/part.js
  var require_part2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return PartBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _terminal = /* @__PURE__ */ _interop_require_default(require_terminal3());
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal3());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var PartBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(PartBNFRule2, Rule);
      function PartBNFRule2() {
        _class_call_check(this, PartBNFRule2);
        return _call_super(this, PartBNFRule2, arguments);
      }
      _create_class(PartBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var name = _ruleNames.PART_RULE_NAME, terminalPartRuleDefinition = _terminal.default.fromNothing(), nonTerminalPartRuleDefinition = _nonTerminal.default.fromNothing(), opacity = null, definitions = [
              nonTerminalPartRuleDefinition,
              terminalPartRuleDefinition
            ], partRule = new PartBNFRule2(name, opacity, definitions);
            return partRule;
          }
        }
      ]);
      return PartBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/rule.js
  var require_rule4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RuleDefinition;
      }
    });
    var _occamlexers = require_lib3();
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName2());
    var _optionalPart = /* @__PURE__ */ _interop_require_default(require_optionalPart());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral2());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var separator = _occamlexers.specialSymbols.separator;
    var terminator = _occamlexers.specialSymbols.terminator;
    var RuleDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(RuleDefinition2, Definition);
      function RuleDefinition2() {
        _class_call_check(this, RuleDefinition2);
        return _call_super(this, RuleDefinition2, arguments);
      }
      _create_class(RuleDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var ruleName;
            var separatorStringLiteralContent = separator, terminatorStringLiteralContent = terminator;
            ruleName = _ruleNames.OPACITY_MODIFIER_RULE_NAME;
            var opacityModifierRuleNamePart = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.NAME_RULE_NAME;
            var nameRuleNamePart = _ruleName.default.fromRuleName(ruleName), optionalOpacityRuleNamePartPart = _optionalPart.default.fromPart(opacityModifierRuleNamePart), separatorStringLiteralPart = _stringLiteral.default.fromContent(separatorStringLiteralContent);
            ruleName = _ruleNames.DEFINITIONS_RULE_NAME;
            var definitionsRuleNamePart = _ruleName.default.fromRuleName(ruleName), terminatorStringLiteralPart = _stringLiteral.default.fromContent(terminatorStringLiteralContent), parts = [
              nameRuleNamePart,
              optionalOpacityRuleNamePartPart,
              separatorStringLiteralPart,
              definitionsRuleNamePart,
              terminatorStringLiteralPart
            ], precedence = null, ruleDefinition = new RuleDefinition2(parts, precedence);
            return ruleDefinition;
          }
        }
      ]);
      return RuleDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/rule.js
  var require_rule5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RuleBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _rule1 = /* @__PURE__ */ _interop_require_default(require_rule4());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var RuleBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(RuleBNFRule2, Rule);
      function RuleBNFRule2() {
        _class_call_check(this, RuleBNFRule2);
        return _call_super(this, RuleBNFRule2, arguments);
      }
      _create_class(RuleBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var ruleDefinition = _rule1.default.fromNothing(), name = _ruleNames.RULE_RULE_NAME, opacity = null, definitions = [
              ruleDefinition
            ], ruleRule = new RuleBNFRule2(name, opacity, definitions);
            return ruleRule;
          }
        }
      ]);
      return RuleBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/error.js
  var require_error2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return ErrorDefinition;
      }
    });
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _wildcard = /* @__PURE__ */ _interop_require_default(require_wildcard());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var ErrorDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(ErrorDefinition2, Definition);
      function ErrorDefinition2() {
        _class_call_check(this, ErrorDefinition2);
        return _call_super(this, ErrorDefinition2, arguments);
      }
      _create_class(ErrorDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var wildcardPart = _wildcard.default.fromNothing(), parts = [
              wildcardPart
            ], precedence = null, errorDefinition = new ErrorDefinition2(parts, precedence);
            return errorDefinition;
          }
        }
      ]);
      return ErrorDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/error.js
  var require_error3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return ErrorBNFRule;
      }
    });
    var _occamlexers = require_lib3();
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _error = /* @__PURE__ */ _interop_require_default(require_error2());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var opaque = _occamlexers.specialSymbols.opaque;
    var ErrorBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(ErrorBNFRule2, Rule);
      function ErrorBNFRule2() {
        _class_call_check(this, ErrorBNFRule2);
        return _call_super(this, ErrorBNFRule2, arguments);
      }
      _create_class(ErrorBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var errorDefinition = _error.default.fromNothing(), name = _ruleNames.ERROR_RULE_NAME, opacity = opaque, definitions = [
              errorDefinition
            ], errorRule = new ErrorBNFRule2(name, opacity, definitions);
            return errorRule;
          }
        }
      ]);
      return ErrorBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/stringLiteral.js
  var require_stringLiteral4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return StringLiteralDefinition;
      }
    });
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var StringLiteralDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(StringLiteralDefinition2, Definition);
      function StringLiteralDefinition2() {
        _class_call_check(this, StringLiteralDefinition2);
        return _call_super(this, StringLiteralDefinition2, arguments);
      }
      _create_class(StringLiteralDefinition2, null, [
        {
          key: "fromContent",
          value: function fromContent(content) {
            var stringLiteralPart = _stringLiteral.default.fromContent(content), parts = [
              stringLiteralPart
            ], precedence = null, stringLiteralDefinition = new StringLiteralDefinition2(parts, precedence);
            return stringLiteralDefinition;
          }
        }
      ]);
      return StringLiteralDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/epsilon.js
  var require_epsilon4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return EpsilonBNFRule;
      }
    });
    var _occamlexers = require_lib3();
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral4());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var epsilon = _occamlexers.specialSymbols.epsilon;
    var EpsilonBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(EpsilonBNFRule2, Rule);
      function EpsilonBNFRule2() {
        _class_call_check(this, EpsilonBNFRule2);
        return _call_super(this, EpsilonBNFRule2, arguments);
      }
      _create_class(EpsilonBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var content = epsilon, epsilonStringLiteralDefinition = _stringLiteral.default.fromContent(content), name = _ruleNames.EPSILON_RULE_NAME, opacity = null, definitions = [
              epsilonStringLiteralDefinition
            ], epsilonRule = new EpsilonBNFRule2(name, opacity, definitions);
            return epsilonRule;
          }
        }
      ]);
      return EpsilonBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/document.js
  var require_document3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return DocumentDefinition;
      }
    });
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _partChoice = /* @__PURE__ */ _interop_require_default(require_partChoice());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName2());
    var _choiceOfParts = /* @__PURE__ */ _interop_require_default(require_choiceOfParts());
    var _oneOrMoreParts = /* @__PURE__ */ _interop_require_default(require_oneOrMoreParts());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var DocumentDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(DocumentDefinition2, Definition);
      function DocumentDefinition2() {
        _class_call_check(this, DocumentDefinition2);
        return _call_super(this, DocumentDefinition2, arguments);
      }
      _create_class(DocumentDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var ruleName;
            ruleName = _ruleNames.RULE_RULE_NAME;
            var ruleRuleNamePart = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.ERROR_RULE_NAME;
            var errorRuleNamePart = _ruleName.default.fromRuleName(ruleName), ruleRuleNamePartChoice = _partChoice.default.fromPart(ruleRuleNamePart), errorRuleNamePartChoice = _partChoice.default.fromPart(errorRuleNamePart), partChoices = [
              ruleRuleNamePartChoice,
              errorRuleNamePartChoice
            ], choiceOfRuleRuleNameAndErrorRuleNamePartsPart = _choiceOfParts.default.fromPartChoices(partChoices), oneOrMoreChoiceOfRuleRuleNameAndErrorRuleNamePartsPartsPart = _oneOrMoreParts.default.fromPart(choiceOfRuleRuleNameAndErrorRuleNamePartsPart), parts = [
              oneOrMoreChoiceOfRuleRuleNameAndErrorRuleNamePartsPartsPart
            ], precedence = null, documentDefinition = new DocumentDefinition2(parts, precedence);
            return documentDefinition;
          }
        }
      ]);
      return DocumentDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/document.js
  var require_document4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return DocumentBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _document = /* @__PURE__ */ _interop_require_default(require_document3());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var DocumentBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(DocumentBNFRule2, Rule);
      function DocumentBNFRule2() {
        _class_call_check(this, DocumentBNFRule2);
        return _call_super(this, DocumentBNFRule2, arguments);
      }
      _create_class(DocumentBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var documentDefinition = _document.default.fromNothing(), name = _ruleNames.DOCUMENT_RULE_NAME, opacity = null, definitions = [
              documentDefinition
            ], documentRule = new DocumentBNFRule2(name, opacity, definitions);
            return documentRule;
          }
        }
      ]);
      return DocumentBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/ruleName.js
  var require_ruleName4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RuleNameBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _name = /* @__PURE__ */ _interop_require_default(require_name3());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var RuleNameBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(RuleNameBNFRule2, Rule);
      function RuleNameBNFRule2() {
        _class_call_check(this, RuleNameBNFRule2);
        return _call_super(this, RuleNameBNFRule2, arguments);
      }
      _create_class(RuleNameBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var nameDefinition = _name.default.fromNothing(), name = _ruleNames.RULE_NAME_RULE_NAME, opacity = null, definitions = [
              nameDefinition
            ], ruleNameRule = new RuleNameBNFRule2(name, opacity, definitions);
            return ruleNameRule;
          }
        }
      ]);
      return RuleNameBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/wildcard.js
  var require_wildcard3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return WildcardBNFRule;
      }
    });
    var _occamlexers = require_lib3();
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral4());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var wildcard = _occamlexers.specialSymbols.wildcard;
    var WildcardBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(WildcardBNFRule2, Rule);
      function WildcardBNFRule2() {
        _class_call_check(this, WildcardBNFRule2);
        return _call_super(this, WildcardBNFRule2, arguments);
      }
      _create_class(WildcardBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var content = wildcard, wildcardStringLiteralDefinition = _stringLiteral.default.fromContent(content), name = _ruleNames.WILDCARD_RULE_NAME, opacity = null, definitions = [
              wildcardStringLiteralDefinition
            ], wildcardRule = new WildcardBNFRule2(name, opacity, definitions);
            return wildcardRule;
          }
        }
      ]);
      return WildcardBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/endOfLine.js
  var require_endOfLine8 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return EndOfLineBNFRule;
      }
    });
    var _occamlexers = require_lib3();
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral4());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var endOfLine = _occamlexers.specialSymbols.endOfLine;
    var EndOfLineBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(EndOfLineBNFRule2, Rule);
      function EndOfLineBNFRule2() {
        _class_call_check(this, EndOfLineBNFRule2);
        return _call_super(this, EndOfLineBNFRule2, arguments);
      }
      _create_class(EndOfLineBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var content = endOfLine, endOfLineStringLiteralDefinition = _stringLiteral.default.fromContent(content), name = _ruleNames.END_OF_LINE_RULE_NAME, opacity = null, definitions = [
              endOfLineStringLiteralDefinition
            ], endOfLineRule = new EndOfLineBNFRule2(name, opacity, definitions);
            return endOfLineRule;
          }
        }
      ]);
      return EndOfLineBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/partChoice.js
  var require_partChoice3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return PartChoiceDefinition;
      }
    });
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName2());
    var _optionalPart = /* @__PURE__ */ _interop_require_default(require_optionalPart());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var PartChoiceDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(PartChoiceDefinition2, Definition);
      function PartChoiceDefinition2() {
        _class_call_check(this, PartChoiceDefinition2);
        return _call_super(this, PartChoiceDefinition2, arguments);
      }
      _create_class(PartChoiceDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var ruleName;
            ruleName = _ruleNames.PART_RULE_NAME;
            var partRuleNamePart = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.PRECEDENCE_RULE_NAME;
            var precedenceRuleNamePart = _ruleName.default.fromRuleName(ruleName), optionalPrecedenceRuleNamePartPart = _optionalPart.default.fromPart(precedenceRuleNamePart), parts = [
              partRuleNamePart,
              optionalPrecedenceRuleNamePartPart
            ], precedence = null, partChoiceDefinition = new PartChoiceDefinition2(parts, precedence);
            return partChoiceDefinition;
          }
        }
      ]);
      return PartChoiceDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/partChoice.js
  var require_partChoice4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return PartChoiceBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _partChoice = /* @__PURE__ */ _interop_require_default(require_partChoice3());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var PartChoiceBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(PartChoiceBNFRule2, Rule);
      function PartChoiceBNFRule2() {
        _class_call_check(this, PartChoiceBNFRule2);
        return _call_super(this, PartChoiceBNFRule2, arguments);
      }
      _create_class(PartChoiceBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var name = _ruleNames.PART_CHOICE_RULE_NAME, partChoiceDefinition = _partChoice.default.fromNothing(), opacity = null, definitions = [
              partChoiceDefinition
            ], definitionRule = new PartChoiceBNFRule2(name, opacity, definitions);
            return definitionRule;
          }
        }
      ]);
      return PartChoiceBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/ruleName.js
  var require_ruleName5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RuleNameDefinition;
      }
    });
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var RuleNameDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(RuleNameDefinition2, Definition);
      function RuleNameDefinition2() {
        _class_call_check(this, RuleNameDefinition2);
        return _call_super(this, RuleNameDefinition2, arguments);
      }
      _create_class(RuleNameDefinition2, null, [
        {
          key: "fromRuleName",
          value: function fromRuleName(ruleName) {
            var ruleNameRuleNamePart = _ruleName.default.fromRuleName(ruleName), parts = [
              ruleNameRuleNamePart
            ], precedence = null, ruleNameDefinition = new RuleNameDefinition2(parts, precedence);
            return ruleNameDefinition;
          }
        }
      ]);
      return RuleNameDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/quantifier.js
  var require_quantifier2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return QuantifierBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName5());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var QuantifierBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(QuantifierBNFRule2, Rule);
      function QuantifierBNFRule2() {
        _class_call_check(this, QuantifierBNFRule2);
        return _call_super(this, QuantifierBNFRule2, arguments);
      }
      _create_class(QuantifierBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var ruleName;
            var name = _ruleNames.QUANTIFIER_RULE_NAME;
            ruleName = _ruleNames.OPTIONAL_QUANTIFIER_RULE_NAME;
            var optionalQuantifierRuleNameDefinition = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.ONE_OR_MORE_QUANTIFIER_RULE_NAME;
            var oneOrMoreQuantifierRuleNameDefinition = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.ZERO_OR_MORE_QUANTIFIER_RULE_NAME;
            var zeroOrMoreQuantifierRuleNameDefinition = _ruleName.default.fromRuleName(ruleName), opacity = null, definitions = [
              optionalQuantifierRuleNameDefinition,
              oneOrMoreQuantifierRuleNameDefinition,
              zeroOrMoreQuantifierRuleNameDefinition
            ], quantifierRule = new QuantifierBNFRule2(name, opacity, definitions);
            return quantifierRule;
          }
        }
      ]);
      return QuantifierBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/definition.js
  var require_definition3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return DefinitionDefinition;
      }
    });
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName2());
    var _optionalPart = /* @__PURE__ */ _interop_require_default(require_optionalPart());
    var _oneOrMoreParts = /* @__PURE__ */ _interop_require_default(require_oneOrMoreParts());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var DefinitionDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(DefinitionDefinition2, Definition);
      function DefinitionDefinition2() {
        _class_call_check(this, DefinitionDefinition2);
        return _call_super(this, DefinitionDefinition2, arguments);
      }
      _create_class(DefinitionDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var ruleName;
            ruleName = _ruleNames.PART_RULE_NAME;
            var partRuleNamePart = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.PRECEDENCE_RULE_NAME;
            var precedenceRuleNamePart = _ruleName.default.fromRuleName(ruleName), oneOrMoreRuleNamePartsPart = _oneOrMoreParts.default.fromPart(partRuleNamePart), optionalPrecedenceRuleNamePartPart = _optionalPart.default.fromPart(precedenceRuleNamePart), parts = [
              oneOrMoreRuleNamePartsPart,
              optionalPrecedenceRuleNamePartPart
            ], precedence = null, definitionDefinition = new DefinitionDefinition2(parts, precedence);
            return definitionDefinition;
          }
        }
      ]);
      return DefinitionDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/definition.js
  var require_definition4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return DefinitionBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition3());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var DefinitionBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(DefinitionBNFRule2, Rule);
      function DefinitionBNFRule2() {
        _class_call_check(this, DefinitionBNFRule2);
        return _call_super(this, DefinitionBNFRule2, arguments);
      }
      _create_class(DefinitionBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var name = _ruleNames.DEFINITION_RULE_NAME, definitionDefinition = _definition.default.fromNothing(), opacity = null, definitions = [
              definitionDefinition
            ], definitionRule = new DefinitionBNFRule2(name, opacity, definitions);
            return definitionRule;
          }
        }
      ]);
      return DefinitionBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/precedence.js
  var require_precedence2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return PrecedenceDefinition;
      }
    });
    var _occamlexers = require_lib3();
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _optionalPart = /* @__PURE__ */ _interop_require_default(require_optionalPart());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral2());
    var _significantTokenType = /* @__PURE__ */ _interop_require_default(require_significantTokenType());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var numberType = _occamlexers.types.numberType;
    var openBracket = _occamlexers.specialSymbols.openBracket;
    var closeBracket = _occamlexers.specialSymbols.closeBracket;
    var PrecedenceDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(PrecedenceDefinition2, Definition);
      function PrecedenceDefinition2() {
        _class_call_check(this, PrecedenceDefinition2);
        return _call_super(this, PrecedenceDefinition2, arguments);
      }
      _create_class(PrecedenceDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var significantTokenType = numberType, openBracketStringLiteralContent = openBracket, closeBracketStringLiteralContent = closeBracket, openBracketStringLiteralPart = _stringLiteral.default.fromContent(openBracketStringLiteralContent), closeBracketStringLiteralPart = _stringLiteral.default.fromContent(closeBracketStringLiteralContent), numberSignificantTokenTypePart = _significantTokenType.default.fromSignificantTokenType(significantTokenType), optionalNumberSignificantTokenTypePartPart = _optionalPart.default.fromPart(numberSignificantTokenTypePart), parts = [
              openBracketStringLiteralPart,
              optionalNumberSignificantTokenTypePartPart,
              closeBracketStringLiteralPart
            ], precedence = null, precedenceDefinition = new PrecedenceDefinition2(parts, precedence);
            return precedenceDefinition;
          }
        }
      ]);
      return PrecedenceDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/precedence.js
  var require_precedence3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return PrecedenceBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _precedence = /* @__PURE__ */ _interop_require_default(require_precedence2());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var PrecedenceBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(PrecedenceBNFRule2, Rule);
      function PrecedenceBNFRule2() {
        _class_call_check(this, PrecedenceBNFRule2);
        return _call_super(this, PrecedenceBNFRule2, arguments);
      }
      _create_class(PrecedenceBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var name = _ruleNames.PRECEDENCE_RULE_NAME, precedenceDefinition = _precedence.default.fromNothing(), opacity = null, definitions = [
              precedenceDefinition
            ], precedenceRule = new PrecedenceBNFRule2(name, opacity, definitions);
            return precedenceRule;
          }
        }
      ]);
      return PrecedenceBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/definitions.js
  var require_definitions2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return DefinitionsDefinition;
      }
    });
    var _occamlexers = require_lib3();
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName2());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral2());
    var _zeroOrMoreParts = /* @__PURE__ */ _interop_require_default(require_zeroOrMoreParts());
    var _sequenceOfParts = /* @__PURE__ */ _interop_require_default(require_sequenceOfParts());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var verticalBar = _occamlexers.specialSymbols.verticalBar;
    var DefinitionsDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(DefinitionsDefinition2, Definition);
      function DefinitionsDefinition2() {
        _class_call_check(this, DefinitionsDefinition2);
        return _call_super(this, DefinitionsDefinition2, arguments);
      }
      _create_class(DefinitionsDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var parts;
            var content = verticalBar, ruleName = _ruleNames.DEFINITION_RULE_NAME, definitionRuleNamePart = _ruleName.default.fromRuleName(ruleName), verticalBarStringLiteralPart = _stringLiteral.default.fromContent(content);
            parts = [
              verticalBarStringLiteralPart,
              definitionRuleNamePart
            ];
            var sequenceOfPartsPart = _sequenceOfParts.default.fromParts(parts), zeroOrMoreSequenceOfPartsPart = _zeroOrMoreParts.default.fromPart(sequenceOfPartsPart);
            parts = [
              definitionRuleNamePart,
              zeroOrMoreSequenceOfPartsPart
            ];
            var precedence = null, definitionsDefinition = new DefinitionsDefinition2(parts, precedence);
            return definitionsDefinition;
          }
        }
      ]);
      return DefinitionsDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/definitions.js
  var require_definitions3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return DefinitionsBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _definitions = /* @__PURE__ */ _interop_require_default(require_definitions2());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var DefinitionsBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(DefinitionsBNFRule2, Rule);
      function DefinitionsBNFRule2() {
        _class_call_check(this, DefinitionsBNFRule2);
        return _call_super(this, DefinitionsBNFRule2, arguments);
      }
      _create_class(DefinitionsBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var definitionsDefinition = _definitions.default.fromNothing(), name = _ruleNames.DEFINITIONS_RULE_NAME, opacity = null, definitions = [
              definitionsDefinition
            ], definitionsRule = new DefinitionsBNFRule2(name, opacity, definitions);
            return definitionsRule;
          }
        }
      ]);
      return DefinitionsBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/terminalPart.js
  var require_terminalPart2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return TerminalPartBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName5());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var TerminalPartBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(TerminalPartBNFRule2, Rule);
      function TerminalPartBNFRule2() {
        _class_call_check(this, TerminalPartBNFRule2);
        return _call_super(this, TerminalPartBNFRule2, arguments);
      }
      _create_class(TerminalPartBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var ruleName;
            var name = _ruleNames.TERMINAL_PART_RULE_NAME;
            ruleName = _ruleNames.EPSILON_RULE_NAME;
            var epsilonRuleNameDefinition = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.WILDCARD_RULE_NAME;
            var wildcardRuleNameDefinition = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.END_OF_LINE_RULE_NAME;
            var endOfLineRuleNameDefinition = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.STRING_LITERAL_RULE_NAME;
            var stringLiteralRuleNameDefinition = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.NO_WHITESPACE_PART_RULE_NAME;
            var noWhitespacePartRuleNameDefinition = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.REGULAR_EXPRESSION_RULE_NAME;
            var regularExpressionRuleNameDefinition = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.START_OF_CONTENT_PART_RULE_NAME;
            var startOfContentPartRuleNameDefinition = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.SIGNIFICANT_TOKEN_TYPE_RULE_NAME;
            var significantTokenTypeRuleNameDefinition = _ruleName.default.fromRuleName(ruleName), opacity = null, definitions = [
              significantTokenTypeRuleNameDefinition,
              regularExpressionRuleNameDefinition,
              stringLiteralRuleNameDefinition,
              endOfLineRuleNameDefinition,
              wildcardRuleNameDefinition,
              epsilonRuleNameDefinition,
              noWhitespacePartRuleNameDefinition,
              startOfContentPartRuleNameDefinition
            ], terminalPartRule = new TerminalPartBNFRule2(name, opacity, definitions);
            return terminalPartRule;
          }
        }
      ]);
      return TerminalPartBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/choiceOfParts.js
  var require_choiceOfParts3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return ChoiceOfPartsDefinition;
      }
    });
    var _occamlexers = require_lib3();
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName2());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral2());
    var _oneOrMoreParts = /* @__PURE__ */ _interop_require_default(require_oneOrMoreParts());
    var _sequenceOfParts = /* @__PURE__ */ _interop_require_default(require_sequenceOfParts());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var verticalBar = _occamlexers.specialSymbols.verticalBar;
    var openBracket = _occamlexers.specialSymbols.openBracket;
    var closeBracket = _occamlexers.specialSymbols.closeBracket;
    var ChoiceOfPartsDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(ChoiceOfPartsDefinition2, Definition);
      function ChoiceOfPartsDefinition2() {
        _class_call_check(this, ChoiceOfPartsDefinition2);
        return _call_super(this, ChoiceOfPartsDefinition2, arguments);
      }
      _create_class(ChoiceOfPartsDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var parts;
            var ruleName = _ruleNames.PART_CHOICE_RULE_NAME, verticalBarStringLiteralContent = verticalBar, openBracketStringLiteralContent = openBracket, closeBracketStringLiteralContent = closeBracket, partChoiceRuleNamePart = _ruleName.default.fromRuleName(ruleName), verticalBarStringLiteralPart = _stringLiteral.default.fromContent(verticalBarStringLiteralContent), openBracketStringLiteralPart = _stringLiteral.default.fromContent(openBracketStringLiteralContent), closeBracketStringLiteralPart = _stringLiteral.default.fromContent(closeBracketStringLiteralContent);
            parts = [
              verticalBarStringLiteralPart,
              partChoiceRuleNamePart
            ];
            var sequenceOfPartsPart = _sequenceOfParts.default.fromParts(parts), oneOrMoreSequenceOfPartsPart = _oneOrMoreParts.default.fromPart(sequenceOfPartsPart);
            parts = [
              openBracketStringLiteralPart,
              partChoiceRuleNamePart,
              oneOrMoreSequenceOfPartsPart,
              closeBracketStringLiteralPart
            ];
            var precedence = null, choiceOfPartsDefinition = new ChoiceOfPartsDefinition2(parts, precedence);
            return choiceOfPartsDefinition;
          }
        }
      ]);
      return ChoiceOfPartsDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/choiceOfParts.js
  var require_choiceOfParts4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return ChoiceOfPartsBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _choiceOfParts = /* @__PURE__ */ _interop_require_default(require_choiceOfParts3());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var ChoiceOfPartsBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(ChoiceOfPartsBNFRule2, Rule);
      function ChoiceOfPartsBNFRule2() {
        _class_call_check(this, ChoiceOfPartsBNFRule2);
        return _call_super(this, ChoiceOfPartsBNFRule2, arguments);
      }
      _create_class(ChoiceOfPartsBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var name = _ruleNames.CHOICE_OF_PARTS_RULE_NAME, choiceOfPartsDefinition = _choiceOfParts.default.fromNothing(), opacity = null, definitions = [
              choiceOfPartsDefinition
            ], choiceOfPartsRule = new ChoiceOfPartsBNFRule2(name, opacity, definitions);
            return choiceOfPartsRule;
          }
        }
      ]);
      return ChoiceOfPartsBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/significantTokenType.js
  var require_significantTokenType3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return SignificantTokenTypeDefinition;
      }
    });
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _significantTokenType = /* @__PURE__ */ _interop_require_default(require_significantTokenType());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var SignificantTokenTypeDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(SignificantTokenTypeDefinition2, Definition);
      function SignificantTokenTypeDefinition2() {
        _class_call_check(this, SignificantTokenTypeDefinition2);
        return _call_super(this, SignificantTokenTypeDefinition2, arguments);
      }
      _create_class(SignificantTokenTypeDefinition2, null, [
        {
          key: "fromSignificantTokenType",
          value: function fromSignificantTokenType(significantTokenType) {
            var significantTokenTypePart = _significantTokenType.default.fromSignificantTokenType(significantTokenType), parts = [
              significantTokenTypePart
            ], precedence = null, significantTokenTypeDefinition = new SignificantTokenTypeDefinition2(parts, precedence);
            return significantTokenTypeDefinition;
          }
        }
      ]);
      return SignificantTokenTypeDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/stringLiteral.js
  var require_stringLiteral5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return StringLiteralBNFRule;
      }
    });
    var _occamlexers = require_lib3();
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _significantTokenType = /* @__PURE__ */ _interop_require_default(require_significantTokenType3());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var stringLiteralType = _occamlexers.types.stringLiteralType;
    var StringLiteralBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(StringLiteralBNFRule2, Rule);
      function StringLiteralBNFRule2() {
        _class_call_check(this, StringLiteralBNFRule2);
        return _call_super(this, StringLiteralBNFRule2, arguments);
      }
      _create_class(StringLiteralBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var significantTokenType = stringLiteralType, stringLiteralSignificantTokenTypeDefinition = _significantTokenType.default.fromSignificantTokenType(significantTokenType), name = _ruleNames.STRING_LITERAL_RULE_NAME, opacity = null, definitions = [
              stringLiteralSignificantTokenTypeDefinition
            ], stringLiteralRule = new StringLiteralBNFRule2(name, opacity, definitions);
            return stringLiteralRule;
          }
        }
      ]);
      return StringLiteralBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/partRule/nonTerminal/ruleName.js
  var require_ruleName6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RuleNameNonTerminalPartRuleDefinition;
      }
    });
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName2());
    var _optionalPart = /* @__PURE__ */ _interop_require_default(require_optionalPart());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var RuleNameNonTerminalPartRuleDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(RuleNameNonTerminalPartRuleDefinition2, Definition);
      function RuleNameNonTerminalPartRuleDefinition2() {
        _class_call_check(this, RuleNameNonTerminalPartRuleDefinition2);
        return _call_super(this, RuleNameNonTerminalPartRuleDefinition2, arguments);
      }
      _create_class(RuleNameNonTerminalPartRuleDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var ruleName;
            ruleName = _ruleNames.RULE_NAME_RULE_NAME;
            var ruleNameRuleNamePart = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.CALL_AHEAD_MODIFIER_RULE_NAME;
            var callAheadModifierRuleNamePart = _ruleName.default.fromRuleName(ruleName), optionalCallAheadRuleNamePartPart = _optionalPart.default.fromPart(callAheadModifierRuleNamePart), parts = [
              ruleNameRuleNamePart,
              optionalCallAheadRuleNamePartPart
            ], precedence = null, ruleNameNonTerminalPartRuleDefinition = new RuleNameNonTerminalPartRuleDefinition2(parts, precedence);
            return ruleNameNonTerminalPartRuleDefinition;
          }
        }
      ]);
      return RuleNameNonTerminalPartRuleDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/nonTerminalPart.js
  var require_nonTerminalPart2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NonTerminalPartBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName5());
    var _ruleName1 = /* @__PURE__ */ _interop_require_default(require_ruleName6());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var NonTerminalPartBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(NonTerminalPartBNFRule2, Rule);
      function NonTerminalPartBNFRule2() {
        _class_call_check(this, NonTerminalPartBNFRule2);
        return _call_super(this, NonTerminalPartBNFRule2, arguments);
      }
      _create_class(NonTerminalPartBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var ruleName;
            var name = _ruleNames.NON_TERMINAL_PART_RULE_NAME;
            ruleName = _ruleNames.CHOICE_OF_PARTS_RULE_NAME;
            var choiceOfPartsRuleNameDefinition = _ruleName.default.fromRuleName(ruleName);
            ruleName = _ruleNames.SEQUENCE_OF_PARTS_RULE_NAME;
            var sequenceOfPartsRuleNameDefinition = _ruleName.default.fromRuleName(ruleName), ruleNameNonTerminalPartRuleDefinition = _ruleName1.default.fromNothing(), opacity = null, definitions = [
              choiceOfPartsRuleNameDefinition,
              sequenceOfPartsRuleNameDefinition,
              ruleNameNonTerminalPartRuleDefinition
            ], nonTerminalPartRule = new NonTerminalPartBNFRule2(name, opacity, definitions);
            return nonTerminalPartRule;
          }
        }
      ]);
      return NonTerminalPartBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/sequenceOfParts.js
  var require_sequenceOfParts3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return SequenceOfPartsDefinition;
      }
    });
    var _occamlexers = require_lib3();
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName2());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral2());
    var _oneOrMoreParts = /* @__PURE__ */ _interop_require_default(require_oneOrMoreParts());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var openBracket = _occamlexers.specialSymbols.openBracket;
    var closeBracket = _occamlexers.specialSymbols.closeBracket;
    var SequenceOfPartsDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(SequenceOfPartsDefinition2, Definition);
      function SequenceOfPartsDefinition2() {
        _class_call_check(this, SequenceOfPartsDefinition2);
        return _call_super(this, SequenceOfPartsDefinition2, arguments);
      }
      _create_class(SequenceOfPartsDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var ruleName = _ruleNames.PART_RULE_NAME, openBracketStringLiteralContent = openBracket, closeBracketStringLiteralContent = closeBracket, partRuleNamePart = _ruleName.default.fromRuleName(ruleName), openBracketStringLiteralPart = _stringLiteral.default.fromContent(openBracketStringLiteralContent), closeBracketStringLiteralPart = _stringLiteral.default.fromContent(closeBracketStringLiteralContent), oneOrMorePartRuleNamePartsPart = _oneOrMoreParts.default.fromPart(partRuleNamePart), parts = [
              openBracketStringLiteralPart,
              partRuleNamePart,
              oneOrMorePartRuleNamePartsPart,
              closeBracketStringLiteralPart
            ], precedence = null, sequenceOfPartsDefinition = new SequenceOfPartsDefinition2(parts, precedence);
            return sequenceOfPartsDefinition;
          }
        }
      ]);
      return SequenceOfPartsDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/sequenceOfParts.js
  var require_sequenceOfParts4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return SequenceOfPartsBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _sequenceOfParts = /* @__PURE__ */ _interop_require_default(require_sequenceOfParts3());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var SequenceOfPartsBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(SequenceOfPartsBNFRule2, Rule);
      function SequenceOfPartsBNFRule2() {
        _class_call_check(this, SequenceOfPartsBNFRule2);
        return _call_super(this, SequenceOfPartsBNFRule2, arguments);
      }
      _create_class(SequenceOfPartsBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var name = _ruleNames.SEQUENCE_OF_PARTS_RULE_NAME, sequenceOfPartsDefinition = _sequenceOfParts.default.fromNothing(), opacity = null, definitions = [
              sequenceOfPartsDefinition
            ], sequenceOfPartsRule = new SequenceOfPartsBNFRule2(name, opacity, definitions);
            return sequenceOfPartsRule;
          }
        }
      ]);
      return SequenceOfPartsBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/opacityModifierRule.js
  var require_opacityModifierRule = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return OpacityModifierRuleDefinition;
      }
    });
    var _occamlexers = require_lib3();
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _partChoice = /* @__PURE__ */ _interop_require_default(require_partChoice());
    var _noWhitespace = /* @__PURE__ */ _interop_require_default(require_noWhitespace2());
    var _choiceOfParts = /* @__PURE__ */ _interop_require_default(require_choiceOfParts());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var opaque = _occamlexers.specialSymbols.opaque;
    var semiOpaque = _occamlexers.specialSymbols.semiOpaque;
    var OpacityModifierRuleDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(OpacityModifierRuleDefinition2, Definition);
      function OpacityModifierRuleDefinition2() {
        _class_call_check(this, OpacityModifierRuleDefinition2);
        return _call_super(this, OpacityModifierRuleDefinition2, arguments);
      }
      _create_class(OpacityModifierRuleDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var content;
            content = opaque;
            var opaqueStringLiteralPart = _stringLiteral.default.fromContent(content);
            content = semiOpaque;
            var semiOpaqueStringLiteralPart = _stringLiteral.default.fromContent(content);
            var opaqueStringLiteralPartChoice = _partChoice.default.fromPart(opaqueStringLiteralPart), semiOpaqueStringLiteralPartChoice = _partChoice.default.fromPart(semiOpaqueStringLiteralPart), partChoices = [
              opaqueStringLiteralPartChoice,
              semiOpaqueStringLiteralPartChoice
            ], choiceOfOpaqueStringLiteralAndSemiOpaqueStringLiteralPartsPart = _choiceOfParts.default.fromPartChoices(partChoices), noWhitespacePart = _noWhitespace.default.fromNothing(), parts = [
              noWhitespacePart,
              choiceOfOpaqueStringLiteralAndSemiOpaqueStringLiteralPartsPart
            ], precedence = null, opacityModifierRuleDefinition = new OpacityModifierRuleDefinition2(parts, precedence);
            return opacityModifierRuleDefinition;
          }
        }
      ]);
      return OpacityModifierRuleDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/opacityModifier.js
  var require_opacityModifier2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return OpacityModifierBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _opacityModifierRule = /* @__PURE__ */ _interop_require_default(require_opacityModifierRule());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var OpacityModifierBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(OpacityModifierBNFRule2, Rule);
      function OpacityModifierBNFRule2() {
        _class_call_check(this, OpacityModifierBNFRule2);
        return _call_super(this, OpacityModifierBNFRule2, arguments);
      }
      _create_class(OpacityModifierBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var name = _ruleNames.OPACITY_MODIFIER_RULE_NAME, opacityModifierRuleDefinition = _opacityModifierRule.default.fromNothing(), opacity = null, definitions = [
              opacityModifierRuleDefinition
            ], opacityModifierRule = new OpacityModifierBNFRule2(name, opacity, definitions);
            return opacityModifierRule;
          }
        }
      ]);
      return OpacityModifierBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/noWhitespacePart.js
  var require_noWhitespacePart2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NoWhitespacePartDefinition;
      }
    });
    var _occamlexers = require_lib3();
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var noWhitespace = _occamlexers.specialSymbols.noWhitespace;
    var NoWhitespacePartDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(NoWhitespacePartDefinition2, Definition);
      function NoWhitespacePartDefinition2() {
        _class_call_check(this, NoWhitespacePartDefinition2);
        return _call_super(this, NoWhitespacePartDefinition2, arguments);
      }
      _create_class(NoWhitespacePartDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var content = noWhitespace, stringLiteralPart = _stringLiteral.default.fromContent(content), parts = [
              stringLiteralPart
            ], precedence = null, noWhitespacePartDefinition = new NoWhitespacePartDefinition2(parts, precedence);
            return noWhitespacePartDefinition;
          }
        }
      ]);
      return NoWhitespacePartDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/noWhitespacePart.js
  var require_noWhitespacePart3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return NoWhitespacePartBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _noWhitespacePart = /* @__PURE__ */ _interop_require_default(require_noWhitespacePart2());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var NoWhitespacePartBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(NoWhitespacePartBNFRule2, Rule);
      function NoWhitespacePartBNFRule2() {
        _class_call_check(this, NoWhitespacePartBNFRule2);
        return _call_super(this, NoWhitespacePartBNFRule2, arguments);
      }
      _create_class(NoWhitespacePartBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var noWhitespacePartDefinition = _noWhitespacePart.default.fromNothing(), name = _ruleNames.NO_WHITESPACE_PART_RULE_NAME, opacity = null, definitions = [
              noWhitespacePartDefinition
            ], noWhitespacePartRule = new NoWhitespacePartBNFRule2(name, opacity, definitions);
            return noWhitespacePartRule;
          }
        }
      ]);
      return NoWhitespacePartBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/callAheadModifierRule.js
  var require_callAheadModifierRule = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CallAheadModifierRuleDefinition;
      }
    });
    var _occamlexers = require_lib3();
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _noWhitespace = /* @__PURE__ */ _interop_require_default(require_noWhitespace2());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var ellipsis = _occamlexers.specialSymbols.ellipsis;
    var CallAheadModifierRuleDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(CallAheadModifierRuleDefinition2, Definition);
      function CallAheadModifierRuleDefinition2() {
        _class_call_check(this, CallAheadModifierRuleDefinition2);
        return _call_super(this, CallAheadModifierRuleDefinition2, arguments);
      }
      _create_class(CallAheadModifierRuleDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var content = ellipsis, noWhitespacePart = _noWhitespace.default.fromNothing(), stringLiteralPart = _stringLiteral.default.fromContent(content), parts = [
              noWhitespacePart,
              stringLiteralPart
            ], precedence = null, callAheadModifierRuleDefinition = new CallAheadModifierRuleDefinition2(parts, precedence);
            return callAheadModifierRuleDefinition;
          }
        }
      ]);
      return CallAheadModifierRuleDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/callAheadModifier.js
  var require_callAheadModifier2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CallAheadModifierBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _callAheadModifierRule = /* @__PURE__ */ _interop_require_default(require_callAheadModifierRule());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var CallAheadModifierBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(CallAheadModifierBNFRule2, Rule);
      function CallAheadModifierBNFRule2() {
        _class_call_check(this, CallAheadModifierBNFRule2);
        return _call_super(this, CallAheadModifierBNFRule2, arguments);
      }
      _create_class(CallAheadModifierBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var name = _ruleNames.CALL_AHEAD_MODIFIER_RULE_NAME, callAheadModifierRuleDefinition = _callAheadModifierRule.default.fromNothing(), opacity = null, definitions = [
              callAheadModifierRuleDefinition
            ], callAheadModifierRule = new CallAheadModifierBNFRule2(name, opacity, definitions);
            return callAheadModifierRule;
          }
        }
      ]);
      return CallAheadModifierBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/regularExpression.js
  var require_regularExpression4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RegularExpressionBNFRule;
      }
    });
    var _occamlexers = require_lib3();
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _significantTokenType = /* @__PURE__ */ _interop_require_default(require_significantTokenType3());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var regularExpressionType = _occamlexers.types.regularExpressionType;
    var RegularExpressionBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(RegularExpressionBNFRule2, Rule);
      function RegularExpressionBNFRule2() {
        _class_call_check(this, RegularExpressionBNFRule2);
        return _call_super(this, RegularExpressionBNFRule2, arguments);
      }
      _create_class(RegularExpressionBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var significantTokenType = regularExpressionType, regularExpressionSignificantTokenTypeDefinition = _significantTokenType.default.fromSignificantTokenType(significantTokenType), name = _ruleNames.REGULAR_EXPRESSION_RULE_NAME, opacity = null, definitions = [
              regularExpressionSignificantTokenTypeDefinition
            ], regularExpressionRule = new RegularExpressionBNFRule2(name, opacity, definitions);
            return regularExpressionRule;
          }
        }
      ]);
      return RegularExpressionBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/quantifierRule.js
  var require_quantifierRule = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return QuantifierRuleDefinition;
      }
    });
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _noWhitespace = /* @__PURE__ */ _interop_require_default(require_noWhitespace2());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var QuantifierRuleDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(QuantifierRuleDefinition2, Definition);
      function QuantifierRuleDefinition2() {
        _class_call_check(this, QuantifierRuleDefinition2);
        return _call_super(this, QuantifierRuleDefinition2, arguments);
      }
      _create_class(QuantifierRuleDefinition2, null, [
        {
          key: "fromSpecialSymbol",
          value: function fromSpecialSymbol(specialSymbol) {
            var content = specialSymbol, noWhitespacePart = _noWhitespace.default.fromNothing(), stringLiteralPart = _stringLiteral.default.fromContent(content), parts = [
              noWhitespacePart,
              stringLiteralPart
            ], precedence = null, quantifierRuleDefinition = new QuantifierRuleDefinition2(parts, precedence);
            return quantifierRuleDefinition;
          }
        }
      ]);
      return QuantifierRuleDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/optionalQuantifier.js
  var require_optionalQuantifier2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return OptionalQuantifierBNFRule;
      }
    });
    var _occamlexers = require_lib3();
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _quantifierRule = /* @__PURE__ */ _interop_require_default(require_quantifierRule());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var questionMark = _occamlexers.specialSymbols.questionMark;
    var OptionalQuantifierBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(OptionalQuantifierBNFRule2, Rule);
      function OptionalQuantifierBNFRule2() {
        _class_call_check(this, OptionalQuantifierBNFRule2);
        return _call_super(this, OptionalQuantifierBNFRule2, arguments);
      }
      _create_class(OptionalQuantifierBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var name = _ruleNames.OPTIONAL_QUANTIFIER_RULE_NAME, specialSymbol = questionMark, optionalQuantifierRuleDefinition = _quantifierRule.default.fromSpecialSymbol(specialSymbol), opacity = null, definitions = [
              optionalQuantifierRuleDefinition
            ], optionalQuantifierRule = new OptionalQuantifierBNFRule2(name, opacity, definitions);
            return optionalQuantifierRule;
          }
        }
      ]);
      return OptionalQuantifierBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/definition/startOfContentPart.js
  var require_startOfContentPart2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return StartOfContentPartDefinition;
      }
    });
    var _occamlexers = require_lib3();
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var startOfContent = _occamlexers.specialSymbols.startOfContent;
    var StartOfContentPartDefinition = /* @__PURE__ */ function(Definition) {
      _inherits(StartOfContentPartDefinition2, Definition);
      function StartOfContentPartDefinition2() {
        _class_call_check(this, StartOfContentPartDefinition2);
        return _call_super(this, StartOfContentPartDefinition2, arguments);
      }
      _create_class(StartOfContentPartDefinition2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var content = startOfContent, stringLiteralPart = _stringLiteral.default.fromContent(content), parts = [
              stringLiteralPart
            ], precedence = null, startOfContentPartDefinition = new StartOfContentPartDefinition2(parts, precedence);
            return startOfContentPartDefinition;
          }
        }
      ]);
      return StartOfContentPartDefinition2;
    }(_definition.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/startOfContentPart.js
  var require_startOfContentPart3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return StartOfContentPartBNFRule;
      }
    });
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _startOfContentPart = /* @__PURE__ */ _interop_require_default(require_startOfContentPart2());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var StartOfContentPartBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(StartOfContentPartBNFRule2, Rule);
      function StartOfContentPartBNFRule2() {
        _class_call_check(this, StartOfContentPartBNFRule2);
        return _call_super(this, StartOfContentPartBNFRule2, arguments);
      }
      _create_class(StartOfContentPartBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var startOfContentPartDefinition = _startOfContentPart.default.fromNothing(), name = _ruleNames.START_OF_CONTENT_PART_RULE_NAME, opacity = null, definitions = [
              startOfContentPartDefinition
            ], startOfContentPartRule = new StartOfContentPartBNFRule2(name, opacity, definitions);
            return startOfContentPartRule;
          }
        }
      ]);
      return StartOfContentPartBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/oneOrMoreQuantifier.js
  var require_oneOrMoreQuantifier = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return OneOrMoreQuantifierBNFRule;
      }
    });
    var _occamlexers = require_lib3();
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _quantifierRule = /* @__PURE__ */ _interop_require_default(require_quantifierRule());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var plus = _occamlexers.specialSymbols.plus;
    var OneOrMoreQuantifierBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(OneOrMoreQuantifierBNFRule2, Rule);
      function OneOrMoreQuantifierBNFRule2() {
        _class_call_check(this, OneOrMoreQuantifierBNFRule2);
        return _call_super(this, OneOrMoreQuantifierBNFRule2, arguments);
      }
      _create_class(OneOrMoreQuantifierBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var name = _ruleNames.ONE_OR_MORE_QUANTIFIER_RULE_NAME, specialSymbol = plus, oneOrMoreQuantifierRuleDefinition = _quantifierRule.default.fromSpecialSymbol(specialSymbol), opacity = null, definitions = [
              oneOrMoreQuantifierRuleDefinition
            ], oneOrMoreQuantifierRule = new OneOrMoreQuantifierBNFRule2(name, opacity, definitions);
            return oneOrMoreQuantifierRule;
          }
        }
      ]);
      return OneOrMoreQuantifierBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/zeroOrMoreQuantifier.js
  var require_zeroOrMoreQuantifier = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return ZeroOrMoreQuantifierBNFRule;
      }
    });
    var _occamlexers = require_lib3();
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _quantifierRule = /* @__PURE__ */ _interop_require_default(require_quantifierRule());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var asterisk = _occamlexers.specialSymbols.asterisk;
    var ZeroOrMoreQuantifierBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(ZeroOrMoreQuantifierBNFRule2, Rule);
      function ZeroOrMoreQuantifierBNFRule2() {
        _class_call_check(this, ZeroOrMoreQuantifierBNFRule2);
        return _call_super(this, ZeroOrMoreQuantifierBNFRule2, arguments);
      }
      _create_class(ZeroOrMoreQuantifierBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var name = _ruleNames.ZERO_OR_MORE_QUANTIFIER_RULE_NAME, specialSymbol = asterisk, zeroOrMoreQuantifierRuleDefinition = _quantifierRule.default.fromSpecialSymbol(specialSymbol), opacity = null, definitions = [
              zeroOrMoreQuantifierRuleDefinition
            ], zeroOrMoreQuantifierRule = new ZeroOrMoreQuantifierBNFRule2(name, opacity, definitions);
            return zeroOrMoreQuantifierRule;
          }
        }
      ]);
      return ZeroOrMoreQuantifierBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/rule/bnf/significantTokenType.js
  var require_significantTokenType4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return SignificantTokenTypeBNFRule;
      }
    });
    var _occamlexers = require_lib3();
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _significantTokenType = /* @__PURE__ */ _interop_require_default(require_significantTokenType3());
    var _ruleNames = require_ruleNames();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var typeType = _occamlexers.types.typeType;
    var SignificantTokenTypeBNFRule = /* @__PURE__ */ function(Rule) {
      _inherits(SignificantTokenTypeBNFRule2, Rule);
      function SignificantTokenTypeBNFRule2() {
        _class_call_check(this, SignificantTokenTypeBNFRule2);
        return _call_super(this, SignificantTokenTypeBNFRule2, arguments);
      }
      _create_class(SignificantTokenTypeBNFRule2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var significantTokenType = typeType, typeSignificantTokenTypeDefinition = _significantTokenType.default.fromSignificantTokenType(significantTokenType), name = _ruleNames.SIGNIFICANT_TOKEN_TYPE_RULE_NAME, opacity = null, definitions = [
              typeSignificantTokenTypeDefinition
            ], significantTokenTypeRule = new SignificantTokenTypeBNFRule2(name, opacity, definitions);
            return significantTokenTypeRule;
          }
        }
      ]);
      return SignificantTokenTypeBNFRule2;
    }(_rule.default);
  });

  // node_modules/occam-parsers/lib/utilities/rules.js
  var require_rules2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return _default;
      },
      get ruleMapFromRules() {
        return ruleMapFromRules;
      },
      get rulesAsString() {
        return rulesAsString;
      },
      get rulesFromStartRuleAndRuleMap() {
        return rulesFromStartRuleAndRuleMap;
      },
      get startRuleFromRules() {
        return startRuleFromRules;
      },
      get startRuleFromRulesAndStartRuleName() {
        return startRuleFromRulesAndStartRuleName;
      }
    });
    var _necessary = require_browser();
    var _constants = require_constants4();
    var first = _necessary.arrayUtilities.first;
    var prune = _necessary.arrayUtilities.prune;
    function rulesAsString(rules, multiLine) {
      var maximumRuleNameLength = rules.reduce(function(maximumRuleNameLength2, rule) {
        var ruleName = rule.getName(), opacity = rule.getOpacity();
        var ruleNameLength = ruleName.length;
        if (opacity !== null) {
          var opacityLength = opacity.length;
          ruleNameLength += opacityLength;
        }
        maximumRuleNameLength2 = Math.max(maximumRuleNameLength2, ruleNameLength);
        return maximumRuleNameLength2;
      }, 0), rulesString = rules.reduce(function(rulesString2, rule) {
        var ruleString = rule.asString(maximumRuleNameLength, multiLine);
        rulesString2 += ruleString;
        return rulesString2;
      }, _constants.EMPTY_STRING).replace(/^\n\n/, _constants.EMPTY_STRING);
      return rulesString;
    }
    function ruleMapFromRules(rules) {
      var ruleMap = {};
      rules.forEach(function(rule) {
        var ruleName = rule.getName();
        ruleMap[ruleName] = rule;
      });
      return ruleMap;
    }
    function startRuleFromRules(rules) {
      var firstRule = first(rules), startRule = firstRule;
      return startRule;
    }
    function rulesFromStartRuleAndRuleMap(startRule, ruleMap) {
      var rules = Object.values(ruleMap), startRuleName = startRule.getName();
      startRule = prune(rules, function(rule) {
        var ruleName = rule.getName();
        if (ruleName !== startRuleName) {
          return true;
        }
      });
      rules.unshift(startRule);
      return rules;
    }
    function startRuleFromRulesAndStartRuleName(rules, startRuleName) {
      var startRule = rules.find(function(rule) {
        var ruleName = rule.getName();
        if (ruleName === startRuleName) {
          return true;
        }
      }) || null;
      if (startRule === null) {
        startRule = startRuleFromRules(rules);
      }
      return startRule;
    }
    var _default = {
      rulesAsString,
      ruleMapFromRules,
      startRuleFromRules,
      rulesFromStartRuleAndRuleMap,
      startRuleFromRulesAndStartRuleName
    };
  });

  // node_modules/occam-parsers/lib/bnf/parser.js
  var require_parser2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return BNFParser;
      }
    });
    var _bnf = /* @__PURE__ */ _interop_require_default(require_bnf());
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _nonTerminalNodeMap = /* @__PURE__ */ _interop_require_default(require_nonTerminalNodeMap());
    var _parser = /* @__PURE__ */ _interop_require_default(require_parser());
    var _name = /* @__PURE__ */ _interop_require_default(require_name4());
    var _part = /* @__PURE__ */ _interop_require_default(require_part2());
    var _rule1 = /* @__PURE__ */ _interop_require_default(require_rule5());
    var _error = /* @__PURE__ */ _interop_require_default(require_error3());
    var _epsilon = /* @__PURE__ */ _interop_require_default(require_epsilon4());
    var _document = /* @__PURE__ */ _interop_require_default(require_document4());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName4());
    var _wildcard = /* @__PURE__ */ _interop_require_default(require_wildcard3());
    var _endOfLine = /* @__PURE__ */ _interop_require_default(require_endOfLine8());
    var _partChoice = /* @__PURE__ */ _interop_require_default(require_partChoice4());
    var _quantifier = /* @__PURE__ */ _interop_require_default(require_quantifier2());
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition4());
    var _precedence = /* @__PURE__ */ _interop_require_default(require_precedence3());
    var _definitions = /* @__PURE__ */ _interop_require_default(require_definitions3());
    var _terminalPart = /* @__PURE__ */ _interop_require_default(require_terminalPart2());
    var _choiceOfParts = /* @__PURE__ */ _interop_require_default(require_choiceOfParts4());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral5());
    var _nonTerminalPart = /* @__PURE__ */ _interop_require_default(require_nonTerminalPart2());
    var _sequenceOfParts = /* @__PURE__ */ _interop_require_default(require_sequenceOfParts4());
    var _opacityModifier = /* @__PURE__ */ _interop_require_default(require_opacityModifier2());
    var _noWhitespacePart = /* @__PURE__ */ _interop_require_default(require_noWhitespacePart3());
    var _callAheadModifier = /* @__PURE__ */ _interop_require_default(require_callAheadModifier2());
    var _regularExpression = /* @__PURE__ */ _interop_require_default(require_regularExpression4());
    var _optionalQuantifier = /* @__PURE__ */ _interop_require_default(require_optionalQuantifier2());
    var _startOfContentPart = /* @__PURE__ */ _interop_require_default(require_startOfContentPart3());
    var _oneOrMoreQuantifier = /* @__PURE__ */ _interop_require_default(require_oneOrMoreQuantifier());
    var _zeroOrMoreQuantifier = /* @__PURE__ */ _interop_require_default(require_zeroOrMoreQuantifier());
    var _significantTokenType = /* @__PURE__ */ _interop_require_default(require_significantTokenType4());
    var _rules = require_rules2();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var BNFParser = /* @__PURE__ */ function() {
      function BNFParser2(startRule, ruleMap) {
        _class_call_check(this, BNFParser2);
        this.startRule = startRule;
        this.ruleMap = ruleMap;
      }
      _create_class(BNFParser2, [
        {
          key: "getStartRule",
          value: function getStartRule() {
            return this.startRule;
          }
        },
        {
          key: "getRuleMap",
          value: function getRuleMap() {
            return this.ruleMap;
          }
        },
        {
          key: "rulesFromTokens",
          value: function rulesFromTokens(tokens) {
            var rules;
            var node = this.parse(tokens);
            if (node === null) {
              throw new Error("There is no node.");
            }
            rules = node.generateRules(_rule.default);
            var rulesLength = rules.length;
            if (rulesLength === 0) {
              throw new Error("There are no rules.");
            }
            return rules;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var nameBNFRule = _name.default.fromNothing(), partBNFRule = _part.default.fromNothing(), ruleBNFRule = _rule1.default.fromNothing(), errorBNFRule = _error.default.fromNothing(), epsilonBNFRule = _epsilon.default.fromNothing(), documentBNFRule = _document.default.fromNothing(), ruleNameBNFRule = _ruleName.default.fromNothing(), wildcardBNFRule = _wildcard.default.fromNothing(), endOfLineBNFRule = _endOfLine.default.fromNothing(), partChoiceBNFRule = _partChoice.default.fromNothing(), quantifierBNFRule = _quantifier.default.fromNothing(), definitionBNFRule = _definition.default.fromNothing(), precedentsBNFRule = _precedence.default.fromNothing(), definitionsBNFRule = _definitions.default.fromNothing(), terminalPartBNFRule = _terminalPart.default.fromNothing(), choiceOfPartsBNFRule = _choiceOfParts.default.fromNothing(), stringLiteralBNFRule = _stringLiteral.default.fromNothing(), nonTerminalPartBNFRule = _nonTerminalPart.default.fromNothing(), sequenceOfPartsBNFRule = _sequenceOfParts.default.fromNothing(), opacityModifierBNFRule = _opacityModifier.default.fromNothing(), noWhitespacePartBNFRule = _noWhitespacePart.default.fromNothing(), regularExpressionBNFRule = _regularExpression.default.fromNothing(), callAheadModifierBNFRule = _callAheadModifier.default.fromNothing(), optionalQuantifierBNFRule = _optionalQuantifier.default.fromNothing(), startOfContentPartBNFRule = _startOfContentPart.default.fromNothing(), oneOrMoreQuantifierBNFRule = _oneOrMoreQuantifier.default.fromNothing(), zeroOrMoreQuantifierBNFRule = _zeroOrMoreQuantifier.default.fromNothing(), significantTokenTypeBNFRule = _significantTokenType.default.fromNothing(), rules = [
              documentBNFRule,
              ruleBNFRule,
              nameBNFRule,
              definitionsBNFRule,
              definitionBNFRule,
              partBNFRule,
              nonTerminalPartBNFRule,
              terminalPartBNFRule,
              startOfContentPartBNFRule,
              noWhitespacePartBNFRule,
              sequenceOfPartsBNFRule,
              choiceOfPartsBNFRule,
              partChoiceBNFRule,
              ruleNameBNFRule,
              significantTokenTypeBNFRule,
              regularExpressionBNFRule,
              stringLiteralBNFRule,
              precedentsBNFRule,
              endOfLineBNFRule,
              wildcardBNFRule,
              epsilonBNFRule,
              quantifierBNFRule,
              opacityModifierBNFRule,
              callAheadModifierBNFRule,
              optionalQuantifierBNFRule,
              oneOrMoreQuantifierBNFRule,
              zeroOrMoreQuantifierBNFRule,
              errorBNFRule
            ], startRule = (0, _rules.startRuleFromRules)(rules), ruleMap = (0, _rules.ruleMapFromRules)(rules), bnfParser = new BNFParser2(startRule, ruleMap);
            return bnfParser;
          }
        }
      ]);
      return BNFParser2;
    }();
    _define_property(BNFParser, "NonTerminalNodeMap", _nonTerminalNodeMap.default);
    _define_property(BNFParser, "defaultNonTerminalNode", null);
    _define_property(BNFParser, "bnf", _bnf.default);
    Object.assign(BNFParser.prototype, _parser.default);
  });

  // node_modules/occam-parsers/lib/basic/bnf.js
  var require_bnf3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var bnf = '\n\n    expressions  ::=  expression+ ;\n\n    expression   ::=  term... "." ;\n    \n    term         ::=  term_ term~* ;\n    \n    operator     ::=  "+"\n    \n                   |  "-"\n    \n                   |  "*"\n    \n                   ;\n    \n    number       ::=  /\\d+/ ;\n    \n    term_        ::=  "(" term ")"\n    \n                   |  number\n    \n                   ;\n    \n    term~term    ::=  operator term ;\n    \n    term~        ::=  term~term ;\n\n';
    var _default = bnf;
  });

  // node_modules/occam-parsers/lib/utilities/parser.js
  var require_parser3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return _default;
      },
      get parserFromRules() {
        return parserFromRules;
      },
      get parserFromRulesAndStartRuleName() {
        return parserFromRulesAndStartRuleName;
      },
      get rulesFromBNF() {
        return rulesFromBNF;
      }
    });
    var _occamlexers = require_lib3();
    var _parser = /* @__PURE__ */ _interop_require_default(require_parser2());
    var _rules = require_rules2();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var bnfLexer = _occamlexers.BNFLexer.fromNothing();
    var bnfParser = _parser.default.fromNothing();
    function rulesFromBNF(bnf) {
      var tokens = bnfLexer.tokensFromBNF(bnf), rules = bnfParser.rulesFromTokens(tokens);
      return rules;
    }
    function parserFromRules(Class, rules) {
      var startRule = (0, _rules.startRuleFromRules)(rules), ruleMap = (0, _rules.ruleMapFromRules)(rules), parser = new Class(startRule, ruleMap);
      return parser;
    }
    function parserFromRulesAndStartRuleName(Class, rules, startRuleName) {
      var startRule = (0, _rules.startRuleFromRulesAndStartRuleName)(rules, startRuleName), ruleMap = (0, _rules.ruleMapFromRules)(rules), parser = new Class(startRule, ruleMap);
      return parser;
    }
    var _default = {
      rulesFromBNF,
      parserFromRules,
      parserFromRulesAndStartRuleName
    };
  });

  // node_modules/occam-parsers/lib/common/parser.js
  var require_parser4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CommonParser;
      }
    });
    var _parser = /* @__PURE__ */ _interop_require_default(require_parser());
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    var _parser1 = require_parser3();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var CommonParser = /* @__PURE__ */ function() {
      function CommonParser2(startRule, ruleMap) {
        _class_call_check(this, CommonParser2);
        this.startRule = startRule;
        this.ruleMap = ruleMap;
      }
      _create_class(CommonParser2, [
        {
          key: "getStartRule",
          value: function getStartRule() {
            return this.startRule;
          }
        },
        {
          key: "getRuleMap",
          value: function getRuleMap() {
            return this.ruleMap;
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing(Class) {
            var bnf = Class.bnf, rules = (0, _parser1.rulesFromBNF)(bnf), parser = (0, _parser1.parserFromRules)(Class, rules);
            return parser;
          }
        },
        {
          key: "fromBNF",
          value: function fromBNF(Class, bnf) {
            var rules = (0, _parser1.rulesFromBNF)(bnf), parser = (0, _parser1.parserFromRules)(Class, rules);
            return parser;
          }
        },
        {
          key: "fromRules",
          value: function fromRules(Class, rules) {
            var parser = (0, _parser1.parserFromRules)(Class, rules);
            return parser;
          }
        }
      ]);
      return CommonParser2;
    }();
    _define_property(CommonParser, "NonTerminalNodeMap", {});
    _define_property(CommonParser, "defaultNonTerminalNode", _nonTerminal.default);
    Object.assign(CommonParser.prototype, _parser.default);
  });

  // node_modules/occam-parsers/lib/basic/parser.js
  var require_parser5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return BasicParser;
      }
    });
    var _bnf = /* @__PURE__ */ _interop_require_default(require_bnf3());
    var _parser = /* @__PURE__ */ _interop_require_default(require_parser4());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var BasicParser = /* @__PURE__ */ function(CommonParser) {
      _inherits(BasicParser2, CommonParser);
      function BasicParser2() {
        _class_call_check(this, BasicParser2);
        return _call_super(this, BasicParser2, arguments);
      }
      _create_class(BasicParser2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _parser.default.fromNothing(BasicParser2);
          }
        },
        {
          key: "fromBNF",
          value: function fromBNF(bnf) {
            return _parser.default.fromBNF(BasicParser2, bnf);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _parser.default.fromRules(BasicParser2, rules);
          }
        }
      ]);
      return BasicParser2;
    }(_parser.default);
    _define_property(BasicParser, "bnf", _bnf.default);
  });

  // node_modules/occam-parsers/lib/parts.js
  var require_parts = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _epsilon = /* @__PURE__ */ _interop_require_default(require_epsilon2());
    var _ruleName = /* @__PURE__ */ _interop_require_default(require_ruleName2());
    var _wildcard = /* @__PURE__ */ _interop_require_default(require_wildcard());
    var _endOfLine = /* @__PURE__ */ _interop_require_default(require_endOfLine6());
    var _optionalPart = /* @__PURE__ */ _interop_require_default(require_optionalPart());
    var _stringLiteral = /* @__PURE__ */ _interop_require_default(require_stringLiteral2());
    var _choiceOfParts = /* @__PURE__ */ _interop_require_default(require_choiceOfParts());
    var _oneOrMoreParts = /* @__PURE__ */ _interop_require_default(require_oneOrMoreParts());
    var _sequenceOfParts = /* @__PURE__ */ _interop_require_default(require_sequenceOfParts());
    var _zeroOrMoreParts = /* @__PURE__ */ _interop_require_default(require_zeroOrMoreParts());
    var _regularExpression = /* @__PURE__ */ _interop_require_default(require_regularExpression2());
    var _significantTokenType = /* @__PURE__ */ _interop_require_default(require_significantTokenType());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var _default = {
      EpsilonPart: _epsilon.default,
      RuleNamePart: _ruleName.default,
      WildcardPart: _wildcard.default,
      EndOfLinePart: _endOfLine.default,
      OptionalPartPart: _optionalPart.default,
      ChoiceOfPartsPart: _choiceOfParts.default,
      StringLiteralPart: _stringLiteral.default,
      OneOrMorePartsPart: _oneOrMoreParts.default,
      SequenceOfPartsPart: _sequenceOfParts.default,
      ZeroOrMorePartsPart: _zeroOrMoreParts.default,
      RegularExpressionPart: _regularExpression.default,
      SignificantTokenTypePart: _significantTokenType.default
    };
  });

  // node_modules/occam-parsers/lib/index.js
  var require_lib4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get BNFParser() {
        return _parser.default;
      },
      get BasicParser() {
        return _parser1.default;
      },
      get CommonParser() {
        return _parser2.default;
      },
      get Definition() {
        return _definition.default;
      },
      get EpsilonNode() {
        return _epsilon.default;
      },
      get NonTerminalNode() {
        return _nonTerminal.default;
      },
      get PartChoice() {
        return _partChoice.default;
      },
      get Parts() {
        return _parts.default;
      },
      get Rule() {
        return _rule.default;
      },
      get TerminalNode() {
        return _terminal.default;
      },
      get nodeMixins() {
        return _node.default;
      },
      get parserUtilities() {
        return _parser3.default;
      },
      get partTypes() {
        return _partTypes.default;
      },
      get rulesUtilities() {
        return _rules.default;
      }
    });
    var _parser = /* @__PURE__ */ _interop_require_default(require_parser2());
    var _parser1 = /* @__PURE__ */ _interop_require_default(require_parser5());
    var _parser2 = /* @__PURE__ */ _interop_require_default(require_parser4());
    var _node = /* @__PURE__ */ _interop_require_default(require_node());
    var _rules = /* @__PURE__ */ _interop_require_default(require_rules2());
    var _parser3 = /* @__PURE__ */ _interop_require_default(require_parser3());
    var _rule = /* @__PURE__ */ _interop_require_default(require_rule2());
    var _parts = /* @__PURE__ */ _interop_require_default(require_parts());
    var _partTypes = /* @__PURE__ */ _interop_require_default(require_partTypes());
    var _partChoice = /* @__PURE__ */ _interop_require_default(require_partChoice());
    var _definition = /* @__PURE__ */ _interop_require_default(require_definition());
    var _epsilon = /* @__PURE__ */ _interop_require_default(require_epsilon());
    var _terminal = /* @__PURE__ */ _interop_require_default(require_terminal2());
    var _nonTerminal = /* @__PURE__ */ _interop_require_default(require_nonTerminal());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // node_modules/with-style/lib/css/bnf.js
  var require_bnf4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var bnf = '\n\n    stylesheet                 ::= ( media | ruleSet | keyframes | declaration | error )+ ;\n\n\n    media                      ::= "@media" mediaQueries "{" ( ruleSet | declaration )* "}" ;\n                                     \n                                                              \n    ruleSet                    ::=  selectors "{" declaration* "}" ;\n    \n    \n    keyframes                  ::= "@keyframes" [identifier] "{" keyframe+ "}" ;\n                                     \n                                                              \n    declaration                ::=  propertyName ":" propertyValues important? ";" ;\n\n\n    error.                     ::=  . ;\n\n\n    propertyValues             ::=  propertyValue ( "," propertyValue )* ;\n\n\n    mediaQueries               ::=  mediaQuery ( ( "," | "or" ) mediaQuery )* ;\n                                                              \n                                                              \n    selectors                  ::=  selector ( "," selector )* ;\n\n\n    keyframe                   ::=  [percentage] "{" declaration+ "}" ;\n    \n    \n    mediaQuery                 ::=  ( "not"? mediaType "and" )? mediaFeatures \n    \n                                 |  "not"? mediaType\n                                 \n                                 ;\n\n\n    mediaType                  ::=  "all" | "print" | "screen" | "speech" ;\n                                                              \n                                                              \n    mediaFeatures              ::=  ( \n    \n                                      mediaFeature \n                                      \n                                      | \n                                      \n                                      ( "(" "not" mediaFeature ")" ) \n                                      \n                                    ) \n    \n                                    ( \n                                    \n                                      "and" \n                                    \n                                      ( \n                                      \n                                        mediaFeature \n                                        \n                                        | \n                                        \n                                        ( "(" "not" mediaFeature ")" ) \n                                        \n                                      ) \n                                      \n                                    )* \n                                    \n                                 ;\n\n\n    mediaFeature               ::=  "(" [identifier] ( ":" propertyValue )? ")" ;\n\n\n    propertyValue              ::=  term ( ","? term )* ;\n\n\n    propertyName               ::=  [identifier] ;\n\n\n    important                  ::=  "!important" ;\n\n\n    selector                   ::=  ( class | pseudoClass | pseudoElement | attribute )+ ;\n\n\n    class                      ::=  "."<NO_WHITESPACE>[identifier] parenthesisedSelector? ;\n\n\n    pseudoClass                ::=  ":"<NO_WHITESPACE>[identifier] parenthesisedSelector? ;\n\n\n    pseudoElement              ::=  "::"<NO_WHITESPACE>[identifier] parenthesisedSelector? ;\n\n\n    parenthesisedSelector      ::=  <NO_WHITESPACE>"(" selector <NO_WHITESPACE>")" ;\n\n\n    attribute                  ::=  "["\n\n                                       [identifier]\n\n                                       (\n\n                                         ( "=" | "~=" | "|=" )\n\n                                         ( [identifier] | [string-literal] )\n\n                                       )?\n\n                                    "]"\n\n                                 ;\n\n\n    term                       ::=  [plus-or-minus]?\n                                                       \n                                    (\n                                                     \n                                      ( [percentage] | [frequency] | [fraction] | [length] | [angle] | [rems] | [ems] | [time] | [number] )\n                                                     \n                                      |\n                                                     \n                                      uri\n                                                     \n                                      |\n                                                     \n                                      function\n                                                     \n                                      |\n                                                     \n                                      [string-literal]+\n                                                     \n                                      |\n                                                     \n                                      [identifier]\n                                                     \n                                      |\n                                                     \n                                      [colour]\n                                                     \n                                    )\n                                                       \n                                 ;\n\n\n    uri                        ::=  "url"<NO_WHITESPACE>"(" [string-literal] ")" ;\n\n\n    function                   ::=  [identifier]<NO_WHITESPACE>"(" propertyValue ")" ;\n\n';
    var _default = bnf;
  });

  // node_modules/with-style/lib/css/parser.js
  var require_parser6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CSSParser;
      }
    });
    var _occamparsers = require_lib4();
    var _bnf = /* @__PURE__ */ _interop_require_default(require_bnf4());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var CSSParser = /* @__PURE__ */ function(CommonParser) {
      _inherits(CSSParser2, CommonParser);
      function CSSParser2() {
        _class_call_check(this, CSSParser2);
        return _call_super(this, CSSParser2, arguments);
      }
      _create_class(CSSParser2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamparsers.CommonParser.fromNothing(CSSParser2);
          }
        },
        {
          key: "fromBNF",
          value: function fromBNF(bnf) {
            return _occamparsers.CommonParser.fromBNF(CSSParser2, bnf);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamparsers.CommonParser.fromRules(CSSParser2, rules);
          }
        }
      ]);
      return CSSParser2;
    }(_occamparsers.CommonParser);
    _define_property(CSSParser, "bnf", _bnf.default);
  });

  // node_modules/occam-query/lib/ruleNames.js
  var require_ruleNames2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get END_INDEX_RULE_NAME() {
        return END_INDEX_RULE_NAME;
      },
      get ERROR_RULE_NAME() {
        return ERROR_RULE_NAME;
      },
      get INDEX_RULE_NAME() {
        return INDEX_RULE_NAME;
      },
      get INFINITE_DESCENT_RULE_NAME() {
        return INFINITE_DESCENT_RULE_NAME;
      },
      get RULE_NAME_RULE_NAME() {
        return RULE_NAME_RULE_NAME;
      },
      get SPREAD_RULE_NAME() {
        return SPREAD_RULE_NAME;
      },
      get START_INDEX_RULE_NAME() {
        return START_INDEX_RULE_NAME;
      },
      get SUB_EXPRESSION_RULE_NAME() {
        return SUB_EXPRESSION_RULE_NAME;
      },
      get TOKEN_TYPE_RULE_NAME() {
        return TOKEN_TYPE_RULE_NAME;
      },
      get UNIQUE_RULE_NAME() {
        return UNIQUE_RULE_NAME;
      }
    });
    var ERROR_RULE_NAME = "error";
    var INDEX_RULE_NAME = "index";
    var UNIQUE_RULE_NAME = "unique";
    var SPREAD_RULE_NAME = "spread";
    var END_INDEX_RULE_NAME = "endIndex";
    var RULE_NAME_RULE_NAME = "ruleName";
    var TOKEN_TYPE_RULE_NAME = "tokenType";
    var START_INDEX_RULE_NAME = "startIndex";
    var SUB_EXPRESSION_RULE_NAME = "subExpression";
    var INFINITE_DESCENT_RULE_NAME = "infiniteDescent";
  });

  // node_modules/occam-query/lib/utilities/node.js
  var require_node3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get endIndexFromSpreadNode() {
        return endIndexFromSpreadNode;
      },
      get errorNodesFromExpressionNode() {
        return errorNodesFromExpressionNode;
      },
      get indexFromIndexNode() {
        return indexFromIndexNode;
      },
      get indexFromSpreadNode() {
        return indexFromSpreadNode;
      },
      get infiniteDescentFromPathNode() {
        return infiniteDescentFromPathNode;
      },
      get pathNodeFromExpressionNode() {
        return pathNodeFromExpressionNode;
      },
      get pathNodeFromSubExpressionNode() {
        return pathNodeFromSubExpressionNode;
      },
      get ruleNamesFromPathNode() {
        return ruleNamesFromPathNode;
      },
      get selectorNodesFromPathNode() {
        return selectorNodesFromPathNode;
      },
      get spreadNodeFromExpressionNode() {
        return spreadNodeFromExpressionNode;
      },
      get spreadNodeFromSubExpressionNode() {
        return spreadNodeFromSubExpressionNode;
      },
      get startIndexFromSpreadNode() {
        return startIndexFromSpreadNode;
      },
      get subExpressionNodeFromExpressionNode() {
        return subExpressionNodeFromExpressionNode;
      },
      get subExpressionNodeFromSubExpressionNode() {
        return subExpressionNodeFromSubExpressionNode;
      },
      get tokenTypesFromPathNode() {
        return tokenTypesFromPathNode;
      },
      get uniqueFromSpreadNode() {
        return uniqueFromSpreadNode;
      }
    });
    var _ruleNames = require_ruleNames2();
    function indexFromIndexNode(indexNode) {
      var nonTerminalNode = indexNode, index = fromFirstChildNode(nonTerminalNode, function(firstChildNode) {
        var terminalNode = firstChildNode, content = terminalNode.getContent(), index2 = Number(content);
        return index2;
      });
      return index;
    }
    function ruleNamesFromPathNode(pathNode) {
      var selectorNodes = selectorNodesFromPathNode(pathNode), ruleNameNodes = selectorNodes.reduce(function(ruleNameNodes2, selectorNode) {
        var nonTerminalNode = selectorNode, ruleNameNode = fromFirstChildNode(nonTerminalNode, function(firstChildNode) {
          var ruleNameNode2 = null;
          var nonTerminalNode2 = firstChildNode, ruleName = nonTerminalNode2.getRuleName(), ruleNameRuleNameRuleName = ruleName === _ruleNames.RULE_NAME_RULE_NAME;
          if (ruleNameRuleNameRuleName) {
            ruleNameNode2 = nonTerminalNode2;
          }
          return ruleNameNode2;
        });
        if (ruleNameNode !== null) {
          ruleNameNodes2.push(ruleNameNode);
        }
        return ruleNameNodes2;
      }, []), ruleNames = ruleNameNodes.map(function(ruleNameNode) {
        var nonTerminalNode = ruleNameNode, ruleName = fromFirstChildNode(nonTerminalNode, function(firstChildNode) {
          var terminalNode = firstChildNode, content = terminalNode.getContent(), ruleName2 = content;
          return ruleName2;
        });
        return ruleName;
      });
      return ruleNames;
    }
    function tokenTypesFromPathNode(pathNode) {
      var selectorNodes = selectorNodesFromPathNode(pathNode), tokenTypeNodes = selectorNodes.reduce(function(tokenTypeNodes2, selectorNode) {
        var nonTerminalNode = selectorNode, tokenTypeNode = fromFirstChildNode(nonTerminalNode, function(firstChildNode) {
          var tokenTypeNode2 = null;
          var nonTerminalNode2 = firstChildNode, ruleName = nonTerminalNode2.getRuleName(), ruleNameTokenTypeRuleName = ruleName === _ruleNames.TOKEN_TYPE_RULE_NAME;
          if (ruleNameTokenTypeRuleName) {
            tokenTypeNode2 = nonTerminalNode2;
          }
          return tokenTypeNode2;
        });
        if (tokenTypeNode !== null) {
          tokenTypeNodes2.push(tokenTypeNode);
        }
        return tokenTypeNodes2;
      }, []), tokenTypes = tokenTypeNodes.map(function(tokenTypeNode) {
        var nonTerminalNode = tokenTypeNode, tokenType = fromThirdChildNode(nonTerminalNode, function(thirdChildNode) {
          var terminalNode = thirdChildNode, content = terminalNode.getContent(), tokenType2 = content;
          return tokenType2;
        });
        return tokenType;
      });
      return tokenTypes;
    }
    function selectorNodesFromPathNode(pathNode) {
      var nonTerminalNode;
      nonTerminalNode = pathNode;
      var selectorsNode = fromLastChildNode(nonTerminalNode, function(lastChildNode) {
        var selectorsNode2 = lastChildNode;
        return selectorsNode2;
      });
      nonTerminalNode = selectorsNode;
      var selectorNodes = nonTerminalNode.filterChildNode(function(childNode) {
        var childNodeNonTerminalNode = childNode.isNonTerminalNode();
        if (childNodeNonTerminalNode) {
          return true;
        }
      });
      return selectorNodes;
    }
    function infiniteDescentFromPathNode(pathNode) {
      var nonTerminalNode = pathNode, infiniteDescent = fromSecondChildNode(nonTerminalNode, function(secondChildNode) {
        var nonTerminalNode2 = secondChildNode, ruleName = nonTerminalNode2.getRuleName(), ruleNameInfiniteDescentRuleName = ruleName === _ruleNames.INFINITE_DESCENT_RULE_NAME, infiniteDescent2 = ruleNameInfiniteDescentRuleName;
        return infiniteDescent2;
      }) || false;
      return infiniteDescent;
    }
    function uniqueFromSpreadNode(spreadNode) {
      var nonTerminalNode = spreadNode, unique = fromFirstChildNode(nonTerminalNode, function(firstChildNode) {
        var unique2 = false;
        var firstChildNodeNonTerminalNode = firstChildNode.isNonTerminalNode();
        if (firstChildNodeNonTerminalNode) {
          var nonTerminalNode2 = firstChildNode, ruleName = nonTerminalNode2.getRuleName(), ruleNameUniqueRuleName = ruleName === _ruleNames.UNIQUE_RULE_NAME;
          if (ruleNameUniqueRuleName) {
            unique2 = true;
          }
        }
        return unique2;
      });
      return unique;
    }
    function indexFromSpreadNode(spreadNode) {
      var index = null;
      var nonTerminalNode = spreadNode, indexNode = nonTerminalNode.findChildNode(function(childNode) {
        var childNodeNonTerminalNode = childNode.isNonTerminalNode();
        if (childNodeNonTerminalNode) {
          var nonTerminalNode2 = childNode, ruleName = nonTerminalNode2.getRuleName(), ruleNameIndexRuleName = ruleName === _ruleNames.INDEX_RULE_NAME;
          if (ruleNameIndexRuleName) {
            return true;
          }
        }
      }) || null;
      if (indexNode !== null) {
        index = indexFromIndexNode(indexNode);
      }
      return index;
    }
    function endIndexFromSpreadNode(spreadNode) {
      var endIndex = Infinity;
      var nonTerminalNode = spreadNode, endIndexNode = nonTerminalNode.findChildNode(function(childNode) {
        var childNodeNonTerminalNode = childNode.isNonTerminalNode();
        if (childNodeNonTerminalNode) {
          var nonTerminalNode2 = childNode, ruleName = nonTerminalNode2.getRuleName(), ruleNameEndIndexRuleName = ruleName === _ruleNames.END_INDEX_RULE_NAME;
          if (ruleNameEndIndexRuleName) {
            return true;
          }
        }
      }) || null;
      if (endIndexNode !== null) {
        endIndex = indexFromIndexNode(endIndexNode);
      }
      return endIndex;
    }
    function startIndexFromSpreadNode(spreadNode) {
      var startIndex = 0;
      var nonTerminalNode = spreadNode, startIndexNode = nonTerminalNode.findChildNode(function(childNode) {
        var childNodeNonTerminalNode = childNode.isNonTerminalNode();
        if (childNodeNonTerminalNode) {
          var nonTerminalNode2 = childNode, ruleName = nonTerminalNode2.getRuleName(), ruleNameStartIndexRuleName = ruleName === _ruleNames.START_INDEX_RULE_NAME;
          if (ruleNameStartIndexRuleName) {
            return true;
          }
        }
      }) || null;
      if (startIndexNode !== null) {
        startIndex = indexFromIndexNode(startIndexNode);
      }
      return startIndex;
    }
    function pathNodeFromExpressionNode(expressionNode) {
      var nonTerminalNode = expressionNode, pathNode = fromFirstChildNode(nonTerminalNode, function(firstChildNode) {
        var pathNode2 = firstChildNode;
        return pathNode2;
      });
      return pathNode;
    }
    function spreadNodeFromExpressionNode(expressionNode) {
      var nonTerminalNode = expressionNode, spreadNode = fromSecondChildNode(nonTerminalNode, function(secondChildNode) {
        var spreadNode2 = null;
        var nonTerminalNode2 = secondChildNode, ruleName = nonTerminalNode2.getRuleName(), ruleNameSpreadRuleName = ruleName === _ruleNames.SPREAD_RULE_NAME;
        if (ruleNameSpreadRuleName) {
          spreadNode2 = secondChildNode;
        }
        return spreadNode2;
      }) || null;
      return spreadNode;
    }
    function errorNodesFromExpressionNode(expressionNode) {
      var nonTerminalNode = expressionNode, errorNodes = nonTerminalNode.reduceChildNode(function(errorNodes2, childNode) {
        var childNodeNonTerminalNode = childNode.isNonTerminalNode();
        if (childNodeNonTerminalNode) {
          var nonTerminalNode2 = childNode, ruleName = nonTerminalNode2.getRuleName(), ruleNameErrorRuleName = ruleName === _ruleNames.ERROR_RULE_NAME;
          if (ruleNameErrorRuleName) {
            var errorNode = nonTerminalNode2;
            errorNodes2.push(errorNode);
          }
        }
        return errorNodes2;
      }, []);
      return errorNodes;
    }
    function subExpressionNodeFromExpressionNode(expressionNode) {
      var subExpressionNode = null;
      var nonTerminalNode = expressionNode, multiplicity = nonTerminalNode.getMultiplicity();
      if (multiplicity > 1) {
        subExpressionNode = fromLastChildNode(nonTerminalNode, function(lastChildNode) {
          var subExpressionNode2 = null;
          var nonTerminalNode2 = lastChildNode, ruleName = nonTerminalNode2.getRuleName(), ruleNameSubExpressionRuleName = ruleName === _ruleNames.SUB_EXPRESSION_RULE_NAME;
          if (ruleNameSubExpressionRuleName) {
            subExpressionNode2 = lastChildNode;
          }
          return subExpressionNode2;
        });
      }
      return subExpressionNode;
    }
    function pathNodeFromSubExpressionNode(subExpressionNode) {
      var nonTerminalNode = subExpressionNode, pathNode = fromFirstChildNode(nonTerminalNode, function(firstChildNode) {
        var pathNode2 = firstChildNode;
        return pathNode2;
      });
      return pathNode;
    }
    function spreadNodeFromSubExpressionNode(subExpressionNode) {
      var spreadNode = null;
      var nonTerminalNode = subExpressionNode, multiplicity = nonTerminalNode.getMultiplicity();
      if (multiplicity > 1) {
        spreadNode = fromSecondChildNode(nonTerminalNode, function(secondChildNode) {
          var spreadNode2 = null;
          var nonTerminalNode2 = secondChildNode, ruleName = nonTerminalNode2.getRuleName(), ruleNameSpreadRuleName = ruleName === _ruleNames.SPREAD_RULE_NAME;
          if (ruleNameSpreadRuleName) {
            spreadNode2 = secondChildNode;
          }
          return spreadNode2;
        }) || null;
      }
      return spreadNode;
    }
    function subExpressionNodeFromSubExpressionNode(subExpressionNode) {
      var nonTerminalNode = subExpressionNode;
      subExpressionNode = null;
      var multiplicity = nonTerminalNode.getMultiplicity();
      if (multiplicity > 1) {
        subExpressionNode = fromLastChildNode(nonTerminalNode, function(lastChildNode) {
          var _$subExpressionNode = null;
          var nonTerminalNoe = lastChildNode, ruleName = nonTerminalNoe.getRuleName(), ruleNameSubExpressionRuleName = ruleName === _ruleNames.SUB_EXPRESSION_RULE_NAME;
          if (ruleNameSubExpressionRuleName) {
            _$subExpressionNode = lastChildNode;
          }
          return _$subExpressionNode;
        });
      }
      return subExpressionNode;
    }
    function fromFirstChildNode(nonTerminalNode, callback) {
      var result;
      var firstIndex = 0;
      nonTerminalNode.forwardsSomeChildNode(function(childNode, index) {
        if (index === firstIndex) {
          var firstChildNode = childNode;
          result = callback(firstChildNode);
          return true;
        }
      });
      return result;
    }
    function fromSecondChildNode(nonTerminalNode, callback) {
      var result;
      var secondIndex = 1;
      nonTerminalNode.forwardsSomeChildNode(function(childNode, index) {
        if (index === secondIndex) {
          var firstChildNode = childNode;
          result = callback(firstChildNode);
          return true;
        }
      });
      return result;
    }
    function fromThirdChildNode(nonTerminalNode, callback) {
      var result;
      var thirdIndex = 2;
      nonTerminalNode.forwardsSomeChildNode(function(childNode, index) {
        if (index === thirdIndex) {
          var thirdChildNode = childNode;
          result = callback(thirdChildNode);
          return true;
        }
      });
      return result;
    }
    function fromLastChildNode(nonTerminalNode, callback) {
      var result;
      var multiplicity = nonTerminalNode.getMultiplicity(), lastIndex = multiplicity - 1;
      nonTerminalNode.backwardsSomeChildNode(function(childNode, index) {
        if (index === lastIndex) {
          var thirdChildNode = childNode;
          result = callback(thirdChildNode);
          return true;
        }
      });
      return result;
    }
  });

  // node_modules/occam-query/lib/path.js
  var require_path2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Path;
      }
    });
    var _node = require_node3();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Path = /* @__PURE__ */ function() {
      function Path2(ruleNames, tokenTypes, infiniteDescent) {
        _class_call_check(this, Path2);
        this.ruleNames = ruleNames;
        this.tokenTypes = tokenTypes;
        this.infiniteDescent = infiniteDescent;
      }
      _create_class(Path2, [
        {
          key: "getRuleNames",
          value: function getRuleNames() {
            return this.ruleNames;
          }
        },
        {
          key: "getTokenTypes",
          value: function getTokenTypes() {
            return this.tokenTypes;
          }
        },
        {
          key: "isInfiniteDescent",
          value: function isInfiniteDescent() {
            return this.infiniteDescent;
          }
        }
      ], [
        {
          key: "fromPathNode",
          value: function fromPathNode(pathNode) {
            var ruleNames = (0, _node.ruleNamesFromPathNode)(pathNode), tokenTypes = (0, _node.tokenTypesFromPathNode)(pathNode), infiniteDescent = (0, _node.infiniteDescentFromPathNode)(pathNode), path = new Path2(ruleNames, tokenTypes, infiniteDescent);
            return path;
          }
        }
      ]);
      return Path2;
    }();
  });

  // node_modules/occam-query/lib/utilities/array.js
  var require_array3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get clear() {
        return clear;
      },
      get fifth() {
        return fifth;
      },
      get first() {
        return first;
      },
      get fourth() {
        return fourth;
      },
      get includes() {
        return includes;
      },
      get last() {
        return last;
      },
      get push() {
        return push;
      },
      get second() {
        return second;
      },
      get third() {
        return third;
      },
      get trim() {
        return trim;
      }
    });
    var _necessary = require_browser();
    var clear = _necessary.arrayUtilities.clear;
    var push = _necessary.arrayUtilities.push;
    var first = _necessary.arrayUtilities.first;
    var second = _necessary.arrayUtilities.second;
    var third = _necessary.arrayUtilities.third;
    var fourth = _necessary.arrayUtilities.fourth;
    var fifth = _necessary.arrayUtilities.fifth;
    var last = _necessary.arrayUtilities.last;
    function trim(array, startIndex, endIndex) {
      if (startIndex < 0) {
        var length = array.length;
        startIndex = length + startIndex;
        endIndex = length + endIndex;
      }
      if (endIndex !== Infinity) {
        var start = endIndex + 1;
        array.splice(start);
      }
      var start1 = 0, deleteCount = startIndex;
      array.splice(start1, deleteCount);
    }
    function includes(array) {
      for (var _len = arguments.length, elements = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        elements[_key - 1] = arguments[_key];
      }
      return elements.some(function(element) {
        return array.includes(element);
      });
    }
  });

  // node_modules/occam-query/lib/spread.js
  var require_spread = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Spread;
      }
    });
    var _necessary = require_browser();
    var _array = require_array3();
    var _node = require_node3();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var EXCLAMATION_MARK_CHARACTER = _necessary.characters.EXCLAMATION_MARK_CHARACTER;
    var Spread = /* @__PURE__ */ function() {
      function Spread2(startIndex, endIndex, unique) {
        _class_call_check(this, Spread2);
        this.startIndex = startIndex;
        this.endIndex = endIndex;
        this.unique = unique;
      }
      _create_class(Spread2, [
        {
          key: "adjustNodes",
          value: function adjustNodes(nodes) {
            if (this.unique) {
              var nodesLength = nodes.length;
              if (nodesLength > 1) {
                (0, _array.clear)(nodes);
              }
            } else {
              (0, _array.trim)(nodes, this.startIndex, this.endIndex);
            }
          }
        }
      ], [
        {
          key: "fromNothing",
          value: function fromNothing() {
            var startIndex = 0, endIndex = Infinity, unique = false, spread = new Spread2(startIndex, endIndex, unique);
            return spread;
          }
        },
        {
          key: "fromSpreadNode",
          value: function fromSpreadNode(spreadNode) {
            var startIndex = 0, endIndex = Infinity, unique = false;
            if (spreadNode !== null) {
              var index = (0, _node.indexFromSpreadNode)(spreadNode);
              if (index !== null) {
                startIndex = index;
                endIndex = index;
              } else {
                startIndex = (0, _node.startIndexFromSpreadNode)(spreadNode);
                endIndex = (0, _node.endIndexFromSpreadNode)(spreadNode);
              }
              unique = (0, _node.uniqueFromSpreadNode)(spreadNode);
            }
            var spread = new Spread2(startIndex, endIndex, unique);
            return spread;
          }
        },
        {
          key: "fromSpreadExpression",
          value: function fromSpreadExpression(spreadExpression) {
            var startIndex = 0, endIndex = Infinity, unique = false;
            if (spreadExpression !== null) {
              if (spreadExpression === EXCLAMATION_MARK_CHARACTER) {
                unique = true;
              } else {
                var regExp = /\[(-?\d+)?(\.\.\.)?(-?\d+)?]/, matches = spreadExpression.match(regExp), secondMatch = (0, _array.second)(matches) || null, thirdMatch = (0, _array.third)(matches) || null, fourthMatch = (0, _array.fourth)(matches) || null;
                if (secondMatch !== null) {
                  startIndex = parseInt(secondMatch);
                  if (thirdMatch === null) {
                    endIndex = startIndex;
                  }
                }
                if (fourthMatch !== null) {
                  endIndex = parseInt(fourthMatch);
                  if (thirdMatch === null) {
                    startIndex = endIndex;
                  }
                }
              }
            }
            var spread = new Spread2(startIndex, endIndex, unique);
            return spread;
          }
        }
      ]);
      return Spread2;
    }();
  });

  // node_modules/occam-query/lib/subExpression.js
  var require_subExpression = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return SubExpression;
      }
    });
    var _path = /* @__PURE__ */ _interop_require_default(require_path2());
    var _spread = /* @__PURE__ */ _interop_require_default(require_spread());
    var _node = require_node3();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var SubExpression = /* @__PURE__ */ function() {
      function SubExpression2(path, spread, subExpression) {
        _class_call_check(this, SubExpression2);
        this.path = path;
        this.spread = spread;
        this.subExpression = subExpression;
      }
      _create_class(SubExpression2, [
        {
          key: "getPath",
          value: function getPath() {
            return this.path;
          }
        },
        {
          key: "getSpread",
          value: function getSpread() {
            return this.spread;
          }
        },
        {
          key: "getSubExpression",
          value: function getSubExpression() {
            return this.subExpression;
          }
        },
        {
          key: "getRuleNames",
          value: function getRuleNames() {
            return this.path.getRuleNames();
          }
        },
        {
          key: "getTokenTypes",
          value: function getTokenTypes() {
            return this.path.getTokenTypes();
          }
        },
        {
          key: "isInfiniteDescent",
          value: function isInfiniteDescent() {
            return this.path.isInfiniteDescent();
          }
        }
      ], [
        {
          key: "fromSubExpressionNode",
          value: function fromSubExpressionNode(subExpressionNode) {
            var subExpression = null;
            if (subExpressionNode !== null) {
              var pathNode = (0, _node.pathNodeFromSubExpressionNode)(subExpressionNode), spreadNode = (0, _node.spreadNodeFromSubExpressionNode)(subExpressionNode);
              subExpressionNode = (0, _node.subExpressionNodeFromSubExpressionNode)(subExpressionNode);
              var path = _path.default.fromPathNode(pathNode), spread = _spread.default.fromSpreadNode(spreadNode);
              subExpression = SubExpression2.fromSubExpressionNode(subExpressionNode);
              subExpression = new SubExpression2(path, spread, subExpression);
            }
            return subExpression;
          }
        }
      ]);
      return SubExpression2;
    }();
  });

  // node_modules/occam-query/lib/expression/entries.js
  var require_entries4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var entries = [
      {
        special: "^(?:@|!|\\*|\\||\\/|\\[|\\]|\\.\\.\\.)"
      },
      {
        name: "^[a-zA-Z-]+"
      },
      {
        number: "^[0-9]+"
      },
      {
        unassigned: "^."
      }
    ];
    var _default = entries;
  });

  // node_modules/occam-query/lib/expression/lexer.js
  var require_lexer6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return ExpressionLexer;
      }
    });
    var _occamlexers = require_lib3();
    var _entries = /* @__PURE__ */ _interop_require_default(require_entries4());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var ExpressionLexer = /* @__PURE__ */ function(CommonLexer) {
      _inherits(ExpressionLexer2, CommonLexer);
      function ExpressionLexer2() {
        _class_call_check(this, ExpressionLexer2);
        return _call_super(this, ExpressionLexer2, arguments);
      }
      _create_class(ExpressionLexer2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamlexers.CommonLexer.fromNothing(ExpressionLexer2);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamlexers.CommonLexer.fromRules(ExpressionLexer2, rules);
          }
        },
        {
          key: "fromEntries",
          value: function fromEntries(entries) {
            return _occamlexers.CommonLexer.fromEntries(ExpressionLexer2, entries);
          }
        }
      ]);
      return ExpressionLexer2;
    }(_occamlexers.CommonLexer);
    _define_property(ExpressionLexer, "entries", _entries.default);
    _define_property(ExpressionLexer, "EndOfLineToken", _occamlexers.EndOfLineSignificantToken);
    _define_property(ExpressionLexer, "WhitespaceToken", _occamlexers.WhitespaceToken);
    _define_property(ExpressionLexer, "EndOfLineCommentToken", null);
    _define_property(ExpressionLexer, "SingleLineCommentToken", null);
    _define_property(ExpressionLexer, "RegularExpressionToken", null);
    _define_property(ExpressionLexer, "EndOfMultiLineCommentToken", null);
    _define_property(ExpressionLexer, "StartOfMultiLineCommentToken", null);
    _define_property(ExpressionLexer, "MiddleOfMultiLineCommentToken", null);
    _define_property(ExpressionLexer, "SinglyQuotedStringLiteralToken", null);
    _define_property(ExpressionLexer, "DoublyQuotedStringLiteralToken", null);
  });

  // node_modules/occam-query/lib/expression/bnf.js
  var require_bnf5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var bnf = '\n\n    expression       ::=  path spread? subExpression?   \n    \n                       |  error+ \n                                 \n                       ;\n  \n    path             ::=  "/" infiniteDescent? selectors ;\n    \n    subExpression    ::=  path spread? subExpression?;\n\n    infiniteDescent  ::=  "/" ;\n    \n    selectors        ::=  selector ( "|" selector )* ;\n\n    spread           ::=  unique\n    \n                       |  "[" \n\n                          ( \n                            \n                            ( startIndex "..." endIndex ) \n                            \n                            | \n                            \n                            ( startIndex "..." ) \n                            \n                            | \n                            \n                            ( "..." endIndex )\n                             \n                            | \n                            \n                            index \n                            \n                          )  \n                          \n                          "]" ;\n\n    selector         ::=  ruleName | tokenType ;\n                       \n    ruleName         ::=  [name] | "*" ;\n                       \n    tokenType        ::=  "@"<NO_WHITESPACE>( [name] | "*" ) ;\n                       \n    startIndex       ::=  [number] ;\n                       \n    endIndex         ::=  [number] ;\n                       \n    index            ::=  [number] ;\n                       \n    unique           ::=  "!" ;\n                       \n\n\n    error.           ::=  . ;\n    \n';
    var _default = bnf;
  });

  // node_modules/occam-query/lib/expression/parser.js
  var require_parser7 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return ExpressionParser;
      }
    });
    var _occamparsers = require_lib4();
    var _bnf = /* @__PURE__ */ _interop_require_default(require_bnf5());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var ExpressionParser = /* @__PURE__ */ function(CommonParser) {
      _inherits(ExpressionParser2, CommonParser);
      function ExpressionParser2() {
        _class_call_check(this, ExpressionParser2);
        return _call_super(this, ExpressionParser2, arguments);
      }
      _create_class(ExpressionParser2, null, [
        {
          key: "fromNothing",
          value: function fromNothing() {
            return _occamparsers.CommonParser.fromNothing(ExpressionParser2);
          }
        },
        {
          key: "fromBNF",
          value: function fromBNF(bnf) {
            return _occamparsers.CommonParser.fromBNF(ExpressionParser2, bnf);
          }
        },
        {
          key: "fromRules",
          value: function fromRules(rules) {
            return _occamparsers.CommonParser.fromRules(ExpressionParser2, rules);
          }
        }
      ]);
      return ExpressionParser2;
    }(_occamparsers.CommonParser);
    _define_property(ExpressionParser, "bnf", _bnf.default);
  });

  // node_modules/occam-query/lib/expression.js
  var require_expression = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Expression;
      }
    });
    var _path = /* @__PURE__ */ _interop_require_default(require_path2());
    var _spread = /* @__PURE__ */ _interop_require_default(require_spread());
    var _subExpression = /* @__PURE__ */ _interop_require_default(require_subExpression());
    var _lexer = /* @__PURE__ */ _interop_require_default(require_lexer6());
    var _parser = /* @__PURE__ */ _interop_require_default(require_parser7());
    var _node = require_node3();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var expressionLexer = _lexer.default.fromNothing();
    var expressionParser = _parser.default.fromNothing();
    var Expression = /* @__PURE__ */ function() {
      function Expression2(path, spread, subExpression) {
        _class_call_check(this, Expression2);
        this.path = path;
        this.spread = spread;
        this.subExpression = subExpression;
      }
      _create_class(Expression2, [
        {
          key: "getPath",
          value: function getPath() {
            return this.path;
          }
        },
        {
          key: "getSpread",
          value: function getSpread() {
            return this.spread;
          }
        },
        {
          key: "getSubExpression",
          value: function getSubExpression() {
            return this.subExpression;
          }
        },
        {
          key: "getRuleNames",
          value: function getRuleNames() {
            return this.path.getRuleNames();
          }
        },
        {
          key: "getTokenTypes",
          value: function getTokenTypes() {
            return this.path.getTokenTypes();
          }
        },
        {
          key: "isInfiniteDescent",
          value: function isInfiniteDescent() {
            return this.path.isInfiniteDescent();
          }
        }
      ], [
        {
          key: "fromExpressionNode",
          value: function fromExpressionNode(expressionNode) {
            var pathNode = (0, _node.pathNodeFromExpressionNode)(expressionNode), spreadNode = (0, _node.spreadNodeFromExpressionNode)(expressionNode), subExpressionNode = (0, _node.subExpressionNodeFromExpressionNode)(expressionNode), path = _path.default.fromPathNode(pathNode), spread = _spread.default.fromSpreadNode(spreadNode), subExpression = _subExpression.default.fromSubExpressionNode(subExpressionNode), expression = new Expression2(path, spread, subExpression);
            return expression;
          }
        },
        {
          key: "fromExpressionString",
          value: function fromExpressionString(expressionString) {
            var expression = null;
            var lexer = expressionLexer, parser = expressionParser, content = expressionString, tokens = lexer.tokenise(content), node = parser.parse(tokens);
            if (node !== null) {
              var expressionNode = node, errorNodes = (0, _node.errorNodesFromExpressionNode)(expressionNode), errorNodesLength = errorNodes.length;
              if (errorNodesLength === 0) {
                var pathNode = (0, _node.pathNodeFromExpressionNode)(expressionNode), spreadNode = (0, _node.spreadNodeFromExpressionNode)(expressionNode), subExpressionNode = (0, _node.subExpressionNodeFromExpressionNode)(expressionNode), path = _path.default.fromPathNode(pathNode), spread = _spread.default.fromSpreadNode(spreadNode), subExpression = _subExpression.default.fromSubExpressionNode(subExpressionNode);
                expression = new Expression2(path, spread, subExpression);
              }
            }
            return expression;
          }
        }
      ]);
      return Expression2;
    }();
  });

  // node_modules/occam-query/lib/query.js
  var require_query = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Query;
      }
    });
    var _necessary = require_browser();
    var _expression = /* @__PURE__ */ _interop_require_default(require_expression());
    var _array = require_array3();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var WILDCARD_CHARACTER = _necessary.characters.WILDCARD_CHARACTER;
    var Query = /* @__PURE__ */ function() {
      function Query2(spread, subQuery, ruleNames, tokenTypes, maximumDepth, infiniteDescent, intermediateNodes) {
        _class_call_check(this, Query2);
        this.spread = spread;
        this.subQuery = subQuery;
        this.ruleNames = ruleNames;
        this.tokenTypes = tokenTypes;
        this.maximumDepth = maximumDepth;
        this.infiniteDescent = infiniteDescent;
        this.intermediateNodes = intermediateNodes;
      }
      _create_class(Query2, [
        {
          key: "getSpread",
          value: function getSpread() {
            return this.sprea;
          }
        },
        {
          key: "getSubQuery",
          value: function getSubQuery() {
            return this.subQuery;
          }
        },
        {
          key: "getRuleNames",
          value: function getRuleNames() {
            return this.ruleNames;
          }
        },
        {
          key: "getTokenTypes",
          value: function getTokenTypes() {
            return this.tokenTypes;
          }
        },
        {
          key: "getMaximumDepth",
          value: function getMaximumDepth() {
            return this.maximumDepth;
          }
        },
        {
          key: "isInfiniteDescent",
          value: function isInfiniteDescent() {
            return this.infiniteDescent;
          }
        },
        {
          key: "getIntermediateNodes",
          value: function getIntermediateNodes() {
            return this.intermediateNodes;
          }
        },
        {
          key: "execute",
          value: function execute(node) {
            var depth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, maximumDepth = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.maximumDepth;
            var nodes = [];
            this.clear();
            this.find(node, depth, maximumDepth);
            this.apply(nodes, depth, maximumDepth);
            return nodes;
          }
        },
        {
          key: "clear",
          value: function clear() {
            (0, _array.clear)(this.intermediateNodes);
          }
        },
        {
          key: "find",
          value: function find(node, depth, maximumDepth) {
            var _this = this;
            if (depth > maximumDepth) {
              return;
            }
            var nodeTerminalNode = node.isTerminalNode(), nodeNonTerminalNode = !nodeTerminalNode;
            var found;
            if (nodeTerminalNode) {
              var terminalNode = node, types = this.tokenTypes, type = terminalNode.getType();
              found = (0, _array.includes)(types, type, WILDCARD_CHARACTER);
            }
            if (nodeNonTerminalNode) {
              var nonTerminalNode = node, ruleName = nonTerminalNode.getRuleName();
              found = (0, _array.includes)(this.ruleNames, ruleName, WILDCARD_CHARACTER);
            }
            if (found) {
              var intermediateNode = node;
              this.intermediateNodes.push(intermediateNode);
            }
            if (this.infiniteDescent) {
              if (nodeNonTerminalNode) {
                depth++;
                var nonTerminalNode1 = node;
                nonTerminalNode1.forEachChildNode(function(childNode) {
                  _this.find(childNode, depth, maximumDepth);
                });
              }
            }
          }
        },
        {
          key: "apply",
          value: function apply(nodes, depth, maximumDepth) {
            var _this = this;
            this.spread.adjustNodes(this.intermediateNodes);
            if (this.subQuery === null) {
              (0, _array.push)(nodes, this.intermediateNodes);
            } else {
              this.intermediateNodes.forEach(function(intermediateNode) {
                var intermediateNodeNonTerminalNode = intermediateNode.isNonTerminalNode();
                if (intermediateNodeNonTerminalNode) {
                  depth++;
                  var nonTerminalNode = intermediateNode;
                  _this.subQuery.clear();
                  nonTerminalNode.forEachChildNode(function(childNode) {
                    _this.subQuery.find(childNode, depth, maximumDepth);
                  });
                  _this.subQuery.apply(nodes, depth, maximumDepth);
                }
              });
            }
          }
        }
      ], [
        {
          key: "fromExpression",
          value: function fromExpression(expression) {
            var maximumDepth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
            var spread = expression.getSpread(), subQuery = subQueryFromExpression(expression), ruleNames = expression.getRuleNames(), tokenTypes = expression.getTokenTypes(), infiniteDescent = expression.isInfiniteDescent(), intermediateNodes = [], query = new Query2(spread, subQuery, ruleNames, tokenTypes, maximumDepth, infiniteDescent, intermediateNodes);
            return query;
          }
        },
        {
          key: "fromSubExpression",
          value: function fromSubExpression(subExpression) {
            var spread = subExpression.getSpread(), subQuery = subQueryFromSubExpression(subExpression), ruleNames = subExpression.getRuleNames(), tokenTypes = subExpression.getTokenTypes(), maximumDepth = Infinity, infiniteDescent = subExpression.isInfiniteDescent(), intermediateNodes = [], query = new Query2(spread, subQuery, ruleNames, tokenTypes, maximumDepth, infiniteDescent, intermediateNodes);
            return query;
          }
        },
        {
          key: "fromExpressionString",
          value: function fromExpressionString(expressionString) {
            var maximumDepth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
            var query = null;
            var expression = _expression.default.fromExpressionString(expressionString);
            if (expression !== null) {
              var spread = expression.getSpread(), subQuery = subQueryFromExpression(expression), ruleNames = expression.getRuleNames(), tokenTypes = expression.getTokenTypes(), infiniteDescent = expression.isInfiniteDescent(), intermediateNodes = [];
              query = new Query2(spread, subQuery, ruleNames, tokenTypes, maximumDepth, infiniteDescent, intermediateNodes);
            }
            return query;
          }
        }
      ]);
      return Query2;
    }();
    function subQueryFromExpression(expression) {
      var subQuery = null;
      var subExpression = expression.getSubExpression();
      if (subExpression !== null) {
        var query = Query.fromSubExpression(subExpression);
        subQuery = query;
      }
      return subQuery;
    }
    function subQueryFromSubExpression(subExpression) {
      var subQuery = null;
      subExpression = subExpression.getSubExpression();
      if (subExpression !== null) {
        var query = Query.fromSubExpression(subExpression);
        subQuery = query;
      }
      return subQuery;
    }
  });

  // node_modules/occam-query/lib/utilities/query.js
  var require_query2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return _default;
      },
      get queryByExpressionString() {
        return queryByExpressionString;
      }
    });
    var _query = /* @__PURE__ */ _interop_require_default(require_query());
    var _expression = /* @__PURE__ */ _interop_require_default(require_expression());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function queryByExpressionString(node, expressionString, maximumDepth) {
      var nodes = null;
      var expression = _expression.default.fromExpressionString(expressionString);
      if (expression !== null) {
        var query = _query.default.fromExpression(expression, maximumDepth);
        nodes = query.execute(node);
      }
      return nodes;
    }
    var _default = {
      queryByExpressionString
    };
  });

  // node_modules/occam-query/lib/index.js
  var require_lib5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get Expression() {
        return _expression.default;
      },
      get ExpressionLexer() {
        return _lexer.default;
      },
      get ExpressionParser() {
        return _parser.default;
      },
      get Query() {
        return _query.default;
      },
      get queryUtilities() {
        return _query1.default;
      }
    });
    var _query = /* @__PURE__ */ _interop_require_default(require_query());
    var _expression = /* @__PURE__ */ _interop_require_default(require_expression());
    var _query1 = /* @__PURE__ */ _interop_require_default(require_query2());
    var _lexer = /* @__PURE__ */ _interop_require_default(require_lexer6());
    var _parser = /* @__PURE__ */ _interop_require_default(require_parser7());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // node_modules/with-style/lib/constants.js
  var require_constants5 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      CHARACTERS: function() {
        return CHARACTERS;
      },
      CLASS_NAME_LENGTH: function() {
        return CLASS_NAME_LENGTH;
      },
      EMPTY_STRING: function() {
        return EMPTY_STRING;
      },
      HEAD: function() {
        return HEAD;
      },
      STYLE: function() {
        return STYLE;
      },
      TWO_SPACES: function() {
        return TWO_SPACES;
      }
    });
    var HEAD = "head";
    var STYLE = "style";
    var CHARACTERS = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
    var TWO_SPACES = "  ";
    var EMPTY_STRING = "";
    var CLASS_NAME_LENGTH = 6;
  });

  // node_modules/with-style/lib/utilities/content.js
  var require_content2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "contentFromQueryNodeAndTokens", {
      enumerable: true,
      get: function() {
        return contentFromQueryNodeAndTokens;
      }
    });
    var _necessary = require_browser();
    var _constants = require_constants5();
    var first = _necessary.arrayUtilities.first;
    function contentFromQueryNodeAndTokens(query, node, tokens) {
      var content = null;
      var nodes = query.execute(node), nodesLength = nodes.length;
      if (nodesLength > 0) {
        var firstNode = first(nodes);
        node = firstNode;
        content = contentFromNodeAndTokens(node, tokens);
      }
      return content;
    }
    function contentFromNodeAndTokens(node, tokens) {
      var firstSignificantTokenIndex = node.getFirstSignificantTokenIndex(tokens), lastSignificantTokenIndex = node.getLastSignificantTokenIndex(tokens);
      var content = _constants.EMPTY_STRING;
      for (var index = firstSignificantTokenIndex; index <= lastSignificantTokenIndex; index++) {
        var token = tokens[index], tokenContent = token.getContent();
        content += tokenContent;
      }
      return content;
    }
  });

  // node_modules/with-style/lib/style/declaration.js
  var require_declaration = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Declaration;
      }
    });
    var _occamquery = require_lib5();
    var _constants = require_constants5();
    var _content = require_content2();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var importantQuery = _occamquery.Query.fromExpressionString("/*/important");
    var propertyNameQuery = _occamquery.Query.fromExpressionString("/*/propertyName");
    var propertyValuesQuery = _occamquery.Query.fromExpressionString("/*/propertyValues");
    var Declaration = /* @__PURE__ */ function() {
      function Declaration2(propertyValues, propertyName, important) {
        _class_call_check(this, Declaration2);
        this.propertyValues = propertyValues;
        this.propertyName = propertyName;
        this.important = important;
      }
      _create_class(Declaration2, [
        {
          key: "getPropertyValues",
          value: function getPropertyValues() {
            return this.propertyValues;
          }
        },
        {
          key: "getPropertyName",
          value: function getPropertyName() {
            return this.propertyName;
          }
        },
        {
          key: "getImportant",
          value: function getImportant() {
            return this.important;
          }
        },
        {
          key: "matchPropertyName",
          value: function matchPropertyName(propertyName) {
            var matches = this.propertyName === propertyName;
            return matches;
          }
        },
        {
          key: "matchDeclaration",
          value: function matchDeclaration(declaration) {
            var propertyName = declaration.getPropertyName(), matches = this.matchPropertyName(propertyName);
            return matches;
          }
        },
        {
          key: "matchDeclarations",
          value: function matchDeclarations(declarations) {
            var _this = this;
            var matches = declarations.someDeclaration(function(declaration) {
              var matches2 = _this.matchDeclaration(declaration);
              if (matches2) {
                return true;
              }
            });
            return matches;
          }
        },
        {
          key: "asCSS",
          value: function asCSS(indent) {
            indent = indent + _constants.TWO_SPACES;
            var css = "".concat(indent).concat(this.propertyName, ": ").concat(this.propertyValues).concat(this.important, ";\n");
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node, tokens) {
            var propertyValuesContent = (0, _content.contentFromQueryNodeAndTokens)(propertyValuesQuery, node, tokens), propertyNameContent = (0, _content.contentFromQueryNodeAndTokens)(propertyNameQuery, node, tokens), importantContent = (0, _content.contentFromQueryNodeAndTokens)(importantQuery, node, tokens), propertyValues = propertyValuesContent, propertyName = propertyNameContent, important = importantContent === null ? _constants.EMPTY_STRING : " ".concat(importantContent), declaration = new Declaration2(propertyValues, propertyName, important);
            return declaration;
          }
        }
      ]);
      return Declaration2;
    }();
  });

  // node_modules/with-style/lib/style/declarations.js
  var require_declarations = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Declarations;
      }
    });
    var _occamquery = require_lib5();
    var _necessary = require_browser();
    var _declaration = /* @__PURE__ */ _interop_require_default(require_declaration());
    var _constants = require_constants5();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var forwardsForEach = _necessary.arrayUtilities.forwardsForEach;
    var backwardsForEach = _necessary.arrayUtilities.backwardsForEach;
    var declarationQuery = _occamquery.Query.fromExpressionString("/*/declaration");
    var Declarations = /* @__PURE__ */ function() {
      function Declarations2(array) {
        _class_call_check(this, Declarations2);
        this.array = array;
      }
      _create_class(Declarations2, [
        {
          key: "someDeclaration",
          value: function someDeclaration(callback) {
            return this.array.some(callback);
          }
        },
        {
          key: "forwardsForEachDeclaration",
          value: function forwardsForEachDeclaration(callback) {
            forwardsForEach(this.array, callback);
          }
        },
        {
          key: "backwardsForEachDeclaration",
          value: function backwardsForEachDeclaration(callback) {
            backwardsForEach(this.array, callback);
          }
        },
        {
          key: "unshift",
          value: function unshift(declarations) {
            var _this = this;
            declarations.backwardsForEachDeclaration(function(declaration) {
              var matches = declaration.matchDeclarations(_this);
              if (!matches) {
                _this.array.unshift(declaration);
              }
            });
          }
        },
        {
          key: "asCSS",
          value: function asCSS(className, indent) {
            var declarationsCSS = this.array.reduce(function(declarationsCSS2, declaration) {
              var declarationCSS = declaration.asCSS(indent);
              declarationsCSS2 += declarationCSS;
              return declarationsCSS2;
            }, _constants.EMPTY_STRING), css = className === null ? declarationsCSS : "".concat(indent, ".").concat(className, " {\n").concat(declarationsCSS).concat(indent, "}\n\n");
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node, tokens) {
            var declarationNodes = declarationQuery.execute(node), array = declarationNodes.map(function(declarationNode) {
              var _$node = declarationNode, declaration = _declaration.default.fromNodeAndTokens(_$node, tokens);
              return declaration;
            }), declarations = new Declarations2(array);
            return declarations;
          }
        }
      ]);
      return Declarations2;
    }();
  });

  // node_modules/with-style/lib/style/ruleSet.js
  var require_ruleSet = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RuleSet;
      }
    });
    var _occamquery = require_lib5();
    var _declarations = /* @__PURE__ */ _interop_require_default(require_declarations());
    var _constants = require_constants5();
    var _content = require_content2();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var selectorsQuery = _occamquery.Query.fromExpressionString("//selectors");
    var RuleSet = /* @__PURE__ */ function() {
      function RuleSet2(selectors, declarations) {
        _class_call_check(this, RuleSet2);
        this.selectors = selectors;
        this.declarations = declarations;
      }
      _create_class(RuleSet2, [
        {
          key: "getSelectors",
          value: function getSelectors() {
            return this.selectors;
          }
        },
        {
          key: "getDeclarations",
          value: function getDeclarations() {
            return this.declarations;
          }
        },
        {
          key: "unshift",
          value: function unshift(ruleSet) {
            var declarations = ruleSet.getDeclarations();
            this.declarations.unshift(declarations);
          }
        },
        {
          key: "findMatchingRuleSet",
          value: function findMatchingRuleSet(ruleSets) {
            var _this = this;
            var matchingRuleSet = ruleSets.find(function(ruleSet) {
              var selectors = ruleSet.getSelectors(), selectorsMatch = selectors === _this.selectors, ruleSetsMatch = selectorsMatch;
              if (ruleSetsMatch) {
                return true;
              }
            }) || null;
            return matchingRuleSet;
          }
        },
        {
          key: "asCSS",
          value: function asCSS(className, indent) {
            var css = _constants.EMPTY_STRING;
            var declarationsCSS = this.declarations.asCSS(null, indent);
            if (declarationsCSS !== _constants.EMPTY_STRING) {
              css = "".concat(indent, ".").concat(className).concat(this.selectors, " {\n").concat(declarationsCSS).concat(indent, "}\n\n");
            }
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node, tokens) {
            var selectors = selectorsFromNodeAndTokens(node, tokens), declarations = _declarations.default.fromNodeAndTokens(node, tokens), ruleSet = new RuleSet2(selectors, declarations);
            return ruleSet;
          }
        }
      ]);
      return RuleSet2;
    }();
    function selectorsFromNodeAndTokens(node, tokens) {
      var selectorsNodeContent = (0, _content.contentFromQueryNodeAndTokens)(selectorsQuery, node, tokens), selectors = "".concat(selectorsNodeContent);
      return selectors;
    }
  });

  // node_modules/with-style/lib/style/ruleSets.js
  var require_ruleSets = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return RuleSets;
      }
    });
    var _occamquery = require_lib5();
    var _ruleSet = /* @__PURE__ */ _interop_require_default(require_ruleSet());
    var _constants = require_constants5();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var ruleSetQuery = _occamquery.Query.fromExpressionString("/*/ruleSet");
    var RuleSets = /* @__PURE__ */ function() {
      function RuleSets2(array) {
        _class_call_check(this, RuleSets2);
        this.array = array;
      }
      _create_class(RuleSets2, [
        {
          key: "unshift",
          value: function unshift(ruleSets) {
            var _this = this;
            ruleSets.forEach(function(ruleSet) {
              var matchingRuleSet = ruleSet.findMatchingRuleSet(_this.array);
              matchingRuleSet === null ? _this.array.unshift(ruleSet) : matchingRuleSet.unshift(ruleSet);
            });
          }
        },
        {
          key: "forEach",
          value: function forEach(callback) {
            this.array.forEach(callback);
          }
        },
        {
          key: "asCSS",
          value: function asCSS(className, indent) {
            var css = this.array.reduce(function(css2, ruleSet) {
              var ruleSetCSS = ruleSet.asCSS(className, indent);
              css2 += ruleSetCSS;
              return css2;
            }, _constants.EMPTY_STRING);
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node, tokens) {
            var ruleSetNodes = ruleSetQuery.execute(node), array = ruleSetNodes.map(function(ruleSetNode) {
              var _$node = ruleSetNode, ruleSet = _ruleSet.default.fromNodeAndTokens(_$node, tokens);
              return ruleSet;
            }), ruleSets = new RuleSets2(array);
            return ruleSets;
          }
        }
      ]);
      return RuleSets2;
    }();
  });

  // node_modules/with-style/lib/utilities/string.js
  var require_string4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "trim", {
      enumerable: true,
      get: function() {
        return trim;
      }
    });
    var _constants = require_constants5();
    function trim(string) {
      string = string.replace(/[\n\r]$/g, _constants.EMPTY_STRING);
      return string;
    }
  });

  // node_modules/with-style/lib/style/media.js
  var require_media = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Media;
      }
    });
    var _occamquery = require_lib5();
    var _ruleSets = /* @__PURE__ */ _interop_require_default(require_ruleSets());
    var _declarations = /* @__PURE__ */ _interop_require_default(require_declarations());
    var _string = require_string4();
    var _constants = require_constants5();
    var _content = require_content2();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var queriesQuery = _occamquery.Query.fromExpressionString("/media/mediaQueries");
    var Media = /* @__PURE__ */ function() {
      function Media2(declarations, ruleSets, queries) {
        _class_call_check(this, Media2);
        this.declarations = declarations;
        this.ruleSets = ruleSets;
        this.queries = queries;
      }
      _create_class(Media2, [
        {
          key: "getDeclarations",
          value: function getDeclarations() {
            return this.declarations;
          }
        },
        {
          key: "getRuleSets",
          value: function getRuleSets() {
            return this.ruleSets;
          }
        },
        {
          key: "getQueries",
          value: function getQueries() {
            return this.queries;
          }
        },
        {
          key: "asCSS",
          value: function asCSS(className, indent) {
            indent = indent + _constants.TWO_SPACES;
            var css = _constants.EMPTY_STRING;
            var ruleSetsCSS = this.ruleSets.asCSS(className, indent), declarationsCSS = this.declarations.asCSS(className, indent);
            var ruleSetsDeclarationsCSS = "".concat(declarationsCSS).concat(ruleSetsCSS);
            if (ruleSetsDeclarationsCSS !== _constants.EMPTY_STRING) {
              ruleSetsDeclarationsCSS = (0, _string.trim)(ruleSetsDeclarationsCSS);
              css = "@media ".concat(this.queries, " {\n").concat(ruleSetsDeclarationsCSS, "}\n\n");
            }
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node, tokens) {
            var declarations = _declarations.default.fromNodeAndTokens(node, tokens), ruleSets = _ruleSets.default.fromNodeAndTokens(node, tokens), queries = queriesFromNodeAndTokens(node, tokens), media = new Media2(declarations, ruleSets, queries);
            return media;
          }
        }
      ]);
      return Media2;
    }();
    function queriesFromNodeAndTokens(node, tokens) {
      var queriesNodeContent = (0, _content.contentFromQueryNodeAndTokens)(queriesQuery, node, tokens), queries = "".concat(queriesNodeContent);
      return queries;
    }
  });

  // node_modules/with-style/lib/style/medias.js
  var require_medias = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Medias;
      }
    });
    var _occamquery = require_lib5();
    var _media = /* @__PURE__ */ _interop_require_default(require_media());
    var _constants = require_constants5();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var mediaQuery = _occamquery.Query.fromExpressionString("/stylesheet/media");
    var Medias = /* @__PURE__ */ function() {
      function Medias2(array) {
        _class_call_check(this, Medias2);
        this.array = array;
      }
      _create_class(Medias2, [
        {
          key: "unshift",
          value: function unshift(medias) {
            var _this = this;
            medias.forEach(function(media) {
              _this.array.unshift(media);
            });
          }
        },
        {
          key: "forEach",
          value: function forEach(callback) {
            this.array.forEach(callback);
          }
        },
        {
          key: "asCSS",
          value: function asCSS(className, indent) {
            var css = this.array.reduce(function(css2, media) {
              var mediaCSS = media.asCSS(className, indent);
              css2 += mediaCSS;
              return css2;
            }, _constants.EMPTY_STRING);
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node, tokens) {
            var mediaNodes = mediaQuery.execute(node), array = mediaNodes.map(function(mediaNode) {
              var _$node = mediaNode, media = _media.default.fromNodeAndTokens(_$node, tokens);
              return media;
            }), medias = new Medias2(array);
            return medias;
          }
        }
      ]);
      return Medias2;
    }();
  });

  // node_modules/with-style/lib/style/keyframe.js
  var require_keyframe = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Keyframe;
      }
    });
    var _occamquery = require_lib5();
    var _necessary = require_browser();
    var _declaration = /* @__PURE__ */ _interop_require_default(require_declaration());
    var _content = require_content2();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var percentageQuery = _occamquery.Query.fromExpressionString("/*/@percentage");
    var declarationQuery = _occamquery.Query.fromExpressionString("/*/declaration");
    var first = _necessary.arrayUtilities.first;
    var Keyframe = /* @__PURE__ */ function() {
      function Keyframe2(percentage, declaration) {
        _class_call_check(this, Keyframe2);
        this.percentage = percentage;
        this.declaration = declaration;
      }
      _create_class(Keyframe2, [
        {
          key: "getPercentage",
          value: function getPercentage() {
            return this.percentage;
          }
        },
        {
          key: "getDeclaration",
          value: function getDeclaration() {
            return this.declaration;
          }
        },
        {
          key: "asCSS",
          value: function asCSS(indent) {
            var declarationCSS = this.declaration.asCSS(indent), css = "".concat(indent).concat(this.percentage, " { \n").concat(declarationCSS).concat(indent, "}\n");
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node, tokens) {
            var percentageContent = (0, _content.contentFromQueryNodeAndTokens)(percentageQuery, node, tokens), percentage = percentageContent, declarationNodes = declarationQuery.execute(node), firstDeclarationNode = first(declarationNodes), declarationNode = firstDeclarationNode;
            node = declarationNode;
            var declaration = _declaration.default.fromNodeAndTokens(node, tokens), keyframe = new Keyframe2(percentage, declaration);
            return keyframe;
          }
        }
      ]);
      return Keyframe2;
    }();
  });

  // node_modules/with-style/lib/style/keyframes.js
  var require_keyframes = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Keyframes;
      }
    });
    var _occamquery = require_lib5();
    var _keyframe = /* @__PURE__ */ _interop_require_default(require_keyframe());
    var _constants = require_constants5();
    var _content = require_content2();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var keyframeQuery = _occamquery.Query.fromExpressionString("/keyframes/keyframe");
    var identifierQuery = _occamquery.Query.fromExpressionString("/keyframes/@identifier");
    var Keyframes = /* @__PURE__ */ function() {
      function Keyframes2(array, identifier) {
        _class_call_check(this, Keyframes2);
        this.array = array;
        this.identifier = identifier;
      }
      _create_class(Keyframes2, [
        {
          key: "getIdentifier",
          value: function getIdentifier() {
            return this.identifier;
          }
        },
        {
          key: "asCSS",
          value: function asCSS(indent) {
            indent = indent + _constants.TWO_SPACES;
            var keyframesCSS = this.array.reduce(function(keyframesCSS2, keyframe) {
              var keyframeCSS = keyframe.asCSS(indent);
              keyframesCSS2 += keyframeCSS;
              return keyframesCSS2;
            }, _constants.EMPTY_STRING), css = "@keyframes ".concat(this.identifier, " {\n").concat(keyframesCSS, "}\n\n");
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node, tokens) {
            var keyframeNodes = keyframeQuery.execute(node), array = keyframeNodes.map(function(keyframeNode) {
              var _$node = keyframeNode, keyframe = _keyframe.default.fromNodeAndTokens(_$node, tokens);
              return keyframe;
            }), identifierContent = (0, _content.contentFromQueryNodeAndTokens)(identifierQuery, node, tokens), identifier = identifierContent, keyframes = new Keyframes2(array, identifier);
            return keyframes;
          }
        }
      ]);
      return Keyframes2;
    }();
  });

  // node_modules/with-style/lib/style/keyframess.js
  var require_keyframess = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Keyframess;
      }
    });
    var _occamquery = require_lib5();
    var _keyframes = /* @__PURE__ */ _interop_require_default(require_keyframes());
    var _constants = require_constants5();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var keyframesQuery = _occamquery.Query.fromExpressionString("/stylesheet/keyframes");
    var Keyframess = /* @__PURE__ */ function() {
      function Keyframess2(array) {
        _class_call_check(this, Keyframess2);
        this.array = array;
      }
      _create_class(Keyframess2, [
        {
          key: "unshift",
          value: function unshift(keyframess) {
          }
        },
        {
          key: "forEach",
          value: function forEach(callback) {
            this.array.forEach(callback);
          }
        },
        {
          key: "asCSS",
          value: function asCSS(className, indent) {
            var css = this.array.reduce(function(css2, keyframes) {
              var keyframesCSS = keyframes.asCSS(indent);
              css2 += keyframesCSS;
              return css2;
            }, _constants.EMPTY_STRING);
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node, tokens) {
            var keyframesNodes = keyframesQuery.execute(node), array = keyframesNodes.map(function(keyframesNode) {
              var _$node = keyframesNode, keyframes = _keyframes.default.fromNodeAndTokens(_$node, tokens);
              return keyframes;
            }), keyframess = new Keyframess2(array);
            return keyframess;
          }
        }
      ]);
      return Keyframess2;
    }();
  });

  // node_modules/with-style/lib/style.js
  var require_style = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return Style;
      }
    });
    var _medias = /* @__PURE__ */ _interop_require_default(require_medias());
    var _ruleSets = /* @__PURE__ */ _interop_require_default(require_ruleSets());
    var _keyframess = /* @__PURE__ */ _interop_require_default(require_keyframess());
    var _declarations = /* @__PURE__ */ _interop_require_default(require_declarations());
    var _constants = require_constants5();
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var Style = /* @__PURE__ */ function() {
      function Style2(declarations, keyframess, ruleSets, medias) {
        _class_call_check(this, Style2);
        this.declarations = declarations;
        this.keyframess = keyframess;
        this.ruleSets = ruleSets;
        this.medias = medias;
      }
      _create_class(Style2, [
        {
          key: "getDeclarations",
          value: function getDeclarations() {
            return this.declarations;
          }
        },
        {
          key: "getKeyframess",
          value: function getKeyframess() {
            return this.keyframess;
          }
        },
        {
          key: "getRuleSets",
          value: function getRuleSets() {
            return this.ruleSets;
          }
        },
        {
          key: "getMedias",
          value: function getMedias() {
            return this.medias;
          }
        },
        {
          key: "extends",
          value: function _extends(superStyle) {
            var declarations = superStyle.getDeclarations(), keyframess = superStyle.getKeyframess(), ruleSets = superStyle.getRuleSets(), medias = superStyle.getMedias();
            this.unshift(declarations, keyframess, ruleSets, medias);
          }
        },
        {
          key: "unshift",
          value: function unshift(declarations, keyframess, ruleSets, medias) {
            this.declarations.unshift(declarations);
            this.keyframess.unshift(keyframess);
            this.ruleSets.unshift(ruleSets);
            this.medias.unshift(medias);
          }
        },
        {
          key: "asCSS",
          value: function asCSS(className) {
            var indent = _constants.EMPTY_STRING, declarationsCSS = this.declarations.asCSS(className, indent), keyframessCSS = this.keyframess.asCSS(className, indent), ruleSetsCSS = this.ruleSets.asCSS(className, indent), mediasCSS = this.medias.asCSS(className, indent), css = "".concat(declarationsCSS).concat(keyframessCSS).concat(ruleSetsCSS).concat(mediasCSS);
            return css;
          }
        }
      ], [
        {
          key: "fromNodeAndTokens",
          value: function fromNodeAndTokens(node, tokens) {
            var declarations = _declarations.default.fromNodeAndTokens(node, tokens), keyframess = _keyframess.default.fromNodeAndTokens(node, tokens), ruleSets = _ruleSets.default.fromNodeAndTokens(node, tokens), medias = _medias.default.fromNodeAndTokens(node, tokens), style = new Style2(declarations, keyframess, ruleSets, medias);
            return style;
          }
        }
      ]);
      return Style2;
    }();
  });

  // node_modules/with-style/lib/utilities/styles.js
  var require_styles = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _style = /* @__PURE__ */ _interop_require_default(require_style());
    var _lexer = /* @__PURE__ */ _interop_require_default(require_lexer5());
    var _parser = /* @__PURE__ */ _interop_require_default(require_parser6());
    var _constants = require_constants5();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var cssLexer = _lexer.default.fromNothing();
    var cssParser = _parser.default.fromNothing();
    if (!globalThis.styleMap) {
      globalThis.styleMap = {};
    }
    var styleMap = globalThis.styleMap;
    function renderStyle(style) {
      var headDOMElement = document.querySelector(_constants.HEAD), styleDOMElement = document.createElement(_constants.STYLE), innerHTML = "        \n".concat(style, "\n");
      Object.assign(styleDOMElement, {
        innerHTML
      });
      headDOMElement.appendChild(styleDOMElement);
      return styleDOMElement;
    }
    function renderStyles() {
      var stylesCSS = retrieveStylesCSS(), style = stylesCSS;
      renderStyle(style);
    }
    function generateStyle(args, className) {
      var superStyle = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      var strings = args.shift(), content = strings.reduce(function(content2, string, index) {
        var arg = args[index] || null;
        content2 = arg === null ? "".concat(content2).concat(string) : "".concat(content2).concat(string).concat(arg);
        return content2;
      }, _constants.EMPTY_STRING), tokens = cssLexer.tokenise(content), node = cssParser.parse(tokens), style = _style.default.fromNodeAndTokens(node, tokens);
      if (superStyle !== null) {
        style.extends(superStyle);
      }
      styleMap[className] = style;
    }
    function retrieveStyle(className) {
      var style = styleMap[className] || null;
      return style;
    }
    var _default = {
      renderStyle,
      renderStyles,
      generateStyle,
      retrieveStyle
    };
    function retrieveStylesCSS() {
      var classNames = Object.keys(styleMap), stylesCSS = classNames.reduce(function(stylesCSS2, className) {
        var style = retrieveStyle(className), styleCSS = style.asCSS(className);
        stylesCSS2 += styleCSS;
        return stylesCSS2;
      }, _constants.EMPTY_STRING);
      return stylesCSS;
    }
  });

  // node_modules/with-style/lib/utilities/className.js
  var require_className = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      default: function() {
        return _default;
      },
      generateClassName: function() {
        return generateClassName;
      },
      retrieveClassName: function() {
        return retrieveClassName;
      }
    });
    var _constants = require_constants5();
    var length = _constants.CLASS_NAME_LENGTH;
    var characters = _constants.CHARACTERS;
    var charactersLength = characters.length;
    var classNames = [];
    function generateClassName() {
      var className = _constants.EMPTY_STRING;
      for (var count = 0; count < length; count++) {
        var index = Math.floor(Math.random() * charactersLength), character = characters[index];
        className += character;
      }
      var classNamesIncludesClassName = classNames.includes(className);
      if (!classNamesIncludesClassName) {
        classNames.push(className);
      } else {
        className = generateClassName();
      }
      return className;
    }
    function retrieveClassName(element) {
      var className = (element.reactFunction || element.reactComponent.constructor).className;
      return className;
    }
    var _default = {
      generateClassName,
      retrieveClassName
    };
  });

  // node_modules/with-style/lib/index.js
  var require_lib6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: all[name]
        });
    }
    _export(exports, {
      CSSLexer: function() {
        return _lexer.default;
      },
      CSSParser: function() {
        return _parser.default;
      },
      classNameUtilities: function() {
        return _className.default;
      },
      stylesUtilities: function() {
        return _styles.default;
      },
      tagNames: function() {
        return _tagNames.default;
      }
    });
    var _tagNames = /* @__PURE__ */ _interop_require_default(require_tagNames());
    var _lexer = /* @__PURE__ */ _interop_require_default(require_lexer5());
    var _parser = /* @__PURE__ */ _interop_require_default(require_parser6());
    var _styles = /* @__PURE__ */ _interop_require_default(require_styles());
    var _className = /* @__PURE__ */ _interop_require_default(require_className());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // node_modules/easy-with-style/lib/utilities/class.js
  var require_class = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "isClass", {
      enumerable: true,
      get: function() {
        return isClass;
      }
    });
    var _easy = require_lib();
    function _instanceof(left, right) {
      if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
        return !!right[Symbol.hasInstance](left);
      } else {
        return left instanceof right;
      }
    }
    function isClass(argument) {
      return isSubclassOf(argument, _easy.Element);
    }
    function isSubclassOf(argument, Class) {
      var subclassOf = _instanceof(argument.prototype, Class);
      return subclassOf;
    }
  });

  // node_modules/easy-with-style/lib/constants.js
  var require_constants6 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "CLASS_NAME", {
      enumerable: true,
      get: function() {
        return CLASS_NAME;
      }
    });
    var CLASS_NAME = "className";
  });

  // node_modules/easy-with-style/lib/withStyle.js
  var require_withStyle = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _easy = require_lib();
    var _withstyle = require_lib6();
    var _class = require_class();
    var _constants = require_constants6();
    function _array_like_to_array(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _array_without_holes(arr) {
      if (Array.isArray(arr))
        return _array_like_to_array(arr);
    }
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _iterable_to_array(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _non_iterable_spread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _object_spread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys2 = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
          ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
          }));
        }
        ownKeys2.forEach(function(key) {
          _define_property(target, key, source[key]);
        });
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _object_spread_props(target, source) {
      source = source != null ? source : {};
      if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
      return target;
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _to_consumable_array(arr) {
      return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _unsupported_iterable_to_array(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _array_like_to_array(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(n);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _array_like_to_array(o, minLen);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var generateClassName = _withstyle.classNameUtilities.generateClassName;
    var renderStyle = _withstyle.stylesUtilities.renderStyle;
    var renderStyles = _withstyle.stylesUtilities.renderStyles;
    var generateStyle = _withstyle.stylesUtilities.generateStyle;
    var retrieveStyle = _withstyle.stylesUtilities.retrieveStyle;
    function withStyle(ClassOrFunction) {
      return function() {
        var args = Array.prototype.slice.call(arguments);
        var _ClassOrFunction_className = ClassOrFunction.className, className = _ClassOrFunction_className === void 0 ? null : _ClassOrFunction_className;
        var superStyle = retrieveStyle(className);
        className = generateClassName();
        generateStyle(args, className, superStyle);
        var ClassOrFunctionClass = (0, _class.isClass)(ClassOrFunction);
        if (ClassOrFunctionClass) {
          var Class = ClassOrFunction;
          ClassOrFunction = /* @__PURE__ */ function(Class1) {
            _inherits(ClassOrFunction2, Class1);
            function ClassOrFunction2() {
              _class_call_check(this, ClassOrFunction2);
              return _call_super(this, ClassOrFunction2, arguments);
            }
            _create_class(ClassOrFunction2, null, [
              {
                key: "fromClass",
                value: function fromClass(_Class, properties) {
                  for (var _len = arguments.length, remainingArguments = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
                    remainingArguments[_key - 2] = arguments[_key];
                  }
                  var _$_Class;
                  properties = appendClassNameToProperties(className, properties);
                  return (_$_Class = Class).fromClass.apply(_$_Class, [
                    _Class,
                    properties
                  ].concat(_to_consumable_array(remainingArguments)));
                }
              }
            ]);
            return ClassOrFunction2;
          }(Class);
        } else {
          var Function2 = ClassOrFunction;
          ClassOrFunction = function(properties) {
            properties = appendClassNameToProperties(className, properties);
            return Function2(properties);
          };
        }
        Object.assign(ClassOrFunction, {
          className
        });
        return ClassOrFunction;
      };
    }
    Object.assign(withStyle, {
      renderStyle,
      renderStyles
    });
    var _default = withStyle;
    _withstyle.tagNames.forEach(function(tagName) {
      Object.defineProperty(withStyle, tagName, {
        get: function() {
          return function() {
            var args = Array.prototype.slice.call(arguments), className = generateClassName();
            generateStyle(args, className);
            var Function2 = function(properties) {
              properties = appendClassNameToProperties(className, properties);
              return _easy.React.createElement(tagName, properties);
            };
            Object.assign(Function2, {
              className
            });
            return Function2;
          };
        }
      });
    });
    function appendClassNameToProperties(className, properties) {
      properties = properties.hasOwnProperty(_constants.CLASS_NAME) ? properties : _object_spread_props(_object_spread({}, properties), {
        className
      });
      return properties;
    }
  });

  // node_modules/easy-with-style/lib/index.js
  var require_lib7 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _withStyle = /* @__PURE__ */ _interop_require_default(require_withStyle());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var _default = _withStyle.default;
  });

  // lib/characterMap/symbolic.js
  var require_symbolic = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get angles() {
        return angles;
      },
      get arithmetic() {
        return arithmetic;
      },
      get arrows() {
        return arrows;
      },
      get calculus() {
        return calculus;
      },
      get circlesOrCircled() {
        return circlesOrCircled;
      },
      get classTheoretic() {
        return classTheoretic;
      },
      get default() {
        return _default;
      },
      get doubleAndTripleArrows() {
        return doubleAndTripleArrows;
      },
      get equality() {
        return equality;
      },
      get greekLetters() {
        return greekLetters;
      },
      get harpoons() {
        return harpoons;
      },
      get headedArrows() {
        return headedArrows;
      },
      get logicalOperators() {
        return logicalOperators;
      },
      get miscellaneous() {
        return miscellaneous;
      },
      get ordering() {
        return ordering;
      },
      get parenthesesAndBrackets() {
        return parenthesesAndBrackets;
      },
      get relational() {
        return relational;
      },
      get shapes() {
        return shapes;
      },
      get superscriptsAndSubscripts() {
        return superscriptsAndSubscripts;
      },
      get tacksAndTurnstiles() {
        return tacksAndTurnstiles;
      }
    });
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _object_spread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
          ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
          }));
        }
        ownKeys.forEach(function(key) {
          _define_property(target, key, source[key]);
        });
      }
      return target;
    }
    var shapes = {
      TRIANGLE: 9651,
      SQUARE: 9633,
      PENTAGON: 11040,
      HEXAGON: 11041,
      "UPPER LEFT TRIANGLE": 9720,
      "UPPER RIGHT TRIANGLE": 9721,
      "LOWER LEFT TRIANGLE": 9722,
      "LOWER RIGHT TRIANGLE": 9727,
      "TRIANGLE WITH DOT ABOVE": 10698,
      "TRIANGLE WITH UNDERBAR": 10699,
      "DOWN-POINTING TRIANGLE WITH LEFT HALF BLACK": 10728,
      "DOWN-POINTING TRIANGLE WITH RIGHT HALF BLACK": 10729
    };
    var angles = {
      ANGLE: 8736,
      "RIGHT ANGLE": 8735,
      "ACUTE ANGLE": 10655,
      "OBLIQUE ANGLE OPENING UP": 10662,
      "OBLIQUE ANGLE OPENING DOWN": 10663,
      "TURNED ANGLE": 10658,
      "REVERSED ANGLE": 10659,
      "ANGLE WITH UNDERBAR": 10660,
      "REVERSED ANGLE WITH UNDERBAR": 10661,
      "THREE DIMENSIONAL ANGLE": 10176
    };
    var arrows = {
      "LEFTWARDS ARROW": 8592,
      "UPWARDS ARROW": 8593,
      "RIGHTWARDS ARROW": 8594,
      "DOWNWARDS ARROW": 8595,
      "LEFT RIGHT ARROW": 8596,
      "UP DOWN ARROW": 8597,
      "NORTH WEST ARROW": 8598,
      "NORTH EAST ARROW": 8599,
      "SOUTH EAST ARROW": 8600,
      "SOUTH WEST ARROW": 8601,
      "LEFTWARDS WAVE ARROW": 8604,
      "RIGHTWARDS WAVE ARROW": 8605,
      "ANTICLOCKWISE OPEN CIRCLE ARROW": 8634,
      "CLOCKWISE OPEN CIRCLE ARROW": 8635,
      "ANTICLOCKWISE GAPPED CIRCLE ARROW": 10226,
      "CLOCKWISE GAPPED CIRCLE ARROW": 10227,
      "RIGHTWARDS ARROW OVER LEFTWARDS ARROW": 8644,
      "LEFTWARDS ARROW OVER RIGHTWARDS ARROW": 8646,
      "UPWARDS ARROW LEFTWARDS OF DOWNWARDS ARROW": 8645,
      "DOWNWARDS ARROW LEFTWARDS OF UPWARDS ARROW": 8693,
      "MODIFIER LETTER RAISED UP ARROW": 42779,
      "MODIFIER LETTER RAISED DOWN ARROW": 42780,
      "LONG LEFTWARDS ARROW": 10229,
      "LONG RIGHTWARDS ARROW": 10230,
      "LONG LEFT RIGHT ARROW": 10231,
      "NORTH WEST AND SOUTH EAST ARROW": 10529,
      "NORTH EAST AND SOUTH WEST ARROW": 10530,
      "NORTH WEST ARROW AND NORTH EAST ARROW": 10535,
      "NORTH EAST ARROW AND SOUTH EAST ARROW": 10536,
      "SOUTH EAST ARROW AND SOUTH WEST ARROW": 10537,
      "SOUTH WEST ARROW AND NORTH WEST ARROW": 10538,
      "SOUTH EAST ARROW CROSSING NORTH EAST ARROW": 10541,
      "NORTH EAST ARROW CROSSING SOUTH EAST ARROW": 10542,
      "FALLING DIAGONAL CROSSING NORTH EAST ARROW": 10543,
      "RISING DIAGONAL CROSSING SOUTH EAST ARROW": 10544,
      "NORTH EAST ARROW CROSSING NORTH WEST ARROW": 10545,
      "NORTH WEST ARROW CROSSING NORTH EAST ARROW": 10546,
      "RIGHT-SIDE ARC CLOCKWISE ARROW": 10552,
      "LEFT-SIDE ARC ANTICLOCKWISE ARROW": 10553,
      "TOP ARC ANTICLOCKWISE ARROW": 10554,
      "BOTTOM ARC ANTICLOCKWISE ARROW": 10555,
      "LOWER RIGHT SEMICIRCULAR CLOCKWISE ARROW": 10558,
      "LOWER LEFT SEMICIRCULAR ANTICLOCKWISE ARROW": 10559,
      "RIGHTWARDS ARROW ABOVE SHORT LEFTWARDS ARROW": 10562,
      "LEFTWARDS ARROW ABOVE SHORT RIGHTWARDS ARROW": 10563,
      "SHORT RIGHTWARDS ARROW ABOVE LEFTWARDS ARROW": 10564,
      "LEFTWARDS ARROW WITH TAIL": 8610,
      "RIGHTWARDS ARROW WITH TAIL": 8611,
      "LEFTWARDS ARROW WITH HOOK": 8617,
      "RIGHTWARDS ARROW WITH HOOK": 8618,
      "LEFTWARDS ARROW WITH STROKE": 8602,
      "RIGHTWARDS ARROW WITH STROKE": 8603,
      "LEFT RIGHT ARROW WITH STROKE": 8622,
      "LEFTWARDS ARROW WITH VERTICAL STROKE": 8695,
      "RIGHTWARDS ARROW WITH VERTICAL STROKE": 8696,
      "LEFT RIGHT ARROW WITH VERTICAL STROKE": 8697,
      "DOWNWARDS ARROW WITH HORIZONTAL STROKE": 10504,
      "UPWARDS ARROW WITH HORIZONTAL STROKE": 10505,
      "LEFTWARDS ARROW FROM BAR": 8612,
      "UPWARDS ARROW FROM BAR": 8613,
      "RIGHTWARDS ARROW FROM BAR": 8614,
      "DOWNWARDS ARROW FROM BAR": 8615,
      "LEFTWARDS ARROW TO BAR": 8676,
      "RIGHTWARDS ARROW TO BAR": 8677,
      "LONG LEFTWARDS ARROW FROM BAR": 10235,
      "LONG RIGHTWARDS ARROW FROM BAR": 10236,
      "UPWARDS ARROW TO BAR": 10514,
      "DOWNWARDS ARROW TO BAR": 10515,
      "LEFTWARDS ARROW TO BAR OVER RIGHTWARDS ARROW TO BAR": 8633,
      "UPWARDS ARROW WITH TIP LEFTWARDS": 8624,
      "UPWARDS ARROW WITH TIP RIGHTWARDS": 8625,
      "DOWNWARDS ARROW WITH TIP LEFTWARDS": 8626,
      "DOWNWARDS ARROW WITH TIP RIGHTWARDS": 8627,
      "RIGHTWARDS ARROW WITH CORNER DOWNWARDS": 8628,
      "DOWNWARDS ARROW WITH CORNER LEFTWARDS": 8629,
      "LEFTWARDS PAIRED ARROWS": 8647,
      "UPWARDS PAIRED ARROWS": 8648,
      "RIGHTWARDS PAIRED ARROWS": 8649,
      "DOWNWARDS PAIRED ARROWS": 8650,
      "THREE RIGHTWARDS ARROWS": 8694,
      "THREE LEFTWARDS ARROWS": 11057,
      "NORTH WEST ARROW TO CORNER": 8689,
      "SOUTH EAST ARROW TO CORNER": 8690,
      "RIGHTWARDS ARROW WITH TIP DOWNWARDS": 11022,
      "RIGHTWARDS ARROW WITH TIP UPWARDS": 11023,
      "LEFTWARDS ARROW WITH TIP DOWNWARDS": 11024,
      "LEFTWARDS ARROW WITH TIP UPWARDS": 11025,
      "RIGHTWARDS ARROW WITH DOTTED STEM": 10513,
      "LEFTWARDS ARROW-TAIL": 10521,
      "RIGHTWARDS ARROW-TAIL": 10522,
      "NORTH WEST ARROW WITH HOOK": 10531,
      "NORTH EAST ARROW WITH HOOK": 10532,
      "SOUTH EAST ARROW WITH HOOK": 10533,
      "SOUTH WEST ARROW WITH HOOK": 10534,
      "ARROW POINTING RIGHTWARDS THEN CURVING UPWARDS": 10548,
      "ARROW POINTING RIGHTWARDS THEN CURVING DOWNWARDS": 10549,
      "ARROW POINTING DOWNWARDS THEN CURVING LEFTWARDS": 10550,
      "ARROW POINTING DOWNWARDS THEN CURVING RIGHTWARDS": 10551
    };
    var harpoons = {
      "LEFTWARDS HARPOON WITH BARB UPWARDS": 8636,
      "LEFTWARDS HARPOON WITH BARB DOWNWARDS": 8637,
      "UPWARDS HARPOON WITH BARB RIGHTWARDS": 8638,
      "UPWARDS HARPOON WITH BARB LEFTWARDS": 8639,
      "RIGHTWARDS HARPOON WITH BARB UPWARDS": 8640,
      "RIGHTWARDS HARPOON WITH BARB DOWNWARDS": 8641,
      "DOWNWARDS HARPOON WITH BARB RIGHTWARDS": 8642,
      "DOWNWARDS HARPOON WITH BARB LEFTWARDS": 8643,
      "LEFT BARB UP RIGHT BARB DOWN HARPOON": 10570,
      "LEFT BARB DOWN RIGHT BARB UP HARPOON": 10571,
      "UP BARB RIGHT DOWN BARB LEFT HARPOON": 10572,
      "UP BARB LEFT DOWN BARB RIGHT HARPOON": 10573,
      "LEFT BARB UP RIGHT BARB UP HARPOON": 10574,
      "UP BARB RIGHT DOWN BARB RIGHT HARPOON": 10575,
      "LEFT BARB DOWN RIGHT BARB DOWN HARPOON": 10576,
      "UP BARB LEFT DOWN BARB LEFT HARPOON": 10577,
      "LEFTWARDS HARPOON WITH BARB UP TO BAR": 10578,
      "RIGHTWARDS HARPOON WITH BARB UP TO BAR": 10579,
      "UPWARDS HARPOON WITH BARB RIGHT TO BAR": 10580,
      "DOWNWARDS HARPOON WITH BARB RIGHT TO BAR": 10581,
      "LEFTWARDS HARPOON WITH BARB DOWN TO BAR": 10582,
      "RIGHTWARDS HARPOON WITH BARB DOWN TO BAR": 10583,
      "UPWARDS HARPOON WITH BARB LEFT TO BAR": 10584,
      "DOWNWARDS HARPOON WITH BARB LEFT TO BAR": 10585,
      "LEFTWARDS HARPOON WITH BARB UP FROM BAR": 10586,
      "RIGHTWARDS HARPOON WITH BARB UP FROM BAR": 10587,
      "UPWARDS HARPOON WITH BARB RIGHT FROM BAR": 10588,
      "DOWNWARDS HARPOON WITH BARB RIGHT FROM BAR": 10589,
      "LEFTWARDS HARPOON WITH BARB DOWN FROM BAR": 10590,
      "RIGHTWARDS HARPOON WITH BARB DOWN FROM BAR": 10591,
      "UPWARDS HARPOON WITH BARB LEFT FROM BAR": 10592,
      "DOWNWARDS HARPOON WITH BARB LEFT FROM BAR": 10593,
      "LEFTWARDS HARPOON WITH BARB UP ABOVE LEFTWARDS HARPOON WITH BARB DOWN": 10594,
      "UPWARDS HARPOON WITH BARB LEFT BESIDE UPWARDS HARPOON WITH BARB RIGHT": 10595,
      "RIGHTWARDS HARPOON WITH BARB UP ABOVE RIGHTWARDS HARPOON WITH BARB DOWN": 10596,
      "DOWNWARDS HARPOON WITH BARB LEFT BESIDE DOWNWARDS HARPOON WITH BARB RIGHT": 10597,
      "UPWARDS HARPOON WITH BARB LEFT BESIDE DOWNWARDS HARPOON WITH BARB RIGHT": 10606,
      "DOWNWARDS HARPOON WITH BARB LEFT BESIDE UPWARDS HARPOON WITH BARB RIGHT": 10607
    };
    var equality = {
      "COLON EQUALS": 8788,
      "EQUALS COLON": 8789,
      "DOUBLE COLON EQUAL": 10868,
      "EQUALS SIGN WITH DOT BELOW": 10854,
      "EQUALS SIGN WITH TWO DOTS ABOVE AND TWO DOTS BELOW": 10871,
      "EQUALS WITH ASTERISK": 10862,
      "PLUS SIGN ABOVE EQUALS SIGN": 10866,
      "EQUALS SIGN ABOVE PLUS SIGN": 10865,
      "EQUALS SIGN WITH BUMPY ABOVE": 10926,
      "TWO CONSECUTIVE EQUALS SIGNS": 10869,
      "THREE CONSECUTIVE EQUALS SIGNS": 10870,
      "NOT EQUAL TO": 8800,
      "IDENTICAL-EQUAL": 8801,
      "EQUAL AND PARALLEL TO": 8917,
      "REVERSED TILDE EQUALS": 8909,
      "EQUALS SIGN ABOVE TILDE OPERATOR": 10867,
      "STAR EQUALS": 8795,
      "DELTA EQUAL TO": 8796,
      "EQUAL TO BY DEFINITION": 8797,
      "QUESTIONED EQUAL TO": 8799,
      "APPROXIMATELY-EQUAL": 8776,
      "APPROXIMATELY EQUAL OR EQUAL TO": 10864,
      "APPROXIMATELY BUT NOT ACTUALLY EQUAL TO": 8774,
      "NEITHER APPROXIMATELY NOR ACTUALLY EQUAL TO": 8775,
      "NOT ALMOST EQUAL TO": 8777,
      "ALMOST EQUAL OR EQUAL TO": 8778,
      "ALMOST EQUAL TO WITH CIRCUMFLEX ACCENT": 10863,
      "ASYMPTOTICALLY EQUAL TO": 8771,
      "NOT ASYMPTOTICALLY EQUAL TO": 8772,
      "ALL EQUAL TO": 8780,
      "GEOMETRICALLY EQUAL TO": 8785,
      "RING IN EQUAL TO": 8790,
      "RING EQUAL TO": 8791
    };
    var ordering = {
      "NOT LESS-THAN": 8814,
      "NOT GREATER-THAN": 8815,
      "MUCH LESS THAN": 8810,
      "MUCH GREATER THAN": 8811,
      "LESS THAN WITH DOT": 8918,
      "GREATER THAN WITH DOT": 8919,
      "VERY MUCH LESS THAN": 8920,
      "VERY MUCH GREATER THAN": 8921,
      "LESS THAN EQUAL": 8804,
      "GREATER THAN EQUAL": 8805,
      "EQUAL TO OR LESS-THAN": 8924,
      "EQUAL TO OR GREATER-THAN": 8925,
      "LESS-THAN EQUAL TO OR GREATER-THAN": 8922,
      "GREATER-THAN EQUAL TO OR LESS-THAN": 8923,
      "NEITHER LESS-THAN NOR EQUAL TO": 8816,
      "NEITHER GREATER-THAN NOR EQUAL TO": 8817,
      "SMALLER THAN OR EQUAL TO": 10924,
      "LARGER THAN OR EQUAL TO": 10925,
      "LESS-THAN OVER EQUAL TO": 8806,
      "GREATER-THAN OVER EQUAL TO": 8807,
      "LESS-THAN BUT NOT EQUAL TO": 8808,
      "GREATER-THAN BUT NOT EQUAL TO": 8809,
      "LESS-THAN AND SINGLE-LINE NOT EQUAL TO": 10887,
      "GREATER-THAN AND SINGLE-LINE NOT EQUAL TO": 10888,
      "LESS-THAN ABOVE DOUBLE-LINE EQUAL ABOVE GREATER-THAN": 10891,
      "GREATER-THAN ABOVE DOUBLE-LINE EQUAL ABOVE LESS-THAN": 10892,
      "LESS-THAN ABOVE SIMILAR OR EQUAL": 10893,
      "GREATER-THAN ABOVE SIMILAR OR EQUAL": 10894,
      "LESS-THAN ABOVE GREATER-THAN ABOVE DOUBLE-LINE EQUAL": 10897,
      "GREATER-THAN ABOVE LESS-THAN ABOVE DOUBLE-LINE EQUAL": 10898,
      "DOUBLE-LINE EQUAL TO OR LESS-THAN": 10905,
      "DOUBLE-LINE EQUAL TO OR GREATER-THAN": 10906,
      "SLANTED EQUAL TO OR LESS-THAN": 10901,
      "SLANTED EQUAL TO OR GREATER-THAN": 10902,
      "LESS-THAN OR SLANTED EQUAL TO": 10877,
      "GREATER-THAN OR SLANTED EQUAL TO": 10878,
      "LESS-THAN ABOVE SLANTED EQUAL ABOVE GREATER-THAN ABOVE SLANTED EQUAL": 10899,
      "GREATER-THAN ABOVE SLANTED EQUAL ABOVE LESS-THAN ABOVE SLANTED EQUAL": 10900,
      "DOUBLE-LINE SLANTED EQUAL TO OR LESS-THAN": 10907,
      "DOUBLE-LINE SLANTED EQUAL TO OR GREATER-THAN": 10908,
      "DOUBLE-LINE SLANTED LESS-THAN OR EQUAL TO": 11001,
      "DOUBLE-LINE SLANTED GREATER-THAN OR EQUAL TO": 11002,
      "SLANTED EQUAL TO OR LESS-THAN WITH DOT INSIDE": 10903,
      "SLANTED EQUAL TO OR GREATER-THAN WITH DOT INSIDE": 10904,
      "LESS-THAN OR SLANTED EQUAL TO WITH DOT INSIDE": 10879,
      "GREATER-THAN OR SLANTED EQUAL TO WITH DOT INSIDE": 10880,
      "LESS-THAN OR SLANTED EQUAL TO WITH DOT ABOVE": 10881,
      "GREATER-THAN OR SLANTED EQUAL TO WITH DOT ABOVE": 10882,
      "LESS-THAN OR SLANTED EQUAL TO WITH DOT ABOVE RIGHT": 10883,
      "GREATER-THAN OR SLANTED EQUAL TO WITH DOT ABOVE LEFT": 10884,
      PRECEDES: 8826,
      SUCCEEDS: 8827,
      "PRECEDES OR EQUIVALENT TO": 8830,
      "SUCCEEDS OR EQUIVALENT TO": 8831,
      "DOES NOT PRECEDE": 8832,
      "DOES NOT SUCCEED": 8833,
      "PRECEDES OR EQUAL TO": 8828,
      "SUCCEEDS OR EQUAL TO": 8829,
      "PRECEDES ABOVE ALMOST EQUAL TO": 10935,
      "SUCCEEDS ABOVE ALMOST EQUAL TO": 10936,
      "PRECEDES ABOVE NOT ALMOST EQUAL TO": 10937,
      "SUCCEEDS ABOVE NOT ALMOST EQUAL TO": 10938,
      "PRECEDES ABOVE SINGLE-LINE EQUALS SIGN": 10927,
      "SUCCEEDS ABOVE SINGLE-LINE EQUALS SIGN": 10928,
      "PRECEDES ABOVE SINGLE-LINE NOT EQUAL TO": 10929,
      "SUCCEEDS ABOVE SINGLE-LINE NOT EQUAL TO": 10930,
      "PRECEDES ABOVE EQUALS SIGN": 10931,
      "SUCCEEDS ABOVE EQUALS SIGN": 10932,
      "PRECEDES ABOVE NOT EQUAL TO": 10933,
      "SUCCEEDS ABOVE NOT EQUAL TO": 10934,
      "EQUAL TO OR PRECEDES": 8926,
      "EQUAL TO OR SUCCEEDS": 8927,
      "DOES NOT PRECEDE OR EQUAL": 8928,
      "DOES NOT SUCCEED OR EQUAL": 8929,
      "PRECEDES BUT NOT EQUIVALENT TO": 8936,
      "SUCCEEDS BUT NOT EQUIVALENT TO": 8937,
      "DOUBLE PRECEDES": 10939,
      "DOUBLE SUCCEEDS": 10940,
      "PRECEDES UNDER RELATION": 8880,
      "SUCCEEDS UNDER RELATION": 8881,
      "LESS-THAN-OR-EQUIVALENT-TO": 10927,
      "GREATER-THAN-OR-EQUIVALENT-TO": 10928,
      "LESS-THAN BUT NOT EQUIVALENT TO": 8934,
      "GREATER-THAN BUT NOT EQUIVALENT TO": 8935,
      "LESS-THAN OR EQUIVALENT TO": 8818,
      "GREATER-THAN OR EQUIVALENT TO": 8819,
      "NEITHER LESS-THAN NOR EQUIVALENT TO": 8820,
      "NEITHER GREATER-THAN NOR EQUIVALENT TO": 8821,
      "LESS THAN OR GREATER THAN": 8822,
      "GREATER THAN OR LESS THAN": 8823,
      "NEITHER LESS THAN NOR GREATER THAN": 8824,
      "NEITHER GREATER THAN NOR LESS THAN": 8825,
      "LESS THAN ABOVE LEFTWARDS ARROW": 10614,
      "GREATER THAN ABOVE RIGHTWARDS ARROW": 10616
    };
    var calculus = {
      DERIVATIVE: 8710,
      NABLA: 8711,
      DELTA: 916,
      "PARTIAL DIFFERENTIAL": 8706,
      "INFINITELY SMALL": 119895,
      INTEGRAL: 8747,
      "DOUBLE INTEGRAL": 8748,
      "TRIPLE INTEGRAL": 8749,
      "QUADRUPLE INTEGRAL": 10764,
      "CONTOUR INTEGRAL": 8750,
      "SURFACE INTEGRAL": 8751,
      "VOLUME INTEGRAL": 8752,
      "CLOCKWISE INTEGRAL": 8753,
      "ANTICLOCKWISE INTEGRATION": 10769,
      "CLOCKWISE CONTOUR INTEGRAL": 8754,
      "ANTICLOCKWISE CONTOUR INTEGRAL": 8755,
      "TOP HALF INTEGRAL": 8992,
      "BOTTOM HALF INTEGRAL": 8993,
      "INTEGRAL EXTENSION": 9134,
      "SUMMATION WITH INTEGRAL": 10763,
      "FINITE PART INTEGRAL": 10765,
      "INTEGRAL WITH DOUBLE STROKE": 10766,
      "INTEGRAL AVERAGE WITH SLASH": 10767,
      "INTEGRAL WITH INTERSECTION": 10777,
      "INTEGRAL WITH OVERBAR": 10779,
      "INTEGRAL WITH UNDERBAR": 10780,
      "INTEGRAL AROUND A POINT OPERATOR": 10773,
      "QUATERNION INTEGRAL OPERATOR": 10774,
      "LINE INTEGRATION WITH RECTANGULAR PATH AROUND POLE": 10770,
      "LINE INTEGRATION WITH SEMICIRCULAR PATH AROUND POLE": 10771,
      "LINE INTEGRATION NOT INCLUDING THE POLE": 10772
    };
    var relational = {
      "EQUIVALENT TO": 8781,
      "NOT EQUIVALENT TO": 8813,
      "STRICTLY EQUIVALENT TO": 8803,
      "GEOMETRICALLY EQUIVALENT TO": 8782,
      "CONGRUENT TO": 8773,
      "PROPORTIONAL TO": 8733,
      "IMAGE OF": 8887,
      "ORIGINAL OF": 8886,
      "SQUARE IMAGE OF": 8847,
      "SQUARE ORIGINAL OF": 8848,
      "SQUARE IMAGE OF OR NOT EQUAL TO": 8932,
      "SQUARE ORIGINAL OF OR NOT EQUAL TO": 8933,
      "NOT SQUARE IMAGE OF OR EQUAL TO": 8930,
      "NOT SQUARE ORIGINAL OF OR EQUAL TO": 8931,
      "APPROXIMATELY EQUAL TO OR THE IMAGE OF": 8786,
      "IMAGE OF OR APPROXIMATELY EQUAL TO": 8787,
      "SQUARE IMAGE OF OR EQUAL TO": 8849,
      "SQUARE ORIGINAL OF OR EQUAL TO": 8850,
      "FORCE OF": 8614,
      EXCLUSION: 8942,
      "IN RELATION": 8882,
      "BINARY-RELATION": 10197,
      ISOMORPHISM: 8644,
      HOMEOMORPHISM: 8888,
      HOMOMORPHISM: 8640,
      EQUIVALENCE: 8904,
      CONGRUENCE: 8781,
      MORPHISM: 8640,
      BIJECTION: 8660,
      SURJECTION: 8614,
      INJECTION: 8611,
      "ISOMORPHIC-TO": 8831,
      "ISOMORPHIC-BETWEEN": 8644,
      "DOUBLE SOLIDUS OPERATOR": 11005,
      "REVERSE SOLIDUS OPERATOR": 10741,
      "BIG SOLIDUS": 10744,
      "BIG REVERSE SOLIDUS": 10745,
      "SQUARED PLUS": 8862,
      "SQUARED MINUS": 8863,
      "SQUARED TIMES": 8864,
      "SQUARED ASTERISK": 10694,
      "N ARY TIMES OPERATOR": 10761,
      "SQUARED DOT OPERATOR": 8865,
      "SQUARED RISING DIAGONAL SLASH": 10692,
      "SQUARED FALLING DIAGONAL SLASH": 10693,
      "IN RELATION TO": 8882,
      "ASTERISK OPERATOR": 8727,
      "RING OPERATOR": 8728,
      "DOT OPERATOR": 8901,
      "STAR OPERATOR": 8902,
      "TILDE OPERATOR": 8764,
      "BULLET OPERATOR": 8729,
      "TRIPLE COLON OPERATOR": 10998,
      TILDE: 126,
      "TRIPLE TILDE": 8779,
      "REVERSED TILDE": 8765,
      "NOT TILDE": 8769,
      "MINUS TILDE": 8770,
      "TILDE OPERATOR WITH DOT ABOVE": 10858,
      "TILDE OPERATOR WITH RISING DOTS": 10859,
      "LEFTWARDS ARROW ABOVE TILDE OPERATOR": 10611,
      "RIGHTWARDS ARROW ABOVE TILDE OPERATOR": 10612,
      "LEFTWARDS ARROW ABOVE REVERSE TILDE OPERATOR": 11083,
      "RIGHTWARDS ARROW ABOVE REVERSE TILDE OPERATOR": 11084,
      "SQUARE LEFT OPEN BOX OPERATOR": 10957,
      "SQUARE RIGHT OPEN BOX OPERATOR": 10958,
      HOMOTHETIC: 8763,
      "INVERTED LAZY S": 8766,
      "APPROACHES THE LIMIT": 8784,
      "DIFFERENCE BETWEEN": 8783,
      "CORRESPONDS TO": 8792,
      ESTIMATES: 8793,
      "EQUIANGULAR TO": 8794,
      "MEASURED BY": 8798,
      BETWEEN: 8812,
      "SQUARE CAP": 8851,
      "SQUARE CUP": 8852,
      JOIN: 10781,
      "LEFT OUTER JOIN": 10197,
      "RIGHT OUTER JOIN": 10198,
      "FULL OUTER JOIN": 10199,
      "NORMAL SUBGROUP OF": 8882,
      "CONTAINS AS NORMAL SUBGROUP": 8883,
      "NOT NORMAL SUBGROUP OF": 8938,
      "DOES NOT CONTAIN AS NORMAL SUBGROUP": 8939,
      "NOT NORMAL SUBGROUP OF OR EQUAL TO": 8940,
      "DOES NOT CONTAIN AS NORMAL SUBGROUP OR EQUAL": 8941,
      "NORMAL SUBGROUP OF OR EQUAL TO": 8884,
      "CONTAINS AS NORMAL SUBGROUP OR EQUAL TO": 8885,
      MULTIMAP: 8888,
      "LEFT MULTIMAP": 10204,
      "DOUBLE-ENDED MULTIMAP": 10719,
      "DOT MINUS": 8760,
      XOR: 8891,
      NAND: 8892,
      NOR: 8893,
      "DIVISION TIMES": 8903,
      "TIMES WITH LEFT HALF BLACK": 10708,
      "TIMES WITH RIGHT HALF BLACK": 10709,
      PERPENDICULAR: 10178,
      "INCREASES AS": 10721,
      "NOT IDENTICAL TO": 8802,
      "IDENTICAL WITH DOT ABOVE": 10855,
      "VECTOR OR CROSS PRODUCT": 10799,
      "DOT PRODUCT": 8901,
      "WREATH PRODUCT": 8768,
      "CARTESIAN-PRODUCT": 10799,
      "SMASH PRODUCT": 10803,
      "INTERIOR PRODUCT": 10812,
      "SHUFFLE PRODUCT": 10722,
      "LEFT SEMIDIRECT PRODUCT": 8907,
      "RIGHT SEMIDIRECT PRODUCT": 8908,
      "AMALGAMATION OR COPRODUCT": 10815,
      "RIGHTHAND INTERIOR PRODUCT": 10813,
      "LEFT NORMAL FACTOR SEMIDIRECT PRODUCT": 8905,
      "RIGHT NORMAL FACTOR SEMIDIRECT PRODUCT": 8906,
      "SEMIDIRECT PRODUCT WITH BOTTOM CLOSED": 10802,
      "SMALL VEE WITH UNDERBAR": 10849,
      "TRIPLE HORIZONTAL BAR WITH DOUBLE VERTICAL STROKE": 10856,
      "TRIPLE HORIZONTAL BAR WITH TRIPLE VERTICAL STROKE": 10857,
      "SIMILAR MINUS SIMILAR": 10860,
      "CONGRUENT WITH DOT ABOVE": 10861,
      "LESS-THAN WITH CIRCLE INSIDE": 10873,
      "GREATER-THAN WITH CIRCLE INSIDE": 10874,
      "LESS-THAN WITH QUESTION MARK ABOVE": 10875,
      "GREATER-THAN WITH QUESTION MARK ABOVE": 10876,
      "LESS-THAN OR APPROXIMATE": 10885,
      "GREATER-THAN OR APPROXIMATE": 10886,
      "LESS-THAN AND NOT APPROXIMATE": 10889,
      "GREATER-THAN AND NOT APPROXIMATE": 10890,
      "LESS-THAN ABOVE SIMILAR ABOVE GREATER-THAN": 10895,
      "GREATER-THAN ABOVE SIMILAR ABOVE LESS-THAN": 10896,
      "SIMILAR OR LESS-THAN": 10909,
      "SIMILAR OR GREATER-THAN": 10910,
      "DOUBLE NESTED LESS-THAN": 10913,
      "DOUBLE NESTED GREATER-THAN": 10914,
      "DOUBLE NESTED LESS-THAN WITH UNDERBAR": 10915,
      "GREATER-THAN OVERLAPPING LESS-THAN": 10916,
      "GREATER-THAN BESIDE LESS-THAN": 10917,
      "LESS-THAN CLOSED BY CURVE": 10918,
      "GREATER-THAN CLOSED BY CURVE": 10919,
      "SMALLER THAN": 10922,
      "LARGER THAN": 10923,
      "PARALLEL TO": 8741,
      "NOT PARALLEL TO": 8742,
      "PARALLEL WITH TILDE OPERATOR": 10995,
      "IDENTICAL TO AND SLANTED PARALLEL": 10725,
      "PARALLEL WITH HORIZONTAL STROKE": 10994,
      "TRIPLE NESTED LESS-THAN": 10999,
      "TRIPLE NESTED GREATER-THAN": 11e3,
      "SMALL LESS-THAN SIGN": 65124,
      "SMALL GREATER-THAN SIGN": 65125
    };
    var arithmetic = {
      "PLUS SIGN": 43,
      "HYPHEN-MINUS": 45,
      "DIVISION SIGN": 247,
      "MULTIPLICATION SIGN": 215,
      "MINUS-OR-PLUS SIGN": 8723,
      "PLUS-MINUS SIGN": 177,
      "MINUS SIGN": 8722,
      "LEFT FLOOR": 8970,
      "RIGHT FLOOR": 8971,
      "LEFT CEILING": 8968,
      "RIGHT CEILING": 8969,
      DIVIDES: 8739,
      "DOES NOT DIVIDE": 8740,
      "SQUARE ROOT": 8730,
      "CUBE ROOT": 8731,
      "FOURTH ROOT": 8732,
      "LONG DIVISION": 10188,
      "DIVISION SLASH": 8725,
      "FRACTION SLASH": 8260,
      "DOUBLE PLUS": 10746,
      "TRIPLE PLUS": 10747,
      PRODUCT: 8719,
      COPRODUCT: 8720,
      SUMMATION: 8721,
      "SUMMATION TOP": 9138,
      "SUMMATION BOTTOM": 9139,
      DETERMINANT: 8747
    };
    var greekLetters = {
      "GREEK CAPITAL LETTER ALPHA": 913,
      "GREEK CAPITAL LETTER BETA": 914,
      "GREEK CAPITAL LETTER GAMMA": 915,
      "GREEK CAPITAL LETTER DELTA": 916,
      "GREEK CAPITAL LETTER EPSILON": 917,
      "GREEK CAPITAL LETTER ZETA": 918,
      "GREEK CAPITAL LETTER ETA": 919,
      "GREEK CAPITAL LETTER THETA": 920,
      "GREEK CAPITAL LETTER IOTA": 921,
      "GREEK CAPITAL LETTER KAPPA": 922,
      "GREEK CAPITAL LETTER LAMBDA": 923,
      "GREEK CAPITAL LETTER MU": 924,
      "GREEK CAPITAL LETTER NU": 925,
      "GREEK CAPITAL LETTER XI": 926,
      "GREEK CAPITAL LETTER OMICRON": 927,
      "GREEK CAPITAL LETTER PI": 928,
      "GREEK CAPITAL LETTER RHO": 929,
      "GREEK CAPITAL LETTER SIGMA": 931,
      "GREEK CAPITAL LETTER TAU": 932,
      "GREEK CAPITAL LETTER UPSILON": 933,
      "GREEK CAPITAL LETTER PHI": 934,
      "GREEK CAPITAL LETTER CHI": 935,
      "GREEK CAPITAL LETTER PSI": 936,
      "GREEK CAPITAL LETTER OMEGA": 937,
      "GREEK SMALL LETTER ALPHA": 945,
      "GREEK SMALL LETTER BETA": 946,
      "GREEK SMALL LETTER GAMMA": 947,
      "GREEK SMALL LETTER DELTA": 948,
      "GREEK SMALL LETTER EPSILON": 949,
      "GREEK SMALL LETTER ZETA": 950,
      "GREEK SMALL LETTER ETA": 951,
      "GREEK SMALL LETTER THETA": 952,
      "GREEK SMALL LETTER IOTA": 953,
      "GREEK SMALL LETTER KAPPA": 954,
      "GREEK SMALL LETTER LAMBDA": 955,
      "GREEK SMALL LETTER MU": 956,
      "GREEK SMALL LETTER NU": 957,
      "GREEK SMALL LETTER XI": 958,
      "GREEK SMALL LETTER OMICRON": 959,
      "GREEK SMALL LETTER PI": 960,
      "GREEK SMALL LETTER RHO": 961,
      "GREEK SMALL LETTER FINAL SIGMA": 962,
      "GREEK SMALL LETTER SIGMA": 963,
      "GREEK SMALL LETTER TAU": 964,
      "GREEK SMALL LETTER UPSILON": 965,
      "GREEK SMALL LETTER PHI": 966,
      "GREEK SMALL LETTER CHI": 967,
      "GREEK SMALL LETTER PSI": 968,
      "GREEK SMALL LETTER OMEGA": 969
    };
    var headedArrows = {
      "RIGHTWARDS TWO HEADED ARROW": 8608,
      "DOWNWARDS TWO HEADED ARROW": 8609,
      "LEFTWARDS TWO HEADED ARROW": 8606,
      "UPWARDS TWO HEADED ARROW": 8607,
      "RIGHTWARDS TWO-HEADED ARROW FROM BAR": 10501,
      "RIGHTWARDS TWO-HEADED ARROW WITH TAIL": 10518,
      "LEFTWARDS TWO-HEADED ARROW FROM BAR": 11062,
      "LEFTWARDS TWO-HEADED ARROW WITH TAIL": 11067,
      "LEFTWARDS OPEN-HEADED ARROW": 8701,
      "RIGHTWARDS OPEN-HEADED ARROW": 8702,
      "LEFT RIGHT OPEN-HEADED ARROW": 8703,
      "TRIANGLE-HEADED RIGHTWARDS ARROW": 10141,
      "LEFTWARDS TRIANGLE-HEADED ARROW": 11104,
      "UPWARDS TRIANGLE-HEADED ARROW": 11105,
      "RIGHTWARDS TRIANGLE-HEADED ARROW": 11106,
      "DOWNWARDS TRIANGLE-HEADED ARROW": 11107,
      "LEFT RIGHT TRIANGLE-HEADED ARROW": 11108,
      "UP DOWN TRIANGLE-HEADED ARROW": 11109,
      "RIGHTWARDS TRIANGLE-HEADED ARROW OVER LEFTWARDS TRIANGLE-HEADED ARROW": 11138,
      "DOWNWARDS TRIANGLE-HEADED ARROW LEFTWARDS OF UPWARDS TRIANGLE-HEADED ARROW": 11139
    };
    var miscellaneous = {
      "PLUS SIGN IN LEFT HALF CIRCLE": 10797,
      "PLUS SIGN IN RIGHT HALF CIRCLE": 10798,
      "VERTICAL LINE": 124,
      "TURNED AMPERSAND": 8523,
      "END OF PROOF": 8718,
      THEREFORE: 8756,
      BECAUSE: 8757,
      RATIO: 8758,
      PROPORTION: 8759,
      EXCESS: 8761,
      "GEOMETRIC PROPORTION": 8762,
      "HERMITIAN CONJUGATE MATRIX": 8889,
      INTERCALATE: 8890,
      PITCHFORK: 8916,
      "VERTICAL ELLIPSIS": 8942,
      "MIDLINE HORIZONTAL ELLIPSIS": 8943,
      "UP RIGHT DIAGONAL ELLIPSIS": 8944,
      "DOWN RIGHT DIAGONAL ELLIPSIS": 8945,
      BOWTIE: 8904,
      "BOWTIE WITH LEFT HALF BLACK": 10705,
      "BOWTIE WITH RIGHT HALF BLACK": 10706,
      "LOWER RIGHT CORNER WITH DOT": 10195,
      "UPPER LEFT CORNER WITH DOT": 10196,
      "LOZENGE DIVIDED BY HORIZONTAL RULE": 10208,
      "LEFT FISH TAIL": 10620,
      "RIGHT FISH TAIL": 10621,
      "UP FISH TAIL": 10622,
      "DOWN FISH TAIL": 10623,
      "DOTTED FENCE": 10649,
      "TWO JOINED SQUARES": 10697,
      "WHITE HOURGLASS": 10710,
      "BLACK HOURGLASS": 10711,
      "GLEICH STARK": 10726,
      THERMODYNAMIC: 10727,
      "BLACK LOZENGE": 10731,
      "RULE-DELAYED": 10740,
      "MODULO TWO SUM": 10762,
      "CIRCULATION FUNCTION": 10768,
      "VERTICAL ZIGZAG LINE": 10650,
      "PITCHFORK WITH TEE TOP": 10970,
      FORKING: 10972,
      NONFORKING: 10973,
      "DOUBLE STROKE NOT SIGN": 10988,
      "REVERSED DOUBLE STROKE NOT SIGN": 10989,
      "DOES NOT DIVIDE WITH REVERSED NEGATION SLASH": 10990,
      "VERTICAL LINE WITH CIRCLE ABOVE": 10991,
      "VERTICAL LINE WITH CIRCLE BELOW": 10992,
      "LEFT TRIANGLE BESIDE VERTICAL BAR": 10703,
      "VERTICAL BAR BESIDE RIGHT TRIANGLE": 10704,
      "LARGE TRIPLE VERTICAL BAR OPERATOR": 11004,
      "TRIPLE VERTICAL BAR RIGHT TURNSTILE": 8874,
      "TRIPLE VERTICAL BAR DELIMITER": 10624,
      "TRIPLE VERTICAL BAR BINARY RELATION": 10996,
      "TRIPLE VERTICAL BAR WITH HORIZONTAL STROKE": 10997
    };
    var classTheoretic = {
      INFINITY: 8734,
      "INCOMPLETE INFINITY": 10716,
      "INFINITY NEGATED WITH VERTICAL BAR": 10718,
      "EMPTY-SET": 8709,
      "REVERSED EMPTY SET": 10672,
      "EMPTY SET WITH OVERBAR": 10673,
      UNION: 8746,
      INTERSECTION: 8745,
      "DOUBLE UNION": 8915,
      "DOUBLE INTERSECTION": 8914,
      "UNION WITH OVERBAR": 10818,
      "INTERSECTION WITH OVERBAR": 10819,
      "DOUBLE SQUARE UNION": 10831,
      "DOUBLE SQUARE INTERSECTION": 10830,
      "UNION ABOVE INTERSECTION": 10822,
      "INTERSECTION ABOVE UNION": 10823,
      "UNION ABOVE BAR ABOVE INTERSECTION": 10824,
      "INTERSECTION ABOVE BAR ABOVE UNION": 10825,
      "INTERSECTION WITH DOT": 10816,
      "TRANSVERSAL INTERSECTION": 10971,
      "OPEN SUBSET": 10179,
      "OPEN SUPERSET": 10180,
      "CLOSED SUBSET": 10959,
      "CLOSED SUPERSET": 10960,
      "SUBSET ABOVE SUPERSET": 10963,
      "SUPERSET ABOVE SUBSET": 10964,
      "SUBSET ABOVE SUBSET": 10965,
      "SUPERSET ABOVE SUPERSET": 10966,
      "SUBSET ABOVE RIGHTWARDS ARROW": 10617,
      "SUPERSET ABOVE LEFTWARDS ARROW": 10619,
      "SUBSET OF": 8834,
      "SUPERSET OF": 8835,
      "NOT A SUBSET OF": 8836,
      "NOT A SUPERSET OF": 8837,
      "SUBSET OF OR EQUAL TO": 8838,
      "SUPERSET OF OR EQUAL TO": 8839,
      "SUBSET OF ABOVE TILDE OPERATOR": 10951,
      "SUPERSET OF ABOVE TILDE OPERATOR": 10952,
      "SUBSET OF ABOVE NOT EQUAL TO": 10955,
      "SUPERSET OF ABOVE NOT EQUAL TO": 10956,
      "SUBSET OF WITH NOT EQUAL TO": 8842,
      "SUPERSET OF WITH NOT EQUAL TO": 8843,
      "SUBSET OF ABOVE ALMOST EQUAL TO": 10953,
      "SUPERSET OF ABOVE ALMOST EQUAL TO": 10954,
      "SUBSET OF OR EQUAL TO WITH DOT ABOVE": 10947,
      "SUPERSET OF OR EQUAL TO WITH DOT ABOVE": 10948,
      "SUBSET OF ABOVE EQUALS SIGN": 10949,
      "SUPERSET OF ABOVE EQUALS SIGN": 10950,
      "CLOSED SUBSET OR EQUAL TO": 10961,
      "CLOSED SUPERSET OR EQUAL TO": 10962,
      "NEITHER A SUBSET OF NOR EQUAL TO": 8840,
      "NEITHER A SUPERSET OF NOR EQUAL TO": 8841,
      "SUPERSET BESIDE SUBSET": 10967,
      "SUPERSET BESIDE AND JOINED BY DASH WITH SUBSET": 10968,
      "DOUBLE SUBSET": 8912,
      "DOUBLE SUPERSET": 8913,
      "SUBSET WITH DOT": 10941,
      "SUPERSET WITH DOT": 10942,
      "REVERSE SOLIDUS PRECEDING SUBSET": 10184,
      "SUPERSET PRECEDING SOLIDUS": 10185,
      "SUBSET WITH PLUS SIGN BELOW": 10943,
      "SUPERSET WITH PLUS SIGN BELOW": 10944,
      "SUBSET WITH MULTIPLICATION SIGN BELOW": 10945,
      "SUPERSET WITH MULTIPLICATION SIGN BELOW": 10946,
      "ELEMENT OF": 8712,
      "NOT ELEMENT OF": 8713,
      "SMALL ELEMENT OF": 8714,
      "ELEMENT OF WITH DOT ABOVE": 8949,
      "ELEMENT OF WITH OVERBAR": 8950,
      "SMALL ELEMENT OF WITH OVERBAR": 8951,
      "ELEMENT OF WITH UNDERBAR": 8952,
      "ELEMENT OF OPENING UPWARDS": 10194,
      "ELEMENT OF OPENING DOWNWARDS": 10969,
      CONTAINS: 8715,
      "DOES NOT-CONTAIN": 8716,
      "CONTAINS WITH OVERBAR": 8957,
      "CONTAINS WITH LONG HORIZONTAL STROKE": 8954,
      "CONTAINS WITH VERTICAL BAR AT END OF HORIZONTAL STROKE": 8955,
      "POWER-SET": 8505,
      DISJOINT: 8852,
      MULTISET: 8844,
      COMPLEMENT: 8705,
      "DISJOINT-SETS": 8904,
      "SET-DIFFERENCE": 8726,
      "SYMMETRIC-DIFFERENCE": 8891,
      "MULTISET MULTIPLICATION": 8845,
      "Z NOTATION BAG MEMBERSHIP": 8959,
      "Z NOTATION TYPE COLON": 10626,
      "Z NOTATION SCHEMA COMPOSITION": 10783,
      "Z NOTATION SCHEMA PIPING": 10784,
      "Z NOTATION SCHEMA PROJECTION": 10785,
      "Z NOTATION RELATIONAL COMPOSITION": 10814,
      "Z NOTATION DOMAIN ANTIRESTRICTION": 10852,
      "Z NOTATION RANGE ANTIRESTRICTION": 10853
    };
    var logicalOperators = {
      "LOGICAL AND": 8743,
      "LOGICAL OR": 8744,
      NEGATION: 172,
      IMPLIES: 8594,
      "IF AND ONLY IF": 8660,
      "UNIVERSAL QUANTIFIER": 8704,
      "EXISTENTIAL QUANTIFIER": 8707,
      NAND: 8892,
      NOR: 8893,
      "LOGICAL XOR": 8891,
      "PEIRCE ARROW": 8869,
      NECESSITY: 9671,
      POSSIBILITY: 9633,
      EVENTUALLY: 8902,
      ALWAYS: 9632,
      NEXT: 9675,
      UNTIL: 85,
      ASSERTION: 8870,
      MODELS: 8871,
      TRUE: 8872,
      FORCES: 8873,
      "DOES NOT PROVE": 8876,
      "NOT TRUE": 8877,
      "DOES NOT FORCE": 8878,
      "N-ARY LOGICAL AND": 8896,
      "N-ARY LOGICAL OR": 8897,
      "CURLY LOGICAL OR": 8910,
      "CURLY LOGICAL AND": 8911,
      "SLOPING LARGE OR": 10839,
      "SLOPING LARGE AND": 10840,
      "LOGICAL AND WITH MIDDLE STEM": 10842,
      "LOGICAL OR WITH MIDDLE STEM": 10843,
      "LOGICAL AND WITH HORIZONTAL DASH": 10844,
      "LOGICAL OR WITH HORIZONTAL DASH": 10845,
      "LOGICAL AND WITH DOUBLE OVERBAR": 10846,
      "LOGICAL OR WITH DOUBLE OVERBAR": 10850,
      "LOGICAL AND WITH UNDERBAR": 10847,
      "LOGICAL AND WITH DOUBLE UNDERBAR": 10848,
      "LOGICAL OR WITH DOUBLE UNDERBAR": 10851
    };
    var circlesOrCircled = {
      "BLACK CIRCLE": 9679,
      "WHITE CIRCLE": 9675,
      "MEDIUM BLACK CIRCLE": 9899,
      "MEDIUM WHITE CIRCLE": 9898,
      "DOTTED CIRCLE": 9676,
      "LARGE CIRCLE": 9711,
      "HEAVY CIRCLE": 11096,
      "CIRCLED PLUS": 8853,
      "CIRCLED TIMES": 8855,
      "CIRCLED DIVISION SLASH": 8856,
      "CIRCLED DOT OPERATOR": 8857,
      "CIRCLED RING OPERATOR": 8858,
      "CIRCLED ASTERISK OPERATOR": 8859,
      "CIRCLED DASH": 8861,
      "CIRCLED VERTICAL BAR": 10678,
      "CIRCLED PARALLEL": 10679,
      "CIRCLED REVERSE SOLIDUS": 10680,
      "CIRCLED PERPENDICULAR": 10681,
      "CIRCLED EQUALS": 8860,
      "CIRCLED BULLET": 10687,
      "CIRCLED LESS-THAN": 10688,
      "CIRCLED GREATER-THAN": 10689,
      "CIRCLED DIVISION SIGN": 10808
    };
    var tacksAndTurnstiles = {
      "RIGHT TACK": 8866,
      "LEFT TACK": 8867,
      "DOWN TACK": 8868,
      "UP TACK": 8869,
      "LARGE UP TACK": 10200,
      "LARGE DOWN TACK": 10201,
      "LEFT AND RIGHT TACK": 10203,
      "LONG RIGHT TACK": 10205,
      "LONG LEFT TACK": 10206,
      "SHORT LEFT TACK": 10974,
      "SHORT DOWN TACK": 10975,
      "SHORT UP TACK": 10976,
      "SHORT DOWN TACK WITH OVERBAR": 10983,
      "SHORT UP TACK WITH UNDERBAR": 10984,
      "SHORT UP TACK ABOVE SHORT DOWN TACK": 10985,
      "UP TACK WITH CIRCLE ABOVE": 10207,
      "DOWN TACK WITH CIRCLE BELOW": 10993,
      "DOUBLE UP TACK": 10987,
      "DOUBLE DOWN TACK": 10986,
      "LEFT AND RIGHT DOUBLE TURNSTILE": 10202,
      "DOUBLE VERTICAL BAR DOUBLE RIGHT TURNSTILE": 8875,
      "NEGATED DOUBLE VERTICAL BAR DOUBLE RIGHT TURNSTILE": 8879,
      "DOUBLE VERTICAL BAR LEFT TURNSTILE": 10979,
      "VERTICAL BAR DOUBLE LEFT TURNSTILE": 10980,
      "DOUBLE VERTICAL BAR DOUBLE LEFT TURNSTILE": 10981,
      "VERTICAL BAR TRIPLE RIGHT TURNSTILE": 10978
    };
    var doubleAndTripleArrows = {
      "LEFTWARDS DOUBLE ARROW": 8656,
      "UPWARDS DOUBLE ARROW": 8657,
      "RIGHTWARDS DOUBLE ARROW": 8658,
      "DOWNWARDS DOUBLE ARROW": 8659,
      "LEFT RIGHT DOUBLE ARROW": 8660,
      "UP DOWN DOUBLE ARROW": 8661,
      "NORTH WEST DOUBLE ARROW": 8662,
      "NORTH EAST DOUBLE ARROW": 8663,
      "SOUTH EAST DOUBLE ARROW": 8664,
      "SOUTH WEST DOUBLE ARROW": 8665,
      "LONG LEFTWARDS DOUBLE ARROW": 10232,
      "LONG RIGHTWARDS DOUBLE ARROW": 10233,
      "LONG LEFT RIGHT DOUBLE ARROW": 10234,
      "LEFTWARDS DOUBLE ARROW WITH STROKE": 8653,
      "LEFT RIGHT DOUBLE ARROW WITH STROKE": 8654,
      "RIGHTWARDS DOUBLE ARROW WITH STROKE": 8655,
      "LEFTWARDS DOUBLE ARROW FROM BAR": 10502,
      "RIGHTWARDS DOUBLE ARROW FROM BAR": 10503,
      "LEFTWARDS DOUBLE ARROW-TAIL": 10523,
      "RIGHTWARDS DOUBLE ARROW-TAIL": 10524,
      "RIGHT DOUBLE ARROW WITH ROUNDED HEAD": 10608,
      "LEFTWARDS TRIPLE ARROW": 8666,
      "RIGHTWARDS TRIPLE ARROW": 8667,
      "UPWARDS TRIPLE ARROW": 10506,
      "DOWNWARDS TRIPLE ARROW": 10507
    };
    var parenthesesAndBrackets = {
      "LEFT DOUBLE ANGLE BRACKET": 12296,
      "RIGHT DOUBLE ANGLE BRACKET": 12297,
      "LEFT ANGLE BRACKET": 9001,
      "RIGHT ANGLE BRACKET": 9002,
      "LEFT PARENTHESIS UPPER HOOK": 9115,
      "LEFT PARENTHESIS EXTENSION": 9116,
      "LEFT PARENTHESIS LOWER HOOK": 9117,
      "RIGHT PARENTHESIS UPPER HOOK": 9118,
      "RIGHT PARENTHESIS EXTENSION": 9119,
      "RIGHT PARENTHESIS LOWER HOOK": 9120,
      "TOP PARENTHESIS": 9180,
      "BOTTOM PARENTHESIS": 9181,
      "TOP CURLY BRACKET": 9182,
      "BOTTOM CURLY BRACKET": 9183,
      "TOP TORTOISE SHELL BRACKET": 9184,
      "BOTTOM TORTOISE SHELL BRACKET": 9185,
      "LEFT SQUARE BRACKET UPPER CORNER": 9121,
      "LEFT SQUARE BRACKET EXTENSION": 9122,
      "LEFT SQUARE BRACKET LOWER CORNER": 9123,
      "RIGHT SQUARE BRACKET UPPER CORNER": 9124,
      "RIGHT SQUARE BRACKET EXTENSION": 9125,
      "RIGHT SQUARE BRACKET LOWER CORNER": 9126,
      "LEFT CURLY BRACKET UPPER HOOK": 9127,
      "LEFT CURLY BRACKET MIDDLE PIECE": 9128,
      "LEFT CURLY BRACKET LOWER HOOK": 9129,
      "CURLY BRACKET EXTENSION": 9130,
      "RIGHT CURLY BRACKET UPPER HOOK": 9131,
      "RIGHT CURLY BRACKET MIDDLE PIECE": 9132,
      "RIGHT CURLY BRACKET LOWER HOOK": 9133,
      "UPPER LEFT OR LOWER RIGHT CURLY BRACKET SECTION": 9136,
      "UPPER RIGHT OR LOWER LEFT CURLY BRACKET SECTION": 9137
    };
    var superscriptsAndSubscripts = {
      "SUPERSCRIPT ZERO": 8304,
      "SUPERSCRIPT ONE": 185,
      "SUPERSCRIPT TWO": 178,
      "SUPERSCRIPT THREE": 179,
      "SUPERSCRIPT FOUR": 8308,
      "SUPERSCRIPT FIVE": 8309,
      "SUPERSCRIPT SIX": 8310,
      "SUPERSCRIPT SEVEN": 8311,
      "SUPERSCRIPT EIGHT": 8312,
      "SUPERSCRIPT NINE": 8313,
      "SUPERSCRIPT PLUS SIGN": 8314,
      "SUPERSCRIPT MINUS": 8315,
      "SUPERSCRIPT LEFT PARENTHESIS": 8317,
      "SUPERSCRIPT RIGHT PARENTHESIS": 8318,
      "SUBSCRIPT ZERO": 8320,
      "SUBSCRIPT ONE": 8321,
      "SUBSCRIPT TWO": 8322,
      "SUBSCRIPT THREE": 8323,
      "SUBSCRIPT FOUR": 8324,
      "SUBSCRIPT FIVE": 8325,
      "SUBSCRIPT SIX": 8326,
      "SUBSCRIPT SEVEN": 8327,
      "SUBSCRIPT EIGHT": 8328,
      "SUBSCRIPT NINE": 8329,
      "SUBSCRIPT PLUS SIGN": 8330,
      "SUBSCRIPT MINUS": 8331,
      "SUBSCRIPT LEFT PARENTHESIS": 8333,
      "SUBSCRIPT RIGHT PARENTHESIS": 8334,
      "SUPERSCRIPT EQUALS SIGN": 8316,
      "SUBSCRIPT EQUALS SIGN": 8332
    };
    var symbolicCharacterMap = _object_spread({}, shapes, angles, arrows, harpoons, equality, ordering, calculus, relational, arithmetic, greekLetters, headedArrows, miscellaneous, classTheoretic, logicalOperators, circlesOrCircled, tacksAndTurnstiles, doubleAndTripleArrows, parenthesesAndBrackets, superscriptsAndSubscripts);
    var _default = symbolicCharacterMap;
  });

  // lib/characterMaps/symbolic.js
  var require_symbolic2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _symbolic = require_symbolic();
    var symbolicCharacterMaps = {
      shapes: _symbolic.shapes,
      angles: _symbolic.angles,
      arrows: _symbolic.arrows,
      harpoons: _symbolic.harpoons,
      equality: _symbolic.equality,
      ordering: _symbolic.ordering,
      calculus: _symbolic.calculus,
      relational: _symbolic.relational,
      arithmetic: _symbolic.arithmetic,
      greekLetters: _symbolic.greekLetters,
      headedArrows: _symbolic.headedArrows,
      miscellaneous: _symbolic.miscellaneous,
      classTheoretic: _symbolic.classTheoretic,
      logicalOperators: _symbolic.logicalOperators,
      circlesOrCircled: _symbolic.circlesOrCircled,
      tacksAndTurnstiles: _symbolic.tacksAndTurnstiles,
      doubleAndTripleArrows: _symbolic.doubleAndTripleArrows,
      parenthesesAndBrackets: _symbolic.parenthesesAndBrackets,
      superscriptsAndSubscripts: _symbolic.superscriptsAndSubscripts
    };
    var _default = symbolicCharacterMaps;
  });

  // lib/characterMaps/alphaNumeric.js
  var require_alphaNumeric = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return _default;
      },
      get doubleStruck() {
        return doubleStruck;
      },
      get fraktur() {
        return fraktur;
      },
      get monospace() {
        return monospace;
      },
      get sansSerif() {
        return sansSerif;
      },
      get sansSerifBold() {
        return sansSerifBold;
      },
      get sansSerifBoldItalic() {
        return sansSerifBoldItalic;
      },
      get sansSerifItalic() {
        return sansSerifItalic;
      },
      get script() {
        return script;
      },
      get serifBold() {
        return serifBold;
      },
      get serifBoldItalic() {
        return serifBoldItalic;
      },
      get serifItalic() {
        return serifItalic;
      }
    });
    var script = {
      A: 119964,
      B: 8492,
      C: 119966,
      D: 119967,
      E: 8496,
      F: 8497,
      G: 119970,
      H: 8459,
      I: 8464,
      J: 119973,
      K: 119974,
      L: 8466,
      M: 8499,
      N: 119977,
      O: 119978,
      P: 119979,
      Q: 119980,
      R: 8475,
      S: 119982,
      T: 119983,
      U: 119984,
      V: 119985,
      W: 119986,
      X: 119987,
      Y: 119988,
      Z: 119989,
      a: 119990,
      b: 119991,
      c: 119992,
      d: 119993,
      e: 120046,
      f: 119995,
      g: 8458,
      h: 119997,
      i: 119998,
      j: 119999,
      k: 12e4,
      l: 120001,
      m: 120002,
      n: 120003,
      o: 8500,
      p: 120005,
      q: 120006,
      r: 120007,
      s: 120008,
      t: 120009,
      u: 120010,
      v: 120011,
      w: 120012,
      x: 120013,
      y: 120014,
      z: 120015
    };
    var fraktur = {
      A: 120068,
      B: 120069,
      D: 120071,
      E: 120072,
      F: 120073,
      G: 120074,
      J: 120077,
      K: 120078,
      L: 120079,
      M: 120080,
      N: 120081,
      O: 120082,
      P: 120083,
      Q: 120084,
      S: 120086,
      T: 120087,
      U: 120088,
      V: 120089,
      W: 120090,
      X: 120091,
      Y: 120092,
      a: 120094,
      b: 120095,
      c: 120096,
      d: 120097,
      e: 120098,
      f: 120099,
      g: 120100,
      h: 120101,
      i: 120102,
      j: 120103,
      k: 120104,
      l: 120105,
      m: 120106,
      n: 120107,
      o: 120108,
      p: 120109,
      q: 120110,
      r: 120111,
      s: 120112,
      t: 120113,
      u: 120114,
      v: 120115,
      w: 120116,
      x: 120117,
      y: 120118,
      z: 120119
    };
    var monospace = {
      A: 120432,
      B: 120433,
      C: 120434,
      D: 120435,
      E: 120436,
      F: 120437,
      G: 120438,
      H: 120439,
      I: 120440,
      J: 120441,
      K: 120442,
      L: 120443,
      M: 120444,
      N: 120445,
      O: 120446,
      P: 120447,
      Q: 120448,
      R: 120449,
      S: 120450,
      T: 120451,
      U: 120452,
      V: 120453,
      W: 120454,
      X: 120455,
      Y: 120456,
      Z: 120457,
      a: 120458,
      b: 120459,
      c: 120460,
      d: 120461,
      e: 120462,
      f: 120463,
      g: 120464,
      h: 120465,
      i: 120466,
      j: 120467,
      k: 120468,
      l: 120469,
      m: 120470,
      n: 120471,
      o: 120472,
      p: 120473,
      q: 120474,
      r: 120475,
      s: 120476,
      t: 120477,
      u: 120478,
      v: 120479,
      w: 120480,
      x: 120481,
      y: 120482,
      z: 120483,
      "0": 120822,
      "1": 120823,
      "2": 120824,
      "3": 120825,
      "4": 120826,
      "5": 120827,
      "6": 120828,
      "7": 120829,
      "8": 120830,
      "9": 120831
    };
    var doubleStruck = {
      A: 120120,
      B: 120121,
      C: 8450,
      D: 120123,
      E: 120124,
      F: 120125,
      G: 120126,
      H: 8461,
      I: 120128,
      J: 120129,
      K: 120130,
      L: 120131,
      M: 120132,
      N: 8469,
      O: 120134,
      P: 8473,
      Q: 8474,
      R: 8477,
      S: 120138,
      T: 120139,
      U: 120140,
      V: 120141,
      W: 120142,
      X: 120143,
      Y: 120144,
      Z: 8484
    };
    var serifBold = {
      A: 119808,
      B: 119809,
      C: 119810,
      D: 119811,
      E: 119812,
      F: 119813,
      G: 119814,
      H: 119815,
      I: 119816,
      J: 119817,
      K: 119818,
      L: 119819,
      M: 119820,
      N: 119821,
      O: 119822,
      P: 119823,
      Q: 119824,
      R: 119825,
      S: 119826,
      T: 119827,
      U: 119828,
      V: 119829,
      W: 119830,
      X: 119831,
      Y: 119832,
      Z: 119833,
      a: 119834,
      b: 119835,
      c: 119836,
      d: 119837,
      e: 119838,
      f: 119839,
      g: 119840,
      h: 119841,
      i: 119842,
      j: 119843,
      k: 119844,
      l: 119845,
      m: 119846,
      n: 119847,
      o: 119848,
      p: 119849,
      q: 119856,
      r: 119857,
      s: 119858,
      t: 119859,
      u: 119860,
      v: 119861,
      w: 119862,
      x: 119863,
      y: 119864,
      z: 119865,
      "0": 120782,
      "1": 120783,
      "2": 120784,
      "3": 120785,
      "4": 120786,
      "5": 120787,
      "6": 120788,
      "7": 120789,
      "8": 120790,
      "9": 120791
    };
    var serifItalic = {
      A: 119860,
      B: 119861,
      C: 119862,
      D: 119863,
      E: 119864,
      F: 119865,
      G: 119866,
      H: 119867,
      I: 119868,
      J: 119869,
      K: 119870,
      L: 119871,
      M: 119872,
      N: 119873,
      O: 119874,
      P: 119875,
      Q: 119876,
      R: 119877,
      S: 119878,
      T: 119879,
      U: 119880,
      V: 119881,
      W: 119882,
      X: 119883,
      Y: 119884,
      Z: 119885,
      a: 119886,
      b: 119887,
      c: 119888,
      d: 119889,
      e: 119890,
      f: 119891,
      g: 119892,
      h: 8462,
      i: 119894,
      j: 119895,
      k: 119896,
      l: 119897,
      m: 119898,
      n: 119899,
      o: 119900,
      p: 119901,
      q: 119902,
      r: 119903,
      s: 119904,
      t: 119905,
      u: 119906,
      v: 119907,
      w: 119908,
      x: 119909,
      y: 119910,
      z: 119911
    };
    var serifBoldItalic = {
      A: 119912,
      B: 119913,
      C: 119914,
      D: 119915,
      E: 119916,
      F: 119917,
      G: 119918,
      H: 119919,
      I: 119920,
      J: 119921,
      K: 119922,
      L: 119923,
      M: 119924,
      N: 119925,
      O: 119926,
      P: 119927,
      Q: 119928,
      R: 119929,
      S: 119930,
      T: 119931,
      U: 119932,
      V: 119933,
      W: 119934,
      X: 119935,
      Y: 119936,
      Z: 119937,
      a: 119938,
      b: 119939,
      c: 119940,
      d: 119941,
      e: 119942,
      f: 119943,
      g: 119944,
      h: 119945,
      i: 119946,
      j: 119947,
      k: 119948,
      l: 119949,
      m: 119950,
      n: 119951,
      o: 119952,
      p: 119953,
      q: 119954,
      r: 119955,
      s: 119956,
      t: 119957,
      u: 119958,
      v: 119959,
      w: 119960,
      x: 119961,
      y: 119962,
      z: 119963
    };
    var sansSerif = {
      A: 120224,
      B: 120225,
      C: 120226,
      D: 120227,
      E: 120228,
      F: 120229,
      G: 120230,
      H: 120231,
      I: 120232,
      J: 120233,
      K: 120234,
      L: 120235,
      M: 120236,
      N: 120237,
      O: 120238,
      P: 120239,
      Q: 120240,
      R: 120241,
      S: 120242,
      T: 120243,
      U: 120244,
      V: 120245,
      W: 120246,
      X: 120247,
      Y: 120248,
      Z: 120249,
      a: 120250,
      b: 120251,
      c: 120252,
      d: 120253,
      e: 120254,
      f: 120255,
      g: 120256,
      h: 120257,
      i: 120258,
      j: 120259,
      k: 120260,
      l: 120261,
      m: 120262,
      n: 120263,
      o: 120264,
      p: 120265,
      q: 120266,
      r: 120267,
      s: 120268,
      t: 120269,
      u: 120270,
      v: 120271,
      w: 120272,
      x: 120273,
      y: 120274,
      z: 120275,
      "0": 120802,
      "1": 120803,
      "2": 120804,
      "3": 120805,
      "4": 120806,
      "5": 120807,
      "6": 120808,
      "7": 120809,
      "8": 120810,
      "9": 120811
    };
    var sansSerifBold = {
      A: 120276,
      B: 120277,
      C: 120278,
      D: 120279,
      E: 120280,
      F: 120281,
      G: 120282,
      H: 120283,
      I: 120284,
      J: 120285,
      K: 120286,
      L: 120287,
      M: 120288,
      N: 120289,
      O: 120290,
      P: 120291,
      Q: 120292,
      R: 120293,
      S: 120294,
      T: 120295,
      U: 120296,
      V: 120297,
      W: 120298,
      X: 120299,
      Y: 120300,
      Z: 120301,
      a: 120302,
      b: 120303,
      c: 120304,
      d: 120305,
      e: 120306,
      f: 120307,
      g: 120308,
      h: 120309,
      i: 120310,
      j: 120311,
      k: 120312,
      l: 120313,
      m: 120314,
      n: 120315,
      o: 120316,
      p: 120317,
      q: 120318,
      r: 120319,
      s: 120320,
      t: 120321,
      u: 120322,
      v: 120323,
      w: 120324,
      x: 120325,
      y: 120326,
      z: 120327,
      "0": 120812,
      "1": 120813,
      "2": 120814,
      "3": 120815,
      "4": 120816,
      "5": 120817,
      "6": 120818,
      "7": 120819,
      "8": 120820,
      "9": 120821
    };
    var sansSerifItalic = {
      A: 120328,
      B: 120329,
      C: 120330,
      D: 120331,
      E: 120332,
      F: 120333,
      G: 120334,
      H: 120335,
      I: 120336,
      J: 120337,
      K: 120338,
      L: 120339,
      M: 120340,
      N: 120341,
      O: 120342,
      P: 120343,
      Q: 120344,
      R: 120345,
      S: 120346,
      T: 120347,
      U: 120348,
      V: 120349,
      W: 120350,
      X: 120351,
      Y: 120352,
      Z: 120353,
      a: 120354,
      b: 120355,
      c: 120356,
      d: 120357,
      e: 120358,
      f: 120359,
      g: 120360,
      h: 120361,
      i: 120362,
      j: 120363,
      k: 120364,
      l: 120365,
      m: 120366,
      n: 120367,
      o: 120368,
      p: 120369,
      q: 120370,
      r: 120371,
      s: 120372,
      t: 120373,
      u: 120374,
      v: 120375,
      w: 120376,
      x: 120377,
      y: 120378,
      z: 120379
    };
    var sansSerifBoldItalic = {
      A: 120380,
      B: 120381,
      C: 120382,
      D: 120383,
      E: 120384,
      F: 120385,
      G: 120386,
      H: 120387,
      I: 120388,
      J: 120389,
      K: 120390,
      L: 120391,
      M: 120392,
      N: 120393,
      O: 120394,
      P: 120395,
      Q: 120396,
      R: 120397,
      S: 120398,
      T: 120399,
      U: 120400,
      V: 120401,
      W: 120402,
      X: 120403,
      Y: 120404,
      Z: 120405,
      a: 120406,
      b: 120407,
      c: 120408,
      d: 120409,
      e: 120410,
      f: 120411,
      g: 120412,
      h: 120413,
      i: 120414,
      j: 120415,
      k: 120416,
      l: 120417,
      m: 120418,
      n: 120419,
      o: 120420,
      p: 120421,
      q: 120422,
      r: 120423,
      s: 120424,
      t: 120425,
      u: 120426,
      v: 120427,
      w: 120428,
      x: 120429,
      y: 120430,
      z: 120431
    };
    var alphaNumericCharacterMaps = {
      script,
      fraktur,
      monospace,
      doubleStruck,
      serifBold,
      serifItalic,
      serifBoldItalic,
      sansSerif,
      sansSerifBold,
      sansSerifItalic,
      sansSerifBoldItalic
    };
    var _default = alphaNumericCharacterMaps;
  });

  // (disabled):fs
  var require_fs = __commonJS(() => {
  });

  // node_modules/opentype.js/dist/opentype.js
  var require_opentype = __commonJS((exports, module) => {
    (function(global, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? factory(exports) : typeof define === "function" && define.amd ? define(["exports"], factory) : (global = global || self, factory(global.opentype = {}));
    })(exports, function(exports2) {
      "use strict";
      /*! https://mths.be/codepointat v0.2.0 by @mathias */
      if (!String.prototype.codePointAt) {
        (function() {
          var defineProperty = function() {
            try {
              var object = {};
              var $defineProperty = Object.defineProperty;
              var result = $defineProperty(object, object, object) && $defineProperty;
            } catch (error) {
            }
            return result;
          }();
          var codePointAt = function(position) {
            if (this == null) {
              throw TypeError();
            }
            var string = String(this);
            var size = string.length;
            var index = position ? Number(position) : 0;
            if (index != index) {
              index = 0;
            }
            if (index < 0 || index >= size) {
              return void 0;
            }
            var first = string.charCodeAt(index);
            var second;
            if (first >= 55296 && first <= 56319 && size > index + 1) {
              second = string.charCodeAt(index + 1);
              if (second >= 56320 && second <= 57343) {
                return (first - 55296) * 1024 + second - 56320 + 65536;
              }
            }
            return first;
          };
          if (defineProperty) {
            defineProperty(String.prototype, "codePointAt", {
              value: codePointAt,
              configurable: true,
              writable: true
            });
          } else {
            String.prototype.codePointAt = codePointAt;
          }
        })();
      }
      var TINF_OK = 0;
      var TINF_DATA_ERROR = -3;
      function Tree() {
        this.table = new Uint16Array(16);
        this.trans = new Uint16Array(288);
      }
      function Data(source, dest) {
        this.source = source;
        this.sourceIndex = 0;
        this.tag = 0;
        this.bitcount = 0;
        this.dest = dest;
        this.destLen = 0;
        this.ltree = new Tree();
        this.dtree = new Tree();
      }
      var sltree = new Tree();
      var sdtree = new Tree();
      var length_bits = new Uint8Array(30);
      var length_base = new Uint16Array(30);
      var dist_bits = new Uint8Array(30);
      var dist_base = new Uint16Array(30);
      var clcidx = new Uint8Array([
        16,
        17,
        18,
        0,
        8,
        7,
        9,
        6,
        10,
        5,
        11,
        4,
        12,
        3,
        13,
        2,
        14,
        1,
        15
      ]);
      var code_tree = new Tree();
      var lengths = new Uint8Array(288 + 32);
      function tinf_build_bits_base(bits, base, delta, first) {
        var i, sum;
        for (i = 0; i < delta; ++i) {
          bits[i] = 0;
        }
        for (i = 0; i < 30 - delta; ++i) {
          bits[i + delta] = i / delta | 0;
        }
        for (sum = first, i = 0; i < 30; ++i) {
          base[i] = sum;
          sum += 1 << bits[i];
        }
      }
      function tinf_build_fixed_trees(lt, dt) {
        var i;
        for (i = 0; i < 7; ++i) {
          lt.table[i] = 0;
        }
        lt.table[7] = 24;
        lt.table[8] = 152;
        lt.table[9] = 112;
        for (i = 0; i < 24; ++i) {
          lt.trans[i] = 256 + i;
        }
        for (i = 0; i < 144; ++i) {
          lt.trans[24 + i] = i;
        }
        for (i = 0; i < 8; ++i) {
          lt.trans[24 + 144 + i] = 280 + i;
        }
        for (i = 0; i < 112; ++i) {
          lt.trans[24 + 144 + 8 + i] = 144 + i;
        }
        for (i = 0; i < 5; ++i) {
          dt.table[i] = 0;
        }
        dt.table[5] = 32;
        for (i = 0; i < 32; ++i) {
          dt.trans[i] = i;
        }
      }
      var offs = new Uint16Array(16);
      function tinf_build_tree(t, lengths2, off, num) {
        var i, sum;
        for (i = 0; i < 16; ++i) {
          t.table[i] = 0;
        }
        for (i = 0; i < num; ++i) {
          t.table[lengths2[off + i]]++;
        }
        t.table[0] = 0;
        for (sum = 0, i = 0; i < 16; ++i) {
          offs[i] = sum;
          sum += t.table[i];
        }
        for (i = 0; i < num; ++i) {
          if (lengths2[off + i]) {
            t.trans[offs[lengths2[off + i]]++] = i;
          }
        }
      }
      function tinf_getbit(d) {
        if (!d.bitcount--) {
          d.tag = d.source[d.sourceIndex++];
          d.bitcount = 7;
        }
        var bit = d.tag & 1;
        d.tag >>>= 1;
        return bit;
      }
      function tinf_read_bits(d, num, base) {
        if (!num) {
          return base;
        }
        while (d.bitcount < 24) {
          d.tag |= d.source[d.sourceIndex++] << d.bitcount;
          d.bitcount += 8;
        }
        var val = d.tag & 65535 >>> 16 - num;
        d.tag >>>= num;
        d.bitcount -= num;
        return val + base;
      }
      function tinf_decode_symbol(d, t) {
        while (d.bitcount < 24) {
          d.tag |= d.source[d.sourceIndex++] << d.bitcount;
          d.bitcount += 8;
        }
        var sum = 0, cur = 0, len = 0;
        var tag = d.tag;
        do {
          cur = 2 * cur + (tag & 1);
          tag >>>= 1;
          ++len;
          sum += t.table[len];
          cur -= t.table[len];
        } while (cur >= 0);
        d.tag = tag;
        d.bitcount -= len;
        return t.trans[sum + cur];
      }
      function tinf_decode_trees(d, lt, dt) {
        var hlit, hdist, hclen;
        var i, num, length;
        hlit = tinf_read_bits(d, 5, 257);
        hdist = tinf_read_bits(d, 5, 1);
        hclen = tinf_read_bits(d, 4, 4);
        for (i = 0; i < 19; ++i) {
          lengths[i] = 0;
        }
        for (i = 0; i < hclen; ++i) {
          var clen = tinf_read_bits(d, 3, 0);
          lengths[clcidx[i]] = clen;
        }
        tinf_build_tree(code_tree, lengths, 0, 19);
        for (num = 0; num < hlit + hdist; ) {
          var sym = tinf_decode_symbol(d, code_tree);
          switch (sym) {
            case 16:
              var prev = lengths[num - 1];
              for (length = tinf_read_bits(d, 2, 3); length; --length) {
                lengths[num++] = prev;
              }
              break;
            case 17:
              for (length = tinf_read_bits(d, 3, 3); length; --length) {
                lengths[num++] = 0;
              }
              break;
            case 18:
              for (length = tinf_read_bits(d, 7, 11); length; --length) {
                lengths[num++] = 0;
              }
              break;
            default:
              lengths[num++] = sym;
              break;
          }
        }
        tinf_build_tree(lt, lengths, 0, hlit);
        tinf_build_tree(dt, lengths, hlit, hdist);
      }
      function tinf_inflate_block_data(d, lt, dt) {
        while (1) {
          var sym = tinf_decode_symbol(d, lt);
          if (sym === 256) {
            return TINF_OK;
          }
          if (sym < 256) {
            d.dest[d.destLen++] = sym;
          } else {
            var length, dist, offs2;
            var i;
            sym -= 257;
            length = tinf_read_bits(d, length_bits[sym], length_base[sym]);
            dist = tinf_decode_symbol(d, dt);
            offs2 = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);
            for (i = offs2; i < offs2 + length; ++i) {
              d.dest[d.destLen++] = d.dest[i];
            }
          }
        }
      }
      function tinf_inflate_uncompressed_block(d) {
        var length, invlength;
        var i;
        while (d.bitcount > 8) {
          d.sourceIndex--;
          d.bitcount -= 8;
        }
        length = d.source[d.sourceIndex + 1];
        length = 256 * length + d.source[d.sourceIndex];
        invlength = d.source[d.sourceIndex + 3];
        invlength = 256 * invlength + d.source[d.sourceIndex + 2];
        if (length !== (~invlength & 65535)) {
          return TINF_DATA_ERROR;
        }
        d.sourceIndex += 4;
        for (i = length; i; --i) {
          d.dest[d.destLen++] = d.source[d.sourceIndex++];
        }
        d.bitcount = 0;
        return TINF_OK;
      }
      function tinf_uncompress(source, dest) {
        var d = new Data(source, dest);
        var bfinal, btype, res;
        do {
          bfinal = tinf_getbit(d);
          btype = tinf_read_bits(d, 2, 0);
          switch (btype) {
            case 0:
              res = tinf_inflate_uncompressed_block(d);
              break;
            case 1:
              res = tinf_inflate_block_data(d, sltree, sdtree);
              break;
            case 2:
              tinf_decode_trees(d, d.ltree, d.dtree);
              res = tinf_inflate_block_data(d, d.ltree, d.dtree);
              break;
            default:
              res = TINF_DATA_ERROR;
          }
          if (res !== TINF_OK) {
            throw new Error("Data error");
          }
        } while (!bfinal);
        if (d.destLen < d.dest.length) {
          if (typeof d.dest.slice === "function") {
            return d.dest.slice(0, d.destLen);
          } else {
            return d.dest.subarray(0, d.destLen);
          }
        }
        return d.dest;
      }
      tinf_build_fixed_trees(sltree, sdtree);
      tinf_build_bits_base(length_bits, length_base, 4, 3);
      tinf_build_bits_base(dist_bits, dist_base, 2, 1);
      length_bits[28] = 0;
      length_base[28] = 258;
      var tinyInflate = tinf_uncompress;
      function derive(v0, v1, v2, v3, t) {
        return Math.pow(1 - t, 3) * v0 + 3 * Math.pow(1 - t, 2) * t * v1 + 3 * (1 - t) * Math.pow(t, 2) * v2 + Math.pow(t, 3) * v3;
      }
      function BoundingBox() {
        this.x1 = Number.NaN;
        this.y1 = Number.NaN;
        this.x2 = Number.NaN;
        this.y2 = Number.NaN;
      }
      BoundingBox.prototype.isEmpty = function() {
        return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);
      };
      BoundingBox.prototype.addPoint = function(x, y) {
        if (typeof x === "number") {
          if (isNaN(this.x1) || isNaN(this.x2)) {
            this.x1 = x;
            this.x2 = x;
          }
          if (x < this.x1) {
            this.x1 = x;
          }
          if (x > this.x2) {
            this.x2 = x;
          }
        }
        if (typeof y === "number") {
          if (isNaN(this.y1) || isNaN(this.y2)) {
            this.y1 = y;
            this.y2 = y;
          }
          if (y < this.y1) {
            this.y1 = y;
          }
          if (y > this.y2) {
            this.y2 = y;
          }
        }
      };
      BoundingBox.prototype.addX = function(x) {
        this.addPoint(x, null);
      };
      BoundingBox.prototype.addY = function(y) {
        this.addPoint(null, y);
      };
      BoundingBox.prototype.addBezier = function(x0, y0, x1, y1, x2, y2, x, y) {
        var p0 = [x0, y0];
        var p1 = [x1, y1];
        var p2 = [x2, y2];
        var p3 = [x, y];
        this.addPoint(x0, y0);
        this.addPoint(x, y);
        for (var i = 0; i <= 1; i++) {
          var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];
          var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];
          var c = 3 * p1[i] - 3 * p0[i];
          if (a === 0) {
            if (b === 0) {
              continue;
            }
            var t = -c / b;
            if (0 < t && t < 1) {
              if (i === 0) {
                this.addX(derive(p0[i], p1[i], p2[i], p3[i], t));
              }
              if (i === 1) {
                this.addY(derive(p0[i], p1[i], p2[i], p3[i], t));
              }
            }
            continue;
          }
          var b2ac = Math.pow(b, 2) - 4 * c * a;
          if (b2ac < 0) {
            continue;
          }
          var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);
          if (0 < t1 && t1 < 1) {
            if (i === 0) {
              this.addX(derive(p0[i], p1[i], p2[i], p3[i], t1));
            }
            if (i === 1) {
              this.addY(derive(p0[i], p1[i], p2[i], p3[i], t1));
            }
          }
          var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);
          if (0 < t2 && t2 < 1) {
            if (i === 0) {
              this.addX(derive(p0[i], p1[i], p2[i], p3[i], t2));
            }
            if (i === 1) {
              this.addY(derive(p0[i], p1[i], p2[i], p3[i], t2));
            }
          }
        }
      };
      BoundingBox.prototype.addQuad = function(x0, y0, x1, y1, x, y) {
        var cp1x = x0 + 2 / 3 * (x1 - x0);
        var cp1y = y0 + 2 / 3 * (y1 - y0);
        var cp2x = cp1x + 1 / 3 * (x - x0);
        var cp2y = cp1y + 1 / 3 * (y - y0);
        this.addBezier(x0, y0, cp1x, cp1y, cp2x, cp2y, x, y);
      };
      function Path() {
        this.commands = [];
        this.fill = "black";
        this.stroke = null;
        this.strokeWidth = 1;
      }
      Path.prototype.moveTo = function(x, y) {
        this.commands.push({
          type: "M",
          x,
          y
        });
      };
      Path.prototype.lineTo = function(x, y) {
        this.commands.push({
          type: "L",
          x,
          y
        });
      };
      Path.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {
        this.commands.push({
          type: "C",
          x1,
          y1,
          x2,
          y2,
          x,
          y
        });
      };
      Path.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {
        this.commands.push({
          type: "Q",
          x1,
          y1,
          x,
          y
        });
      };
      Path.prototype.close = Path.prototype.closePath = function() {
        this.commands.push({
          type: "Z"
        });
      };
      Path.prototype.extend = function(pathOrCommands) {
        if (pathOrCommands.commands) {
          pathOrCommands = pathOrCommands.commands;
        } else if (pathOrCommands instanceof BoundingBox) {
          var box = pathOrCommands;
          this.moveTo(box.x1, box.y1);
          this.lineTo(box.x2, box.y1);
          this.lineTo(box.x2, box.y2);
          this.lineTo(box.x1, box.y2);
          this.close();
          return;
        }
        Array.prototype.push.apply(this.commands, pathOrCommands);
      };
      Path.prototype.getBoundingBox = function() {
        var box = new BoundingBox();
        var startX = 0;
        var startY = 0;
        var prevX = 0;
        var prevY = 0;
        for (var i = 0; i < this.commands.length; i++) {
          var cmd = this.commands[i];
          switch (cmd.type) {
            case "M":
              box.addPoint(cmd.x, cmd.y);
              startX = prevX = cmd.x;
              startY = prevY = cmd.y;
              break;
            case "L":
              box.addPoint(cmd.x, cmd.y);
              prevX = cmd.x;
              prevY = cmd.y;
              break;
            case "Q":
              box.addQuad(prevX, prevY, cmd.x1, cmd.y1, cmd.x, cmd.y);
              prevX = cmd.x;
              prevY = cmd.y;
              break;
            case "C":
              box.addBezier(prevX, prevY, cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);
              prevX = cmd.x;
              prevY = cmd.y;
              break;
            case "Z":
              prevX = startX;
              prevY = startY;
              break;
            default:
              throw new Error("Unexpected path command " + cmd.type);
          }
        }
        if (box.isEmpty()) {
          box.addPoint(0, 0);
        }
        return box;
      };
      Path.prototype.draw = function(ctx) {
        ctx.beginPath();
        for (var i = 0; i < this.commands.length; i += 1) {
          var cmd = this.commands[i];
          if (cmd.type === "M") {
            ctx.moveTo(cmd.x, cmd.y);
          } else if (cmd.type === "L") {
            ctx.lineTo(cmd.x, cmd.y);
          } else if (cmd.type === "C") {
            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);
          } else if (cmd.type === "Q") {
            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);
          } else if (cmd.type === "Z") {
            ctx.closePath();
          }
        }
        if (this.fill) {
          ctx.fillStyle = this.fill;
          ctx.fill();
        }
        if (this.stroke) {
          ctx.strokeStyle = this.stroke;
          ctx.lineWidth = this.strokeWidth;
          ctx.stroke();
        }
      };
      Path.prototype.toPathData = function(decimalPlaces) {
        decimalPlaces = decimalPlaces !== void 0 ? decimalPlaces : 2;
        function floatToString(v) {
          if (Math.round(v) === v) {
            return "" + Math.round(v);
          } else {
            return v.toFixed(decimalPlaces);
          }
        }
        function packValues() {
          var arguments$1 = arguments;
          var s = "";
          for (var i2 = 0; i2 < arguments.length; i2 += 1) {
            var v = arguments$1[i2];
            if (v >= 0 && i2 > 0) {
              s += " ";
            }
            s += floatToString(v);
          }
          return s;
        }
        var d = "";
        for (var i = 0; i < this.commands.length; i += 1) {
          var cmd = this.commands[i];
          if (cmd.type === "M") {
            d += "M" + packValues(cmd.x, cmd.y);
          } else if (cmd.type === "L") {
            d += "L" + packValues(cmd.x, cmd.y);
          } else if (cmd.type === "C") {
            d += "C" + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);
          } else if (cmd.type === "Q") {
            d += "Q" + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);
          } else if (cmd.type === "Z") {
            d += "Z";
          }
        }
        return d;
      };
      Path.prototype.toSVG = function(decimalPlaces) {
        var svg = '<path d="';
        svg += this.toPathData(decimalPlaces);
        svg += '"';
        if (this.fill && this.fill !== "black") {
          if (this.fill === null) {
            svg += ' fill="none"';
          } else {
            svg += ' fill="' + this.fill + '"';
          }
        }
        if (this.stroke) {
          svg += ' stroke="' + this.stroke + '" stroke-width="' + this.strokeWidth + '"';
        }
        svg += "/>";
        return svg;
      };
      Path.prototype.toDOMElement = function(decimalPlaces) {
        var temporaryPath = this.toPathData(decimalPlaces);
        var newPath = document.createElementNS("http://www.w3.org/2000/svg", "path");
        newPath.setAttribute("d", temporaryPath);
        return newPath;
      };
      function fail(message) {
        throw new Error(message);
      }
      function argument(predicate, message) {
        if (!predicate) {
          fail(message);
        }
      }
      var check = {fail, argument, assert: argument};
      var LIMIT16 = 32768;
      var LIMIT32 = 2147483648;
      var decode = {};
      var encode = {};
      var sizeOf = {};
      function constant(v) {
        return function() {
          return v;
        };
      }
      encode.BYTE = function(v) {
        check.argument(v >= 0 && v <= 255, "Byte value should be between 0 and 255.");
        return [v];
      };
      sizeOf.BYTE = constant(1);
      encode.CHAR = function(v) {
        return [v.charCodeAt(0)];
      };
      sizeOf.CHAR = constant(1);
      encode.CHARARRAY = function(v) {
        if (typeof v === "undefined") {
          v = "";
          console.warn("Undefined CHARARRAY encountered and treated as an empty string. This is probably caused by a missing glyph name.");
        }
        var b = [];
        for (var i = 0; i < v.length; i += 1) {
          b[i] = v.charCodeAt(i);
        }
        return b;
      };
      sizeOf.CHARARRAY = function(v) {
        if (typeof v === "undefined") {
          return 0;
        }
        return v.length;
      };
      encode.USHORT = function(v) {
        return [v >> 8 & 255, v & 255];
      };
      sizeOf.USHORT = constant(2);
      encode.SHORT = function(v) {
        if (v >= LIMIT16) {
          v = -(2 * LIMIT16 - v);
        }
        return [v >> 8 & 255, v & 255];
      };
      sizeOf.SHORT = constant(2);
      encode.UINT24 = function(v) {
        return [v >> 16 & 255, v >> 8 & 255, v & 255];
      };
      sizeOf.UINT24 = constant(3);
      encode.ULONG = function(v) {
        return [v >> 24 & 255, v >> 16 & 255, v >> 8 & 255, v & 255];
      };
      sizeOf.ULONG = constant(4);
      encode.LONG = function(v) {
        if (v >= LIMIT32) {
          v = -(2 * LIMIT32 - v);
        }
        return [v >> 24 & 255, v >> 16 & 255, v >> 8 & 255, v & 255];
      };
      sizeOf.LONG = constant(4);
      encode.FIXED = encode.ULONG;
      sizeOf.FIXED = sizeOf.ULONG;
      encode.FWORD = encode.SHORT;
      sizeOf.FWORD = sizeOf.SHORT;
      encode.UFWORD = encode.USHORT;
      sizeOf.UFWORD = sizeOf.USHORT;
      encode.LONGDATETIME = function(v) {
        return [0, 0, 0, 0, v >> 24 & 255, v >> 16 & 255, v >> 8 & 255, v & 255];
      };
      sizeOf.LONGDATETIME = constant(8);
      encode.TAG = function(v) {
        check.argument(v.length === 4, "Tag should be exactly 4 ASCII characters.");
        return [
          v.charCodeAt(0),
          v.charCodeAt(1),
          v.charCodeAt(2),
          v.charCodeAt(3)
        ];
      };
      sizeOf.TAG = constant(4);
      encode.Card8 = encode.BYTE;
      sizeOf.Card8 = sizeOf.BYTE;
      encode.Card16 = encode.USHORT;
      sizeOf.Card16 = sizeOf.USHORT;
      encode.OffSize = encode.BYTE;
      sizeOf.OffSize = sizeOf.BYTE;
      encode.SID = encode.USHORT;
      sizeOf.SID = sizeOf.USHORT;
      encode.NUMBER = function(v) {
        if (v >= -107 && v <= 107) {
          return [v + 139];
        } else if (v >= 108 && v <= 1131) {
          v = v - 108;
          return [(v >> 8) + 247, v & 255];
        } else if (v >= -1131 && v <= -108) {
          v = -v - 108;
          return [(v >> 8) + 251, v & 255];
        } else if (v >= -32768 && v <= 32767) {
          return encode.NUMBER16(v);
        } else {
          return encode.NUMBER32(v);
        }
      };
      sizeOf.NUMBER = function(v) {
        return encode.NUMBER(v).length;
      };
      encode.NUMBER16 = function(v) {
        return [28, v >> 8 & 255, v & 255];
      };
      sizeOf.NUMBER16 = constant(3);
      encode.NUMBER32 = function(v) {
        return [29, v >> 24 & 255, v >> 16 & 255, v >> 8 & 255, v & 255];
      };
      sizeOf.NUMBER32 = constant(5);
      encode.REAL = function(v) {
        var value = v.toString();
        var m = /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(value);
        if (m) {
          var epsilon = parseFloat("1e" + ((m[2] ? +m[2] : 0) + m[1].length));
          value = (Math.round(v * epsilon) / epsilon).toString();
        }
        var nibbles = "";
        for (var i = 0, ii = value.length; i < ii; i += 1) {
          var c = value[i];
          if (c === "e") {
            nibbles += value[++i] === "-" ? "c" : "b";
          } else if (c === ".") {
            nibbles += "a";
          } else if (c === "-") {
            nibbles += "e";
          } else {
            nibbles += c;
          }
        }
        nibbles += nibbles.length & 1 ? "f" : "ff";
        var out = [30];
        for (var i$1 = 0, ii$1 = nibbles.length; i$1 < ii$1; i$1 += 2) {
          out.push(parseInt(nibbles.substr(i$1, 2), 16));
        }
        return out;
      };
      sizeOf.REAL = function(v) {
        return encode.REAL(v).length;
      };
      encode.NAME = encode.CHARARRAY;
      sizeOf.NAME = sizeOf.CHARARRAY;
      encode.STRING = encode.CHARARRAY;
      sizeOf.STRING = sizeOf.CHARARRAY;
      decode.UTF8 = function(data, offset, numBytes) {
        var codePoints = [];
        var numChars = numBytes;
        for (var j = 0; j < numChars; j++, offset += 1) {
          codePoints[j] = data.getUint8(offset);
        }
        return String.fromCharCode.apply(null, codePoints);
      };
      decode.UTF16 = function(data, offset, numBytes) {
        var codePoints = [];
        var numChars = numBytes / 2;
        for (var j = 0; j < numChars; j++, offset += 2) {
          codePoints[j] = data.getUint16(offset);
        }
        return String.fromCharCode.apply(null, codePoints);
      };
      encode.UTF16 = function(v) {
        var b = [];
        for (var i = 0; i < v.length; i += 1) {
          var codepoint = v.charCodeAt(i);
          b[b.length] = codepoint >> 8 & 255;
          b[b.length] = codepoint & 255;
        }
        return b;
      };
      sizeOf.UTF16 = function(v) {
        return v.length * 2;
      };
      var eightBitMacEncodings = {
        "x-mac-croatian": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\u0160\u2122\xB4\xA8\u2260\u017D\xD8\u221E\xB1\u2264\u2265\u2206\xB5\u2202\u2211\u220F\u0161\u222B\xAA\xBA\u03A9\u017E\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u0106\xAB\u010C\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\uF8FF\xA9\u2044\u20AC\u2039\u203A\xC6\xBB\u2013\xB7\u201A\u201E\u2030\xC2\u0107\xC1\u010D\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u0111\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u03C0\xCB\u02DA\xB8\xCA\xE6\u02C7",
        "x-mac-cyrillic": "\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\xB0\u0490\xA3\xA7\u2022\xB6\u0406\xAE\xA9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\xB1\u2264\u2265\u0456\xB5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E",
        "x-mac-gaelic": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u1E02\xB1\u2264\u2265\u1E03\u010A\u010B\u1E0A\u1E0B\u1E1E\u1E1F\u0120\u0121\u1E40\xE6\xF8\u1E41\u1E56\u1E57\u027C\u0192\u017F\u1E60\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u1E61\u1E9B\xFF\u0178\u1E6A\u20AC\u2039\u203A\u0176\u0177\u1E6B\xB7\u1EF2\u1EF3\u204A\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u2663\xD2\xDA\xDB\xD9\u0131\xDD\xFD\u0174\u0175\u1E84\u1E85\u1E80\u1E81\u1E82\u1E83",
        "x-mac-greek": "\xC4\xB9\xB2\xC9\xB3\xD6\xDC\u0385\xE0\xE2\xE4\u0384\xA8\xE7\xE9\xE8\xEA\xEB\xA3\u2122\xEE\xEF\u2022\xBD\u2030\xF4\xF6\xA6\u20AC\xF9\xFB\xFC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\xDF\xAE\xA9\u03A3\u03AA\xA7\u2260\xB0\xB7\u0391\xB1\u2264\u2265\xA5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\xAC\u039F\u03A1\u2248\u03A4\xAB\xBB\u2026\xA0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\xF7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\xAD",
        "x-mac-icelandic": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\xDD\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\xD0\xF0\xDE\xFE\xFD\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7",
        "x-mac-inuit": "\u1403\u1404\u1405\u1406\u140A\u140B\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144E\u144F\u1450\u1451\u1455\u1456\u1466\u146D\u146E\u146F\u1470\u1472\u1473\u1483\u148B\u148C\u148D\u148E\u1490\u1491\xB0\u14A1\u14A5\u14A6\u2022\xB6\u14A7\xAE\xA9\u2122\u14A8\u14AA\u14AB\u14BB\u14C2\u14C3\u14C4\u14C5\u14C7\u14C8\u14D0\u14EF\u14F0\u14F1\u14F2\u14F4\u14F5\u1505\u14D5\u14D6\u14D7\u14D8\u14DA\u14DB\u14EA\u1528\u1529\u152A\u152B\u152D\u2026\xA0\u152E\u153E\u1555\u1556\u1557\u2013\u2014\u201C\u201D\u2018\u2019\u1558\u1559\u155A\u155D\u1546\u1547\u1548\u1549\u154B\u154C\u1550\u157F\u1580\u1581\u1582\u1583\u1584\u1585\u158F\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15A0\u15A1\u15A2\u15A3\u15A4\u15A5\u15A6\u157C\u0141\u0142",
        "x-mac-ce": "\xC4\u0100\u0101\xC9\u0104\xD6\xDC\xE1\u0105\u010C\xE4\u010D\u0106\u0107\xE9\u0179\u017A\u010E\xED\u010F\u0112\u0113\u0116\xF3\u0117\xF4\xF6\xF5\xFA\u011A\u011B\xFC\u2020\xB0\u0118\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\u0119\xA8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\xAC\u221A\u0144\u0147\u2206\xAB\xBB\u2026\xA0\u0148\u0150\xD5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\xC1\u0164\u0165\xCD\u017D\u017E\u016A\xD3\xD4\u016B\u016E\xDA\u016F\u0170\u0171\u0172\u0173\xDD\xFD\u0137\u017B\u0141\u017C\u0122\u02C7",
        macintosh: "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\uFB01\uFB02\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7",
        "x-mac-romanian": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\u0102\u0218\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\u0103\u0219\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\u021A\u021B\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7",
        "x-mac-turkish": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\uF8A0\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7"
      };
      decode.MACSTRING = function(dataView, offset, dataLength, encoding) {
        var table2 = eightBitMacEncodings[encoding];
        if (table2 === void 0) {
          return void 0;
        }
        var result = "";
        for (var i = 0; i < dataLength; i++) {
          var c = dataView.getUint8(offset + i);
          if (c <= 127) {
            result += String.fromCharCode(c);
          } else {
            result += table2[c & 127];
          }
        }
        return result;
      };
      var macEncodingTableCache = typeof WeakMap === "function" && new WeakMap();
      var macEncodingCacheKeys;
      var getMacEncodingTable = function(encoding) {
        if (!macEncodingCacheKeys) {
          macEncodingCacheKeys = {};
          for (var e in eightBitMacEncodings) {
            macEncodingCacheKeys[e] = new String(e);
          }
        }
        var cacheKey = macEncodingCacheKeys[encoding];
        if (cacheKey === void 0) {
          return void 0;
        }
        if (macEncodingTableCache) {
          var cachedTable = macEncodingTableCache.get(cacheKey);
          if (cachedTable !== void 0) {
            return cachedTable;
          }
        }
        var decodingTable = eightBitMacEncodings[encoding];
        if (decodingTable === void 0) {
          return void 0;
        }
        var encodingTable = {};
        for (var i = 0; i < decodingTable.length; i++) {
          encodingTable[decodingTable.charCodeAt(i)] = i + 128;
        }
        if (macEncodingTableCache) {
          macEncodingTableCache.set(cacheKey, encodingTable);
        }
        return encodingTable;
      };
      encode.MACSTRING = function(str, encoding) {
        var table2 = getMacEncodingTable(encoding);
        if (table2 === void 0) {
          return void 0;
        }
        var result = [];
        for (var i = 0; i < str.length; i++) {
          var c = str.charCodeAt(i);
          if (c >= 128) {
            c = table2[c];
            if (c === void 0) {
              return void 0;
            }
          }
          result[i] = c;
        }
        return result;
      };
      sizeOf.MACSTRING = function(str, encoding) {
        var b = encode.MACSTRING(str, encoding);
        if (b !== void 0) {
          return b.length;
        } else {
          return 0;
        }
      };
      function isByteEncodable(value) {
        return value >= -128 && value <= 127;
      }
      function encodeVarDeltaRunAsZeroes(deltas, pos, result) {
        var runLength = 0;
        var numDeltas = deltas.length;
        while (pos < numDeltas && runLength < 64 && deltas[pos] === 0) {
          ++pos;
          ++runLength;
        }
        result.push(128 | runLength - 1);
        return pos;
      }
      function encodeVarDeltaRunAsBytes(deltas, offset, result) {
        var runLength = 0;
        var numDeltas = deltas.length;
        var pos = offset;
        while (pos < numDeltas && runLength < 64) {
          var value = deltas[pos];
          if (!isByteEncodable(value)) {
            break;
          }
          if (value === 0 && pos + 1 < numDeltas && deltas[pos + 1] === 0) {
            break;
          }
          ++pos;
          ++runLength;
        }
        result.push(runLength - 1);
        for (var i = offset; i < pos; ++i) {
          result.push(deltas[i] + 256 & 255);
        }
        return pos;
      }
      function encodeVarDeltaRunAsWords(deltas, offset, result) {
        var runLength = 0;
        var numDeltas = deltas.length;
        var pos = offset;
        while (pos < numDeltas && runLength < 64) {
          var value = deltas[pos];
          if (value === 0) {
            break;
          }
          if (isByteEncodable(value) && pos + 1 < numDeltas && isByteEncodable(deltas[pos + 1])) {
            break;
          }
          ++pos;
          ++runLength;
        }
        result.push(64 | runLength - 1);
        for (var i = offset; i < pos; ++i) {
          var val = deltas[i];
          result.push(val + 65536 >> 8 & 255, val + 256 & 255);
        }
        return pos;
      }
      encode.VARDELTAS = function(deltas) {
        var pos = 0;
        var result = [];
        while (pos < deltas.length) {
          var value = deltas[pos];
          if (value === 0) {
            pos = encodeVarDeltaRunAsZeroes(deltas, pos, result);
          } else if (value >= -128 && value <= 127) {
            pos = encodeVarDeltaRunAsBytes(deltas, pos, result);
          } else {
            pos = encodeVarDeltaRunAsWords(deltas, pos, result);
          }
        }
        return result;
      };
      encode.INDEX = function(l) {
        var offset = 1;
        var offsets = [offset];
        var data = [];
        for (var i = 0; i < l.length; i += 1) {
          var v = encode.OBJECT(l[i]);
          Array.prototype.push.apply(data, v);
          offset += v.length;
          offsets.push(offset);
        }
        if (data.length === 0) {
          return [0, 0];
        }
        var encodedOffsets = [];
        var offSize = 1 + Math.floor(Math.log(offset) / Math.log(2)) / 8 | 0;
        var offsetEncoder = [void 0, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];
        for (var i$1 = 0; i$1 < offsets.length; i$1 += 1) {
          var encodedOffset = offsetEncoder(offsets[i$1]);
          Array.prototype.push.apply(encodedOffsets, encodedOffset);
        }
        return Array.prototype.concat(encode.Card16(l.length), encode.OffSize(offSize), encodedOffsets, data);
      };
      sizeOf.INDEX = function(v) {
        return encode.INDEX(v).length;
      };
      encode.DICT = function(m) {
        var d = [];
        var keys = Object.keys(m);
        var length = keys.length;
        for (var i = 0; i < length; i += 1) {
          var k = parseInt(keys[i], 0);
          var v = m[k];
          d = d.concat(encode.OPERAND(v.value, v.type));
          d = d.concat(encode.OPERATOR(k));
        }
        return d;
      };
      sizeOf.DICT = function(m) {
        return encode.DICT(m).length;
      };
      encode.OPERATOR = function(v) {
        if (v < 1200) {
          return [v];
        } else {
          return [12, v - 1200];
        }
      };
      encode.OPERAND = function(v, type) {
        var d = [];
        if (Array.isArray(type)) {
          for (var i = 0; i < type.length; i += 1) {
            check.argument(v.length === type.length, "Not enough arguments given for type" + type);
            d = d.concat(encode.OPERAND(v[i], type[i]));
          }
        } else {
          if (type === "SID") {
            d = d.concat(encode.NUMBER(v));
          } else if (type === "offset") {
            d = d.concat(encode.NUMBER32(v));
          } else if (type === "number") {
            d = d.concat(encode.NUMBER(v));
          } else if (type === "real") {
            d = d.concat(encode.REAL(v));
          } else {
            throw new Error("Unknown operand type " + type);
          }
        }
        return d;
      };
      encode.OP = encode.BYTE;
      sizeOf.OP = sizeOf.BYTE;
      var wmm = typeof WeakMap === "function" && new WeakMap();
      encode.CHARSTRING = function(ops) {
        if (wmm) {
          var cachedValue = wmm.get(ops);
          if (cachedValue !== void 0) {
            return cachedValue;
          }
        }
        var d = [];
        var length = ops.length;
        for (var i = 0; i < length; i += 1) {
          var op = ops[i];
          d = d.concat(encode[op.type](op.value));
        }
        if (wmm) {
          wmm.set(ops, d);
        }
        return d;
      };
      sizeOf.CHARSTRING = function(ops) {
        return encode.CHARSTRING(ops).length;
      };
      encode.OBJECT = function(v) {
        var encodingFunction = encode[v.type];
        check.argument(encodingFunction !== void 0, "No encoding function for type " + v.type);
        return encodingFunction(v.value);
      };
      sizeOf.OBJECT = function(v) {
        var sizeOfFunction = sizeOf[v.type];
        check.argument(sizeOfFunction !== void 0, "No sizeOf function for type " + v.type);
        return sizeOfFunction(v.value);
      };
      encode.TABLE = function(table2) {
        var d = [];
        var length = table2.fields.length;
        var subtables = [];
        var subtableOffsets = [];
        for (var i = 0; i < length; i += 1) {
          var field = table2.fields[i];
          var encodingFunction = encode[field.type];
          check.argument(encodingFunction !== void 0, "No encoding function for field type " + field.type + " (" + field.name + ")");
          var value = table2[field.name];
          if (value === void 0) {
            value = field.value;
          }
          var bytes = encodingFunction(value);
          if (field.type === "TABLE") {
            subtableOffsets.push(d.length);
            d = d.concat([0, 0]);
            subtables.push(bytes);
          } else {
            d = d.concat(bytes);
          }
        }
        for (var i$1 = 0; i$1 < subtables.length; i$1 += 1) {
          var o = subtableOffsets[i$1];
          var offset = d.length;
          check.argument(offset < 65536, "Table " + table2.tableName + " too big.");
          d[o] = offset >> 8;
          d[o + 1] = offset & 255;
          d = d.concat(subtables[i$1]);
        }
        return d;
      };
      sizeOf.TABLE = function(table2) {
        var numBytes = 0;
        var length = table2.fields.length;
        for (var i = 0; i < length; i += 1) {
          var field = table2.fields[i];
          var sizeOfFunction = sizeOf[field.type];
          check.argument(sizeOfFunction !== void 0, "No sizeOf function for field type " + field.type + " (" + field.name + ")");
          var value = table2[field.name];
          if (value === void 0) {
            value = field.value;
          }
          numBytes += sizeOfFunction(value);
          if (field.type === "TABLE") {
            numBytes += 2;
          }
        }
        return numBytes;
      };
      encode.RECORD = encode.TABLE;
      sizeOf.RECORD = sizeOf.TABLE;
      encode.LITERAL = function(v) {
        return v;
      };
      sizeOf.LITERAL = function(v) {
        return v.length;
      };
      function Table(tableName, fields, options) {
        if (fields.length && (fields[0].name !== "coverageFormat" || fields[0].value === 1)) {
          for (var i = 0; i < fields.length; i += 1) {
            var field = fields[i];
            this[field.name] = field.value;
          }
        }
        this.tableName = tableName;
        this.fields = fields;
        if (options) {
          var optionKeys = Object.keys(options);
          for (var i$1 = 0; i$1 < optionKeys.length; i$1 += 1) {
            var k = optionKeys[i$1];
            var v = options[k];
            if (this[k] !== void 0) {
              this[k] = v;
            }
          }
        }
      }
      Table.prototype.encode = function() {
        return encode.TABLE(this);
      };
      Table.prototype.sizeOf = function() {
        return sizeOf.TABLE(this);
      };
      function ushortList(itemName, list, count) {
        if (count === void 0) {
          count = list.length;
        }
        var fields = new Array(list.length + 1);
        fields[0] = {name: itemName + "Count", type: "USHORT", value: count};
        for (var i = 0; i < list.length; i++) {
          fields[i + 1] = {name: itemName + i, type: "USHORT", value: list[i]};
        }
        return fields;
      }
      function tableList(itemName, records, itemCallback) {
        var count = records.length;
        var fields = new Array(count + 1);
        fields[0] = {name: itemName + "Count", type: "USHORT", value: count};
        for (var i = 0; i < count; i++) {
          fields[i + 1] = {name: itemName + i, type: "TABLE", value: itemCallback(records[i], i)};
        }
        return fields;
      }
      function recordList(itemName, records, itemCallback) {
        var count = records.length;
        var fields = [];
        fields[0] = {name: itemName + "Count", type: "USHORT", value: count};
        for (var i = 0; i < count; i++) {
          fields = fields.concat(itemCallback(records[i], i));
        }
        return fields;
      }
      function Coverage(coverageTable) {
        if (coverageTable.format === 1) {
          Table.call(this, "coverageTable", [{name: "coverageFormat", type: "USHORT", value: 1}].concat(ushortList("glyph", coverageTable.glyphs)));
        } else if (coverageTable.format === 2) {
          Table.call(this, "coverageTable", [{name: "coverageFormat", type: "USHORT", value: 2}].concat(recordList("rangeRecord", coverageTable.ranges, function(RangeRecord) {
            return [
              {name: "startGlyphID", type: "USHORT", value: RangeRecord.start},
              {name: "endGlyphID", type: "USHORT", value: RangeRecord.end},
              {name: "startCoverageIndex", type: "USHORT", value: RangeRecord.index}
            ];
          })));
        } else {
          check.assert(false, "Coverage format must be 1 or 2.");
        }
      }
      Coverage.prototype = Object.create(Table.prototype);
      Coverage.prototype.constructor = Coverage;
      function ScriptList(scriptListTable) {
        Table.call(this, "scriptListTable", recordList("scriptRecord", scriptListTable, function(scriptRecord, i) {
          var script = scriptRecord.script;
          var defaultLangSys = script.defaultLangSys;
          check.assert(!!defaultLangSys, "Unable to write GSUB: script " + scriptRecord.tag + " has no default language system.");
          return [
            {name: "scriptTag" + i, type: "TAG", value: scriptRecord.tag},
            {name: "script" + i, type: "TABLE", value: new Table("scriptTable", [
              {name: "defaultLangSys", type: "TABLE", value: new Table("defaultLangSys", [
                {name: "lookupOrder", type: "USHORT", value: 0},
                {name: "reqFeatureIndex", type: "USHORT", value: defaultLangSys.reqFeatureIndex}
              ].concat(ushortList("featureIndex", defaultLangSys.featureIndexes)))}
            ].concat(recordList("langSys", script.langSysRecords, function(langSysRecord, i2) {
              var langSys = langSysRecord.langSys;
              return [
                {name: "langSysTag" + i2, type: "TAG", value: langSysRecord.tag},
                {name: "langSys" + i2, type: "TABLE", value: new Table("langSys", [
                  {name: "lookupOrder", type: "USHORT", value: 0},
                  {name: "reqFeatureIndex", type: "USHORT", value: langSys.reqFeatureIndex}
                ].concat(ushortList("featureIndex", langSys.featureIndexes)))}
              ];
            })))}
          ];
        }));
      }
      ScriptList.prototype = Object.create(Table.prototype);
      ScriptList.prototype.constructor = ScriptList;
      function FeatureList(featureListTable) {
        Table.call(this, "featureListTable", recordList("featureRecord", featureListTable, function(featureRecord, i) {
          var feature = featureRecord.feature;
          return [
            {name: "featureTag" + i, type: "TAG", value: featureRecord.tag},
            {name: "feature" + i, type: "TABLE", value: new Table("featureTable", [
              {name: "featureParams", type: "USHORT", value: feature.featureParams}
            ].concat(ushortList("lookupListIndex", feature.lookupListIndexes)))}
          ];
        }));
      }
      FeatureList.prototype = Object.create(Table.prototype);
      FeatureList.prototype.constructor = FeatureList;
      function LookupList(lookupListTable, subtableMakers2) {
        Table.call(this, "lookupListTable", tableList("lookup", lookupListTable, function(lookupTable) {
          var subtableCallback = subtableMakers2[lookupTable.lookupType];
          check.assert(!!subtableCallback, "Unable to write GSUB lookup type " + lookupTable.lookupType + " tables.");
          return new Table("lookupTable", [
            {name: "lookupType", type: "USHORT", value: lookupTable.lookupType},
            {name: "lookupFlag", type: "USHORT", value: lookupTable.lookupFlag}
          ].concat(tableList("subtable", lookupTable.subtables, subtableCallback)));
        }));
      }
      LookupList.prototype = Object.create(Table.prototype);
      LookupList.prototype.constructor = LookupList;
      var table = {
        Table,
        Record: Table,
        Coverage,
        ScriptList,
        FeatureList,
        LookupList,
        ushortList,
        tableList,
        recordList
      };
      function getByte(dataView, offset) {
        return dataView.getUint8(offset);
      }
      function getUShort(dataView, offset) {
        return dataView.getUint16(offset, false);
      }
      function getShort(dataView, offset) {
        return dataView.getInt16(offset, false);
      }
      function getULong(dataView, offset) {
        return dataView.getUint32(offset, false);
      }
      function getFixed(dataView, offset) {
        var decimal = dataView.getInt16(offset, false);
        var fraction = dataView.getUint16(offset + 2, false);
        return decimal + fraction / 65535;
      }
      function getTag(dataView, offset) {
        var tag = "";
        for (var i = offset; i < offset + 4; i += 1) {
          tag += String.fromCharCode(dataView.getInt8(i));
        }
        return tag;
      }
      function getOffset(dataView, offset, offSize) {
        var v = 0;
        for (var i = 0; i < offSize; i += 1) {
          v <<= 8;
          v += dataView.getUint8(offset + i);
        }
        return v;
      }
      function getBytes(dataView, startOffset, endOffset) {
        var bytes = [];
        for (var i = startOffset; i < endOffset; i += 1) {
          bytes.push(dataView.getUint8(i));
        }
        return bytes;
      }
      function bytesToString(bytes) {
        var s = "";
        for (var i = 0; i < bytes.length; i += 1) {
          s += String.fromCharCode(bytes[i]);
        }
        return s;
      }
      var typeOffsets = {
        byte: 1,
        uShort: 2,
        short: 2,
        uLong: 4,
        fixed: 4,
        longDateTime: 8,
        tag: 4
      };
      function Parser(data, offset) {
        this.data = data;
        this.offset = offset;
        this.relativeOffset = 0;
      }
      Parser.prototype.parseByte = function() {
        var v = this.data.getUint8(this.offset + this.relativeOffset);
        this.relativeOffset += 1;
        return v;
      };
      Parser.prototype.parseChar = function() {
        var v = this.data.getInt8(this.offset + this.relativeOffset);
        this.relativeOffset += 1;
        return v;
      };
      Parser.prototype.parseCard8 = Parser.prototype.parseByte;
      Parser.prototype.parseUShort = function() {
        var v = this.data.getUint16(this.offset + this.relativeOffset);
        this.relativeOffset += 2;
        return v;
      };
      Parser.prototype.parseCard16 = Parser.prototype.parseUShort;
      Parser.prototype.parseSID = Parser.prototype.parseUShort;
      Parser.prototype.parseOffset16 = Parser.prototype.parseUShort;
      Parser.prototype.parseShort = function() {
        var v = this.data.getInt16(this.offset + this.relativeOffset);
        this.relativeOffset += 2;
        return v;
      };
      Parser.prototype.parseF2Dot14 = function() {
        var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;
        this.relativeOffset += 2;
        return v;
      };
      Parser.prototype.parseULong = function() {
        var v = getULong(this.data, this.offset + this.relativeOffset);
        this.relativeOffset += 4;
        return v;
      };
      Parser.prototype.parseOffset32 = Parser.prototype.parseULong;
      Parser.prototype.parseFixed = function() {
        var v = getFixed(this.data, this.offset + this.relativeOffset);
        this.relativeOffset += 4;
        return v;
      };
      Parser.prototype.parseString = function(length) {
        var dataView = this.data;
        var offset = this.offset + this.relativeOffset;
        var string = "";
        this.relativeOffset += length;
        for (var i = 0; i < length; i++) {
          string += String.fromCharCode(dataView.getUint8(offset + i));
        }
        return string;
      };
      Parser.prototype.parseTag = function() {
        return this.parseString(4);
      };
      Parser.prototype.parseLongDateTime = function() {
        var v = getULong(this.data, this.offset + this.relativeOffset + 4);
        v -= 2082844800;
        this.relativeOffset += 8;
        return v;
      };
      Parser.prototype.parseVersion = function(minorBase) {
        var major = getUShort(this.data, this.offset + this.relativeOffset);
        var minor = getUShort(this.data, this.offset + this.relativeOffset + 2);
        this.relativeOffset += 4;
        if (minorBase === void 0) {
          minorBase = 4096;
        }
        return major + minor / minorBase / 10;
      };
      Parser.prototype.skip = function(type, amount) {
        if (amount === void 0) {
          amount = 1;
        }
        this.relativeOffset += typeOffsets[type] * amount;
      };
      Parser.prototype.parseULongList = function(count) {
        if (count === void 0) {
          count = this.parseULong();
        }
        var offsets = new Array(count);
        var dataView = this.data;
        var offset = this.offset + this.relativeOffset;
        for (var i = 0; i < count; i++) {
          offsets[i] = dataView.getUint32(offset);
          offset += 4;
        }
        this.relativeOffset += count * 4;
        return offsets;
      };
      Parser.prototype.parseOffset16List = Parser.prototype.parseUShortList = function(count) {
        if (count === void 0) {
          count = this.parseUShort();
        }
        var offsets = new Array(count);
        var dataView = this.data;
        var offset = this.offset + this.relativeOffset;
        for (var i = 0; i < count; i++) {
          offsets[i] = dataView.getUint16(offset);
          offset += 2;
        }
        this.relativeOffset += count * 2;
        return offsets;
      };
      Parser.prototype.parseShortList = function(count) {
        var list = new Array(count);
        var dataView = this.data;
        var offset = this.offset + this.relativeOffset;
        for (var i = 0; i < count; i++) {
          list[i] = dataView.getInt16(offset);
          offset += 2;
        }
        this.relativeOffset += count * 2;
        return list;
      };
      Parser.prototype.parseByteList = function(count) {
        var list = new Array(count);
        var dataView = this.data;
        var offset = this.offset + this.relativeOffset;
        for (var i = 0; i < count; i++) {
          list[i] = dataView.getUint8(offset++);
        }
        this.relativeOffset += count;
        return list;
      };
      Parser.prototype.parseList = function(count, itemCallback) {
        if (!itemCallback) {
          itemCallback = count;
          count = this.parseUShort();
        }
        var list = new Array(count);
        for (var i = 0; i < count; i++) {
          list[i] = itemCallback.call(this);
        }
        return list;
      };
      Parser.prototype.parseList32 = function(count, itemCallback) {
        if (!itemCallback) {
          itemCallback = count;
          count = this.parseULong();
        }
        var list = new Array(count);
        for (var i = 0; i < count; i++) {
          list[i] = itemCallback.call(this);
        }
        return list;
      };
      Parser.prototype.parseRecordList = function(count, recordDescription) {
        if (!recordDescription) {
          recordDescription = count;
          count = this.parseUShort();
        }
        var records = new Array(count);
        var fields = Object.keys(recordDescription);
        for (var i = 0; i < count; i++) {
          var rec = {};
          for (var j = 0; j < fields.length; j++) {
            var fieldName = fields[j];
            var fieldType = recordDescription[fieldName];
            rec[fieldName] = fieldType.call(this);
          }
          records[i] = rec;
        }
        return records;
      };
      Parser.prototype.parseRecordList32 = function(count, recordDescription) {
        if (!recordDescription) {
          recordDescription = count;
          count = this.parseULong();
        }
        var records = new Array(count);
        var fields = Object.keys(recordDescription);
        for (var i = 0; i < count; i++) {
          var rec = {};
          for (var j = 0; j < fields.length; j++) {
            var fieldName = fields[j];
            var fieldType = recordDescription[fieldName];
            rec[fieldName] = fieldType.call(this);
          }
          records[i] = rec;
        }
        return records;
      };
      Parser.prototype.parseStruct = function(description) {
        if (typeof description === "function") {
          return description.call(this);
        } else {
          var fields = Object.keys(description);
          var struct = {};
          for (var j = 0; j < fields.length; j++) {
            var fieldName = fields[j];
            var fieldType = description[fieldName];
            struct[fieldName] = fieldType.call(this);
          }
          return struct;
        }
      };
      Parser.prototype.parseValueRecord = function(valueFormat) {
        if (valueFormat === void 0) {
          valueFormat = this.parseUShort();
        }
        if (valueFormat === 0) {
          return;
        }
        var valueRecord = {};
        if (valueFormat & 1) {
          valueRecord.xPlacement = this.parseShort();
        }
        if (valueFormat & 2) {
          valueRecord.yPlacement = this.parseShort();
        }
        if (valueFormat & 4) {
          valueRecord.xAdvance = this.parseShort();
        }
        if (valueFormat & 8) {
          valueRecord.yAdvance = this.parseShort();
        }
        if (valueFormat & 16) {
          valueRecord.xPlaDevice = void 0;
          this.parseShort();
        }
        if (valueFormat & 32) {
          valueRecord.yPlaDevice = void 0;
          this.parseShort();
        }
        if (valueFormat & 64) {
          valueRecord.xAdvDevice = void 0;
          this.parseShort();
        }
        if (valueFormat & 128) {
          valueRecord.yAdvDevice = void 0;
          this.parseShort();
        }
        return valueRecord;
      };
      Parser.prototype.parseValueRecordList = function() {
        var valueFormat = this.parseUShort();
        var valueCount = this.parseUShort();
        var values = new Array(valueCount);
        for (var i = 0; i < valueCount; i++) {
          values[i] = this.parseValueRecord(valueFormat);
        }
        return values;
      };
      Parser.prototype.parsePointer = function(description) {
        var structOffset = this.parseOffset16();
        if (structOffset > 0) {
          return new Parser(this.data, this.offset + structOffset).parseStruct(description);
        }
        return void 0;
      };
      Parser.prototype.parsePointer32 = function(description) {
        var structOffset = this.parseOffset32();
        if (structOffset > 0) {
          return new Parser(this.data, this.offset + structOffset).parseStruct(description);
        }
        return void 0;
      };
      Parser.prototype.parseListOfLists = function(itemCallback) {
        var offsets = this.parseOffset16List();
        var count = offsets.length;
        var relativeOffset = this.relativeOffset;
        var list = new Array(count);
        for (var i = 0; i < count; i++) {
          var start = offsets[i];
          if (start === 0) {
            list[i] = void 0;
            continue;
          }
          this.relativeOffset = start;
          if (itemCallback) {
            var subOffsets = this.parseOffset16List();
            var subList = new Array(subOffsets.length);
            for (var j = 0; j < subOffsets.length; j++) {
              this.relativeOffset = start + subOffsets[j];
              subList[j] = itemCallback.call(this);
            }
            list[i] = subList;
          } else {
            list[i] = this.parseUShortList();
          }
        }
        this.relativeOffset = relativeOffset;
        return list;
      };
      Parser.prototype.parseCoverage = function() {
        var startOffset = this.offset + this.relativeOffset;
        var format = this.parseUShort();
        var count = this.parseUShort();
        if (format === 1) {
          return {
            format: 1,
            glyphs: this.parseUShortList(count)
          };
        } else if (format === 2) {
          var ranges = new Array(count);
          for (var i = 0; i < count; i++) {
            ranges[i] = {
              start: this.parseUShort(),
              end: this.parseUShort(),
              index: this.parseUShort()
            };
          }
          return {
            format: 2,
            ranges
          };
        }
        throw new Error("0x" + startOffset.toString(16) + ": Coverage format must be 1 or 2.");
      };
      Parser.prototype.parseClassDef = function() {
        var startOffset = this.offset + this.relativeOffset;
        var format = this.parseUShort();
        if (format === 1) {
          return {
            format: 1,
            startGlyph: this.parseUShort(),
            classes: this.parseUShortList()
          };
        } else if (format === 2) {
          return {
            format: 2,
            ranges: this.parseRecordList({
              start: Parser.uShort,
              end: Parser.uShort,
              classId: Parser.uShort
            })
          };
        }
        throw new Error("0x" + startOffset.toString(16) + ": ClassDef format must be 1 or 2.");
      };
      Parser.list = function(count, itemCallback) {
        return function() {
          return this.parseList(count, itemCallback);
        };
      };
      Parser.list32 = function(count, itemCallback) {
        return function() {
          return this.parseList32(count, itemCallback);
        };
      };
      Parser.recordList = function(count, recordDescription) {
        return function() {
          return this.parseRecordList(count, recordDescription);
        };
      };
      Parser.recordList32 = function(count, recordDescription) {
        return function() {
          return this.parseRecordList32(count, recordDescription);
        };
      };
      Parser.pointer = function(description) {
        return function() {
          return this.parsePointer(description);
        };
      };
      Parser.pointer32 = function(description) {
        return function() {
          return this.parsePointer32(description);
        };
      };
      Parser.tag = Parser.prototype.parseTag;
      Parser.byte = Parser.prototype.parseByte;
      Parser.uShort = Parser.offset16 = Parser.prototype.parseUShort;
      Parser.uShortList = Parser.prototype.parseUShortList;
      Parser.uLong = Parser.offset32 = Parser.prototype.parseULong;
      Parser.uLongList = Parser.prototype.parseULongList;
      Parser.struct = Parser.prototype.parseStruct;
      Parser.coverage = Parser.prototype.parseCoverage;
      Parser.classDef = Parser.prototype.parseClassDef;
      var langSysTable = {
        reserved: Parser.uShort,
        reqFeatureIndex: Parser.uShort,
        featureIndexes: Parser.uShortList
      };
      Parser.prototype.parseScriptList = function() {
        return this.parsePointer(Parser.recordList({
          tag: Parser.tag,
          script: Parser.pointer({
            defaultLangSys: Parser.pointer(langSysTable),
            langSysRecords: Parser.recordList({
              tag: Parser.tag,
              langSys: Parser.pointer(langSysTable)
            })
          })
        })) || [];
      };
      Parser.prototype.parseFeatureList = function() {
        return this.parsePointer(Parser.recordList({
          tag: Parser.tag,
          feature: Parser.pointer({
            featureParams: Parser.offset16,
            lookupListIndexes: Parser.uShortList
          })
        })) || [];
      };
      Parser.prototype.parseLookupList = function(lookupTableParsers) {
        return this.parsePointer(Parser.list(Parser.pointer(function() {
          var lookupType = this.parseUShort();
          check.argument(1 <= lookupType && lookupType <= 9, "GPOS/GSUB lookup type " + lookupType + " unknown.");
          var lookupFlag = this.parseUShort();
          var useMarkFilteringSet = lookupFlag & 16;
          return {
            lookupType,
            lookupFlag,
            subtables: this.parseList(Parser.pointer(lookupTableParsers[lookupType])),
            markFilteringSet: useMarkFilteringSet ? this.parseUShort() : void 0
          };
        }))) || [];
      };
      Parser.prototype.parseFeatureVariationsList = function() {
        return this.parsePointer32(function() {
          var majorVersion = this.parseUShort();
          var minorVersion = this.parseUShort();
          check.argument(majorVersion === 1 && minorVersion < 1, "GPOS/GSUB feature variations table unknown.");
          var featureVariations = this.parseRecordList32({
            conditionSetOffset: Parser.offset32,
            featureTableSubstitutionOffset: Parser.offset32
          });
          return featureVariations;
        }) || [];
      };
      var parse = {
        getByte,
        getCard8: getByte,
        getUShort,
        getCard16: getUShort,
        getShort,
        getULong,
        getFixed,
        getTag,
        getOffset,
        getBytes,
        bytesToString,
        Parser
      };
      function parseCmapTableFormat12(cmap2, p) {
        p.parseUShort();
        cmap2.length = p.parseULong();
        cmap2.language = p.parseULong();
        var groupCount;
        cmap2.groupCount = groupCount = p.parseULong();
        cmap2.glyphIndexMap = {};
        for (var i = 0; i < groupCount; i += 1) {
          var startCharCode = p.parseULong();
          var endCharCode = p.parseULong();
          var startGlyphId = p.parseULong();
          for (var c = startCharCode; c <= endCharCode; c += 1) {
            cmap2.glyphIndexMap[c] = startGlyphId;
            startGlyphId++;
          }
        }
      }
      function parseCmapTableFormat4(cmap2, p, data, start, offset) {
        cmap2.length = p.parseUShort();
        cmap2.language = p.parseUShort();
        var segCount;
        cmap2.segCount = segCount = p.parseUShort() >> 1;
        p.skip("uShort", 3);
        cmap2.glyphIndexMap = {};
        var endCountParser = new parse.Parser(data, start + offset + 14);
        var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);
        var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);
        var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);
        var glyphIndexOffset = start + offset + 16 + segCount * 8;
        for (var i = 0; i < segCount - 1; i += 1) {
          var glyphIndex = void 0;
          var endCount = endCountParser.parseUShort();
          var startCount = startCountParser.parseUShort();
          var idDelta = idDeltaParser.parseShort();
          var idRangeOffset = idRangeOffsetParser.parseUShort();
          for (var c = startCount; c <= endCount; c += 1) {
            if (idRangeOffset !== 0) {
              glyphIndexOffset = idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2;
              glyphIndexOffset += idRangeOffset;
              glyphIndexOffset += (c - startCount) * 2;
              glyphIndex = parse.getUShort(data, glyphIndexOffset);
              if (glyphIndex !== 0) {
                glyphIndex = glyphIndex + idDelta & 65535;
              }
            } else {
              glyphIndex = c + idDelta & 65535;
            }
            cmap2.glyphIndexMap[c] = glyphIndex;
          }
        }
      }
      function parseCmapTable(data, start) {
        var cmap2 = {};
        cmap2.version = parse.getUShort(data, start);
        check.argument(cmap2.version === 0, "cmap table version should be 0.");
        cmap2.numTables = parse.getUShort(data, start + 2);
        var offset = -1;
        for (var i = cmap2.numTables - 1; i >= 0; i -= 1) {
          var platformId = parse.getUShort(data, start + 4 + i * 8);
          var encodingId = parse.getUShort(data, start + 4 + i * 8 + 2);
          if (platformId === 3 && (encodingId === 0 || encodingId === 1 || encodingId === 10) || platformId === 0 && (encodingId === 0 || encodingId === 1 || encodingId === 2 || encodingId === 3 || encodingId === 4)) {
            offset = parse.getULong(data, start + 4 + i * 8 + 4);
            break;
          }
        }
        if (offset === -1) {
          throw new Error("No valid cmap sub-tables found.");
        }
        var p = new parse.Parser(data, start + offset);
        cmap2.format = p.parseUShort();
        if (cmap2.format === 12) {
          parseCmapTableFormat12(cmap2, p);
        } else if (cmap2.format === 4) {
          parseCmapTableFormat4(cmap2, p, data, start, offset);
        } else {
          throw new Error("Only format 4 and 12 cmap tables are supported (found format " + cmap2.format + ").");
        }
        return cmap2;
      }
      function addSegment(t, code, glyphIndex) {
        t.segments.push({
          end: code,
          start: code,
          delta: -(code - glyphIndex),
          offset: 0,
          glyphIndex
        });
      }
      function addTerminatorSegment(t) {
        t.segments.push({
          end: 65535,
          start: 65535,
          delta: 1,
          offset: 0
        });
      }
      function makeCmapTable(glyphs) {
        var isPlan0Only = true;
        var i;
        for (i = glyphs.length - 1; i > 0; i -= 1) {
          var g = glyphs.get(i);
          if (g.unicode > 65535) {
            console.log("Adding CMAP format 12 (needed!)");
            isPlan0Only = false;
            break;
          }
        }
        var cmapTable = [
          {name: "version", type: "USHORT", value: 0},
          {name: "numTables", type: "USHORT", value: isPlan0Only ? 1 : 2},
          {name: "platformID", type: "USHORT", value: 3},
          {name: "encodingID", type: "USHORT", value: 1},
          {name: "offset", type: "ULONG", value: isPlan0Only ? 12 : 12 + 8}
        ];
        if (!isPlan0Only) {
          cmapTable = cmapTable.concat([
            {name: "cmap12PlatformID", type: "USHORT", value: 3},
            {name: "cmap12EncodingID", type: "USHORT", value: 10},
            {name: "cmap12Offset", type: "ULONG", value: 0}
          ]);
        }
        cmapTable = cmapTable.concat([
          {name: "format", type: "USHORT", value: 4},
          {name: "cmap4Length", type: "USHORT", value: 0},
          {name: "language", type: "USHORT", value: 0},
          {name: "segCountX2", type: "USHORT", value: 0},
          {name: "searchRange", type: "USHORT", value: 0},
          {name: "entrySelector", type: "USHORT", value: 0},
          {name: "rangeShift", type: "USHORT", value: 0}
        ]);
        var t = new table.Table("cmap", cmapTable);
        t.segments = [];
        for (i = 0; i < glyphs.length; i += 1) {
          var glyph = glyphs.get(i);
          for (var j = 0; j < glyph.unicodes.length; j += 1) {
            addSegment(t, glyph.unicodes[j], i);
          }
          t.segments = t.segments.sort(function(a, b) {
            return a.start - b.start;
          });
        }
        addTerminatorSegment(t);
        var segCount = t.segments.length;
        var segCountToRemove = 0;
        var endCounts = [];
        var startCounts = [];
        var idDeltas = [];
        var idRangeOffsets = [];
        var glyphIds = [];
        var cmap12Groups = [];
        for (i = 0; i < segCount; i += 1) {
          var segment = t.segments[i];
          if (segment.end <= 65535 && segment.start <= 65535) {
            endCounts = endCounts.concat({name: "end_" + i, type: "USHORT", value: segment.end});
            startCounts = startCounts.concat({name: "start_" + i, type: "USHORT", value: segment.start});
            idDeltas = idDeltas.concat({name: "idDelta_" + i, type: "SHORT", value: segment.delta});
            idRangeOffsets = idRangeOffsets.concat({name: "idRangeOffset_" + i, type: "USHORT", value: segment.offset});
            if (segment.glyphId !== void 0) {
              glyphIds = glyphIds.concat({name: "glyph_" + i, type: "USHORT", value: segment.glyphId});
            }
          } else {
            segCountToRemove += 1;
          }
          if (!isPlan0Only && segment.glyphIndex !== void 0) {
            cmap12Groups = cmap12Groups.concat({name: "cmap12Start_" + i, type: "ULONG", value: segment.start});
            cmap12Groups = cmap12Groups.concat({name: "cmap12End_" + i, type: "ULONG", value: segment.end});
            cmap12Groups = cmap12Groups.concat({name: "cmap12Glyph_" + i, type: "ULONG", value: segment.glyphIndex});
          }
        }
        t.segCountX2 = (segCount - segCountToRemove) * 2;
        t.searchRange = Math.pow(2, Math.floor(Math.log(segCount - segCountToRemove) / Math.log(2))) * 2;
        t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);
        t.rangeShift = t.segCountX2 - t.searchRange;
        t.fields = t.fields.concat(endCounts);
        t.fields.push({name: "reservedPad", type: "USHORT", value: 0});
        t.fields = t.fields.concat(startCounts);
        t.fields = t.fields.concat(idDeltas);
        t.fields = t.fields.concat(idRangeOffsets);
        t.fields = t.fields.concat(glyphIds);
        t.cmap4Length = 14 + endCounts.length * 2 + 2 + startCounts.length * 2 + idDeltas.length * 2 + idRangeOffsets.length * 2 + glyphIds.length * 2;
        if (!isPlan0Only) {
          var cmap12Length = 16 + cmap12Groups.length * 4;
          t.cmap12Offset = 12 + 2 * 2 + 4 + t.cmap4Length;
          t.fields = t.fields.concat([
            {name: "cmap12Format", type: "USHORT", value: 12},
            {name: "cmap12Reserved", type: "USHORT", value: 0},
            {name: "cmap12Length", type: "ULONG", value: cmap12Length},
            {name: "cmap12Language", type: "ULONG", value: 0},
            {name: "cmap12nGroups", type: "ULONG", value: cmap12Groups.length / 3}
          ]);
          t.fields = t.fields.concat(cmap12Groups);
        }
        return t;
      }
      var cmap = {parse: parseCmapTable, make: makeCmapTable};
      var cffStandardStrings = [
        ".notdef",
        "space",
        "exclam",
        "quotedbl",
        "numbersign",
        "dollar",
        "percent",
        "ampersand",
        "quoteright",
        "parenleft",
        "parenright",
        "asterisk",
        "plus",
        "comma",
        "hyphen",
        "period",
        "slash",
        "zero",
        "one",
        "two",
        "three",
        "four",
        "five",
        "six",
        "seven",
        "eight",
        "nine",
        "colon",
        "semicolon",
        "less",
        "equal",
        "greater",
        "question",
        "at",
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G",
        "H",
        "I",
        "J",
        "K",
        "L",
        "M",
        "N",
        "O",
        "P",
        "Q",
        "R",
        "S",
        "T",
        "U",
        "V",
        "W",
        "X",
        "Y",
        "Z",
        "bracketleft",
        "backslash",
        "bracketright",
        "asciicircum",
        "underscore",
        "quoteleft",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "k",
        "l",
        "m",
        "n",
        "o",
        "p",
        "q",
        "r",
        "s",
        "t",
        "u",
        "v",
        "w",
        "x",
        "y",
        "z",
        "braceleft",
        "bar",
        "braceright",
        "asciitilde",
        "exclamdown",
        "cent",
        "sterling",
        "fraction",
        "yen",
        "florin",
        "section",
        "currency",
        "quotesingle",
        "quotedblleft",
        "guillemotleft",
        "guilsinglleft",
        "guilsinglright",
        "fi",
        "fl",
        "endash",
        "dagger",
        "daggerdbl",
        "periodcentered",
        "paragraph",
        "bullet",
        "quotesinglbase",
        "quotedblbase",
        "quotedblright",
        "guillemotright",
        "ellipsis",
        "perthousand",
        "questiondown",
        "grave",
        "acute",
        "circumflex",
        "tilde",
        "macron",
        "breve",
        "dotaccent",
        "dieresis",
        "ring",
        "cedilla",
        "hungarumlaut",
        "ogonek",
        "caron",
        "emdash",
        "AE",
        "ordfeminine",
        "Lslash",
        "Oslash",
        "OE",
        "ordmasculine",
        "ae",
        "dotlessi",
        "lslash",
        "oslash",
        "oe",
        "germandbls",
        "onesuperior",
        "logicalnot",
        "mu",
        "trademark",
        "Eth",
        "onehalf",
        "plusminus",
        "Thorn",
        "onequarter",
        "divide",
        "brokenbar",
        "degree",
        "thorn",
        "threequarters",
        "twosuperior",
        "registered",
        "minus",
        "eth",
        "multiply",
        "threesuperior",
        "copyright",
        "Aacute",
        "Acircumflex",
        "Adieresis",
        "Agrave",
        "Aring",
        "Atilde",
        "Ccedilla",
        "Eacute",
        "Ecircumflex",
        "Edieresis",
        "Egrave",
        "Iacute",
        "Icircumflex",
        "Idieresis",
        "Igrave",
        "Ntilde",
        "Oacute",
        "Ocircumflex",
        "Odieresis",
        "Ograve",
        "Otilde",
        "Scaron",
        "Uacute",
        "Ucircumflex",
        "Udieresis",
        "Ugrave",
        "Yacute",
        "Ydieresis",
        "Zcaron",
        "aacute",
        "acircumflex",
        "adieresis",
        "agrave",
        "aring",
        "atilde",
        "ccedilla",
        "eacute",
        "ecircumflex",
        "edieresis",
        "egrave",
        "iacute",
        "icircumflex",
        "idieresis",
        "igrave",
        "ntilde",
        "oacute",
        "ocircumflex",
        "odieresis",
        "ograve",
        "otilde",
        "scaron",
        "uacute",
        "ucircumflex",
        "udieresis",
        "ugrave",
        "yacute",
        "ydieresis",
        "zcaron",
        "exclamsmall",
        "Hungarumlautsmall",
        "dollaroldstyle",
        "dollarsuperior",
        "ampersandsmall",
        "Acutesmall",
        "parenleftsuperior",
        "parenrightsuperior",
        "266 ff",
        "onedotenleader",
        "zerooldstyle",
        "oneoldstyle",
        "twooldstyle",
        "threeoldstyle",
        "fouroldstyle",
        "fiveoldstyle",
        "sixoldstyle",
        "sevenoldstyle",
        "eightoldstyle",
        "nineoldstyle",
        "commasuperior",
        "threequartersemdash",
        "periodsuperior",
        "questionsmall",
        "asuperior",
        "bsuperior",
        "centsuperior",
        "dsuperior",
        "esuperior",
        "isuperior",
        "lsuperior",
        "msuperior",
        "nsuperior",
        "osuperior",
        "rsuperior",
        "ssuperior",
        "tsuperior",
        "ff",
        "ffi",
        "ffl",
        "parenleftinferior",
        "parenrightinferior",
        "Circumflexsmall",
        "hyphensuperior",
        "Gravesmall",
        "Asmall",
        "Bsmall",
        "Csmall",
        "Dsmall",
        "Esmall",
        "Fsmall",
        "Gsmall",
        "Hsmall",
        "Ismall",
        "Jsmall",
        "Ksmall",
        "Lsmall",
        "Msmall",
        "Nsmall",
        "Osmall",
        "Psmall",
        "Qsmall",
        "Rsmall",
        "Ssmall",
        "Tsmall",
        "Usmall",
        "Vsmall",
        "Wsmall",
        "Xsmall",
        "Ysmall",
        "Zsmall",
        "colonmonetary",
        "onefitted",
        "rupiah",
        "Tildesmall",
        "exclamdownsmall",
        "centoldstyle",
        "Lslashsmall",
        "Scaronsmall",
        "Zcaronsmall",
        "Dieresissmall",
        "Brevesmall",
        "Caronsmall",
        "Dotaccentsmall",
        "Macronsmall",
        "figuredash",
        "hypheninferior",
        "Ogoneksmall",
        "Ringsmall",
        "Cedillasmall",
        "questiondownsmall",
        "oneeighth",
        "threeeighths",
        "fiveeighths",
        "seveneighths",
        "onethird",
        "twothirds",
        "zerosuperior",
        "foursuperior",
        "fivesuperior",
        "sixsuperior",
        "sevensuperior",
        "eightsuperior",
        "ninesuperior",
        "zeroinferior",
        "oneinferior",
        "twoinferior",
        "threeinferior",
        "fourinferior",
        "fiveinferior",
        "sixinferior",
        "seveninferior",
        "eightinferior",
        "nineinferior",
        "centinferior",
        "dollarinferior",
        "periodinferior",
        "commainferior",
        "Agravesmall",
        "Aacutesmall",
        "Acircumflexsmall",
        "Atildesmall",
        "Adieresissmall",
        "Aringsmall",
        "AEsmall",
        "Ccedillasmall",
        "Egravesmall",
        "Eacutesmall",
        "Ecircumflexsmall",
        "Edieresissmall",
        "Igravesmall",
        "Iacutesmall",
        "Icircumflexsmall",
        "Idieresissmall",
        "Ethsmall",
        "Ntildesmall",
        "Ogravesmall",
        "Oacutesmall",
        "Ocircumflexsmall",
        "Otildesmall",
        "Odieresissmall",
        "OEsmall",
        "Oslashsmall",
        "Ugravesmall",
        "Uacutesmall",
        "Ucircumflexsmall",
        "Udieresissmall",
        "Yacutesmall",
        "Thornsmall",
        "Ydieresissmall",
        "001.000",
        "001.001",
        "001.002",
        "001.003",
        "Black",
        "Bold",
        "Book",
        "Light",
        "Medium",
        "Regular",
        "Roman",
        "Semibold"
      ];
      var cffStandardEncoding = [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "space",
        "exclam",
        "quotedbl",
        "numbersign",
        "dollar",
        "percent",
        "ampersand",
        "quoteright",
        "parenleft",
        "parenright",
        "asterisk",
        "plus",
        "comma",
        "hyphen",
        "period",
        "slash",
        "zero",
        "one",
        "two",
        "three",
        "four",
        "five",
        "six",
        "seven",
        "eight",
        "nine",
        "colon",
        "semicolon",
        "less",
        "equal",
        "greater",
        "question",
        "at",
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G",
        "H",
        "I",
        "J",
        "K",
        "L",
        "M",
        "N",
        "O",
        "P",
        "Q",
        "R",
        "S",
        "T",
        "U",
        "V",
        "W",
        "X",
        "Y",
        "Z",
        "bracketleft",
        "backslash",
        "bracketright",
        "asciicircum",
        "underscore",
        "quoteleft",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "k",
        "l",
        "m",
        "n",
        "o",
        "p",
        "q",
        "r",
        "s",
        "t",
        "u",
        "v",
        "w",
        "x",
        "y",
        "z",
        "braceleft",
        "bar",
        "braceright",
        "asciitilde",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "exclamdown",
        "cent",
        "sterling",
        "fraction",
        "yen",
        "florin",
        "section",
        "currency",
        "quotesingle",
        "quotedblleft",
        "guillemotleft",
        "guilsinglleft",
        "guilsinglright",
        "fi",
        "fl",
        "",
        "endash",
        "dagger",
        "daggerdbl",
        "periodcentered",
        "",
        "paragraph",
        "bullet",
        "quotesinglbase",
        "quotedblbase",
        "quotedblright",
        "guillemotright",
        "ellipsis",
        "perthousand",
        "",
        "questiondown",
        "",
        "grave",
        "acute",
        "circumflex",
        "tilde",
        "macron",
        "breve",
        "dotaccent",
        "dieresis",
        "",
        "ring",
        "cedilla",
        "",
        "hungarumlaut",
        "ogonek",
        "caron",
        "emdash",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "AE",
        "",
        "ordfeminine",
        "",
        "",
        "",
        "",
        "Lslash",
        "Oslash",
        "OE",
        "ordmasculine",
        "",
        "",
        "",
        "",
        "",
        "ae",
        "",
        "",
        "",
        "dotlessi",
        "",
        "",
        "lslash",
        "oslash",
        "oe",
        "germandbls"
      ];
      var cffExpertEncoding = [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "space",
        "exclamsmall",
        "Hungarumlautsmall",
        "",
        "dollaroldstyle",
        "dollarsuperior",
        "ampersandsmall",
        "Acutesmall",
        "parenleftsuperior",
        "parenrightsuperior",
        "twodotenleader",
        "onedotenleader",
        "comma",
        "hyphen",
        "period",
        "fraction",
        "zerooldstyle",
        "oneoldstyle",
        "twooldstyle",
        "threeoldstyle",
        "fouroldstyle",
        "fiveoldstyle",
        "sixoldstyle",
        "sevenoldstyle",
        "eightoldstyle",
        "nineoldstyle",
        "colon",
        "semicolon",
        "commasuperior",
        "threequartersemdash",
        "periodsuperior",
        "questionsmall",
        "",
        "asuperior",
        "bsuperior",
        "centsuperior",
        "dsuperior",
        "esuperior",
        "",
        "",
        "isuperior",
        "",
        "",
        "lsuperior",
        "msuperior",
        "nsuperior",
        "osuperior",
        "",
        "",
        "rsuperior",
        "ssuperior",
        "tsuperior",
        "",
        "ff",
        "fi",
        "fl",
        "ffi",
        "ffl",
        "parenleftinferior",
        "",
        "parenrightinferior",
        "Circumflexsmall",
        "hyphensuperior",
        "Gravesmall",
        "Asmall",
        "Bsmall",
        "Csmall",
        "Dsmall",
        "Esmall",
        "Fsmall",
        "Gsmall",
        "Hsmall",
        "Ismall",
        "Jsmall",
        "Ksmall",
        "Lsmall",
        "Msmall",
        "Nsmall",
        "Osmall",
        "Psmall",
        "Qsmall",
        "Rsmall",
        "Ssmall",
        "Tsmall",
        "Usmall",
        "Vsmall",
        "Wsmall",
        "Xsmall",
        "Ysmall",
        "Zsmall",
        "colonmonetary",
        "onefitted",
        "rupiah",
        "Tildesmall",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "exclamdownsmall",
        "centoldstyle",
        "Lslashsmall",
        "",
        "",
        "Scaronsmall",
        "Zcaronsmall",
        "Dieresissmall",
        "Brevesmall",
        "Caronsmall",
        "",
        "Dotaccentsmall",
        "",
        "",
        "Macronsmall",
        "",
        "",
        "figuredash",
        "hypheninferior",
        "",
        "",
        "Ogoneksmall",
        "Ringsmall",
        "Cedillasmall",
        "",
        "",
        "",
        "onequarter",
        "onehalf",
        "threequarters",
        "questiondownsmall",
        "oneeighth",
        "threeeighths",
        "fiveeighths",
        "seveneighths",
        "onethird",
        "twothirds",
        "",
        "",
        "zerosuperior",
        "onesuperior",
        "twosuperior",
        "threesuperior",
        "foursuperior",
        "fivesuperior",
        "sixsuperior",
        "sevensuperior",
        "eightsuperior",
        "ninesuperior",
        "zeroinferior",
        "oneinferior",
        "twoinferior",
        "threeinferior",
        "fourinferior",
        "fiveinferior",
        "sixinferior",
        "seveninferior",
        "eightinferior",
        "nineinferior",
        "centinferior",
        "dollarinferior",
        "periodinferior",
        "commainferior",
        "Agravesmall",
        "Aacutesmall",
        "Acircumflexsmall",
        "Atildesmall",
        "Adieresissmall",
        "Aringsmall",
        "AEsmall",
        "Ccedillasmall",
        "Egravesmall",
        "Eacutesmall",
        "Ecircumflexsmall",
        "Edieresissmall",
        "Igravesmall",
        "Iacutesmall",
        "Icircumflexsmall",
        "Idieresissmall",
        "Ethsmall",
        "Ntildesmall",
        "Ogravesmall",
        "Oacutesmall",
        "Ocircumflexsmall",
        "Otildesmall",
        "Odieresissmall",
        "OEsmall",
        "Oslashsmall",
        "Ugravesmall",
        "Uacutesmall",
        "Ucircumflexsmall",
        "Udieresissmall",
        "Yacutesmall",
        "Thornsmall",
        "Ydieresissmall"
      ];
      var standardNames = [
        ".notdef",
        ".null",
        "nonmarkingreturn",
        "space",
        "exclam",
        "quotedbl",
        "numbersign",
        "dollar",
        "percent",
        "ampersand",
        "quotesingle",
        "parenleft",
        "parenright",
        "asterisk",
        "plus",
        "comma",
        "hyphen",
        "period",
        "slash",
        "zero",
        "one",
        "two",
        "three",
        "four",
        "five",
        "six",
        "seven",
        "eight",
        "nine",
        "colon",
        "semicolon",
        "less",
        "equal",
        "greater",
        "question",
        "at",
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G",
        "H",
        "I",
        "J",
        "K",
        "L",
        "M",
        "N",
        "O",
        "P",
        "Q",
        "R",
        "S",
        "T",
        "U",
        "V",
        "W",
        "X",
        "Y",
        "Z",
        "bracketleft",
        "backslash",
        "bracketright",
        "asciicircum",
        "underscore",
        "grave",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "k",
        "l",
        "m",
        "n",
        "o",
        "p",
        "q",
        "r",
        "s",
        "t",
        "u",
        "v",
        "w",
        "x",
        "y",
        "z",
        "braceleft",
        "bar",
        "braceright",
        "asciitilde",
        "Adieresis",
        "Aring",
        "Ccedilla",
        "Eacute",
        "Ntilde",
        "Odieresis",
        "Udieresis",
        "aacute",
        "agrave",
        "acircumflex",
        "adieresis",
        "atilde",
        "aring",
        "ccedilla",
        "eacute",
        "egrave",
        "ecircumflex",
        "edieresis",
        "iacute",
        "igrave",
        "icircumflex",
        "idieresis",
        "ntilde",
        "oacute",
        "ograve",
        "ocircumflex",
        "odieresis",
        "otilde",
        "uacute",
        "ugrave",
        "ucircumflex",
        "udieresis",
        "dagger",
        "degree",
        "cent",
        "sterling",
        "section",
        "bullet",
        "paragraph",
        "germandbls",
        "registered",
        "copyright",
        "trademark",
        "acute",
        "dieresis",
        "notequal",
        "AE",
        "Oslash",
        "infinity",
        "plusminus",
        "lessequal",
        "greaterequal",
        "yen",
        "mu",
        "partialdiff",
        "summation",
        "product",
        "pi",
        "integral",
        "ordfeminine",
        "ordmasculine",
        "Omega",
        "ae",
        "oslash",
        "questiondown",
        "exclamdown",
        "logicalnot",
        "radical",
        "florin",
        "approxequal",
        "Delta",
        "guillemotleft",
        "guillemotright",
        "ellipsis",
        "nonbreakingspace",
        "Agrave",
        "Atilde",
        "Otilde",
        "OE",
        "oe",
        "endash",
        "emdash",
        "quotedblleft",
        "quotedblright",
        "quoteleft",
        "quoteright",
        "divide",
        "lozenge",
        "ydieresis",
        "Ydieresis",
        "fraction",
        "currency",
        "guilsinglleft",
        "guilsinglright",
        "fi",
        "fl",
        "daggerdbl",
        "periodcentered",
        "quotesinglbase",
        "quotedblbase",
        "perthousand",
        "Acircumflex",
        "Ecircumflex",
        "Aacute",
        "Edieresis",
        "Egrave",
        "Iacute",
        "Icircumflex",
        "Idieresis",
        "Igrave",
        "Oacute",
        "Ocircumflex",
        "apple",
        "Ograve",
        "Uacute",
        "Ucircumflex",
        "Ugrave",
        "dotlessi",
        "circumflex",
        "tilde",
        "macron",
        "breve",
        "dotaccent",
        "ring",
        "cedilla",
        "hungarumlaut",
        "ogonek",
        "caron",
        "Lslash",
        "lslash",
        "Scaron",
        "scaron",
        "Zcaron",
        "zcaron",
        "brokenbar",
        "Eth",
        "eth",
        "Yacute",
        "yacute",
        "Thorn",
        "thorn",
        "minus",
        "multiply",
        "onesuperior",
        "twosuperior",
        "threesuperior",
        "onehalf",
        "onequarter",
        "threequarters",
        "franc",
        "Gbreve",
        "gbreve",
        "Idotaccent",
        "Scedilla",
        "scedilla",
        "Cacute",
        "cacute",
        "Ccaron",
        "ccaron",
        "dcroat"
      ];
      function DefaultEncoding(font) {
        this.font = font;
      }
      DefaultEncoding.prototype.charToGlyphIndex = function(c) {
        var code = c.codePointAt(0);
        var glyphs = this.font.glyphs;
        if (glyphs) {
          for (var i = 0; i < glyphs.length; i += 1) {
            var glyph = glyphs.get(i);
            for (var j = 0; j < glyph.unicodes.length; j += 1) {
              if (glyph.unicodes[j] === code) {
                return i;
              }
            }
          }
        }
        return null;
      };
      function CmapEncoding(cmap2) {
        this.cmap = cmap2;
      }
      CmapEncoding.prototype.charToGlyphIndex = function(c) {
        return this.cmap.glyphIndexMap[c.codePointAt(0)] || 0;
      };
      function CffEncoding(encoding, charset) {
        this.encoding = encoding;
        this.charset = charset;
      }
      CffEncoding.prototype.charToGlyphIndex = function(s) {
        var code = s.codePointAt(0);
        var charName = this.encoding[code];
        return this.charset.indexOf(charName);
      };
      function GlyphNames(post2) {
        switch (post2.version) {
          case 1:
            this.names = standardNames.slice();
            break;
          case 2:
            this.names = new Array(post2.numberOfGlyphs);
            for (var i = 0; i < post2.numberOfGlyphs; i++) {
              if (post2.glyphNameIndex[i] < standardNames.length) {
                this.names[i] = standardNames[post2.glyphNameIndex[i]];
              } else {
                this.names[i] = post2.names[post2.glyphNameIndex[i] - standardNames.length];
              }
            }
            break;
          case 2.5:
            this.names = new Array(post2.numberOfGlyphs);
            for (var i$1 = 0; i$1 < post2.numberOfGlyphs; i$1++) {
              this.names[i$1] = standardNames[i$1 + post2.glyphNameIndex[i$1]];
            }
            break;
          case 3:
            this.names = [];
            break;
          default:
            this.names = [];
            break;
        }
      }
      GlyphNames.prototype.nameToGlyphIndex = function(name) {
        return this.names.indexOf(name);
      };
      GlyphNames.prototype.glyphIndexToName = function(gid) {
        return this.names[gid];
      };
      function addGlyphNamesAll(font) {
        var glyph;
        var glyphIndexMap = font.tables.cmap.glyphIndexMap;
        var charCodes = Object.keys(glyphIndexMap);
        for (var i = 0; i < charCodes.length; i += 1) {
          var c = charCodes[i];
          var glyphIndex = glyphIndexMap[c];
          glyph = font.glyphs.get(glyphIndex);
          glyph.addUnicode(parseInt(c));
        }
        for (var i$1 = 0; i$1 < font.glyphs.length; i$1 += 1) {
          glyph = font.glyphs.get(i$1);
          if (font.cffEncoding) {
            if (font.isCIDFont) {
              glyph.name = "gid" + i$1;
            } else {
              glyph.name = font.cffEncoding.charset[i$1];
            }
          } else if (font.glyphNames.names) {
            glyph.name = font.glyphNames.glyphIndexToName(i$1);
          }
        }
      }
      function addGlyphNamesToUnicodeMap(font) {
        font._IndexToUnicodeMap = {};
        var glyphIndexMap = font.tables.cmap.glyphIndexMap;
        var charCodes = Object.keys(glyphIndexMap);
        for (var i = 0; i < charCodes.length; i += 1) {
          var c = charCodes[i];
          var glyphIndex = glyphIndexMap[c];
          if (font._IndexToUnicodeMap[glyphIndex] === void 0) {
            font._IndexToUnicodeMap[glyphIndex] = {
              unicodes: [parseInt(c)]
            };
          } else {
            font._IndexToUnicodeMap[glyphIndex].unicodes.push(parseInt(c));
          }
        }
      }
      function addGlyphNames(font, opt) {
        if (opt.lowMemory) {
          addGlyphNamesToUnicodeMap(font);
        } else {
          addGlyphNamesAll(font);
        }
      }
      function line(ctx, x1, y1, x2, y2) {
        ctx.beginPath();
        ctx.moveTo(x1, y1);
        ctx.lineTo(x2, y2);
        ctx.stroke();
      }
      var draw = {line};
      function getPathDefinition(glyph, path) {
        var _path = path || new Path();
        return {
          configurable: true,
          get: function() {
            if (typeof _path === "function") {
              _path = _path();
            }
            return _path;
          },
          set: function(p) {
            _path = p;
          }
        };
      }
      function Glyph(options) {
        this.bindConstructorValues(options);
      }
      Glyph.prototype.bindConstructorValues = function(options) {
        this.index = options.index || 0;
        this.name = options.name || null;
        this.unicode = options.unicode || void 0;
        this.unicodes = options.unicodes || options.unicode !== void 0 ? [options.unicode] : [];
        if ("xMin" in options) {
          this.xMin = options.xMin;
        }
        if ("yMin" in options) {
          this.yMin = options.yMin;
        }
        if ("xMax" in options) {
          this.xMax = options.xMax;
        }
        if ("yMax" in options) {
          this.yMax = options.yMax;
        }
        if ("advanceWidth" in options) {
          this.advanceWidth = options.advanceWidth;
        }
        Object.defineProperty(this, "path", getPathDefinition(this, options.path));
      };
      Glyph.prototype.addUnicode = function(unicode) {
        if (this.unicodes.length === 0) {
          this.unicode = unicode;
        }
        this.unicodes.push(unicode);
      };
      Glyph.prototype.getBoundingBox = function() {
        return this.path.getBoundingBox();
      };
      Glyph.prototype.getPath = function(x, y, fontSize, options, font) {
        x = x !== void 0 ? x : 0;
        y = y !== void 0 ? y : 0;
        fontSize = fontSize !== void 0 ? fontSize : 72;
        var commands;
        var hPoints;
        if (!options) {
          options = {};
        }
        var xScale = options.xScale;
        var yScale = options.yScale;
        if (options.hinting && font && font.hinting) {
          hPoints = this.path && font.hinting.exec(this, fontSize);
        }
        if (hPoints) {
          commands = font.hinting.getCommands(hPoints);
          x = Math.round(x);
          y = Math.round(y);
          xScale = yScale = 1;
        } else {
          commands = this.path.commands;
          var scale = 1 / (this.path.unitsPerEm || 1e3) * fontSize;
          if (xScale === void 0) {
            xScale = scale;
          }
          if (yScale === void 0) {
            yScale = scale;
          }
        }
        var p = new Path();
        for (var i = 0; i < commands.length; i += 1) {
          var cmd = commands[i];
          if (cmd.type === "M") {
            p.moveTo(x + cmd.x * xScale, y + -cmd.y * yScale);
          } else if (cmd.type === "L") {
            p.lineTo(x + cmd.x * xScale, y + -cmd.y * yScale);
          } else if (cmd.type === "Q") {
            p.quadraticCurveTo(x + cmd.x1 * xScale, y + -cmd.y1 * yScale, x + cmd.x * xScale, y + -cmd.y * yScale);
          } else if (cmd.type === "C") {
            p.curveTo(x + cmd.x1 * xScale, y + -cmd.y1 * yScale, x + cmd.x2 * xScale, y + -cmd.y2 * yScale, x + cmd.x * xScale, y + -cmd.y * yScale);
          } else if (cmd.type === "Z") {
            p.closePath();
          }
        }
        return p;
      };
      Glyph.prototype.getContours = function() {
        if (this.points === void 0) {
          return [];
        }
        var contours = [];
        var currentContour = [];
        for (var i = 0; i < this.points.length; i += 1) {
          var pt = this.points[i];
          currentContour.push(pt);
          if (pt.lastPointOfContour) {
            contours.push(currentContour);
            currentContour = [];
          }
        }
        check.argument(currentContour.length === 0, "There are still points left in the current contour.");
        return contours;
      };
      Glyph.prototype.getMetrics = function() {
        var commands = this.path.commands;
        var xCoords = [];
        var yCoords = [];
        for (var i = 0; i < commands.length; i += 1) {
          var cmd = commands[i];
          if (cmd.type !== "Z") {
            xCoords.push(cmd.x);
            yCoords.push(cmd.y);
          }
          if (cmd.type === "Q" || cmd.type === "C") {
            xCoords.push(cmd.x1);
            yCoords.push(cmd.y1);
          }
          if (cmd.type === "C") {
            xCoords.push(cmd.x2);
            yCoords.push(cmd.y2);
          }
        }
        var metrics = {
          xMin: Math.min.apply(null, xCoords),
          yMin: Math.min.apply(null, yCoords),
          xMax: Math.max.apply(null, xCoords),
          yMax: Math.max.apply(null, yCoords),
          leftSideBearing: this.leftSideBearing
        };
        if (!isFinite(metrics.xMin)) {
          metrics.xMin = 0;
        }
        if (!isFinite(metrics.xMax)) {
          metrics.xMax = this.advanceWidth;
        }
        if (!isFinite(metrics.yMin)) {
          metrics.yMin = 0;
        }
        if (!isFinite(metrics.yMax)) {
          metrics.yMax = 0;
        }
        metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);
        return metrics;
      };
      Glyph.prototype.draw = function(ctx, x, y, fontSize, options) {
        this.getPath(x, y, fontSize, options).draw(ctx);
      };
      Glyph.prototype.drawPoints = function(ctx, x, y, fontSize) {
        function drawCircles(l, x2, y2, scale2) {
          ctx.beginPath();
          for (var j = 0; j < l.length; j += 1) {
            ctx.moveTo(x2 + l[j].x * scale2, y2 + l[j].y * scale2);
            ctx.arc(x2 + l[j].x * scale2, y2 + l[j].y * scale2, 2, 0, Math.PI * 2, false);
          }
          ctx.closePath();
          ctx.fill();
        }
        x = x !== void 0 ? x : 0;
        y = y !== void 0 ? y : 0;
        fontSize = fontSize !== void 0 ? fontSize : 24;
        var scale = 1 / this.path.unitsPerEm * fontSize;
        var blueCircles = [];
        var redCircles = [];
        var path = this.path;
        for (var i = 0; i < path.commands.length; i += 1) {
          var cmd = path.commands[i];
          if (cmd.x !== void 0) {
            blueCircles.push({x: cmd.x, y: -cmd.y});
          }
          if (cmd.x1 !== void 0) {
            redCircles.push({x: cmd.x1, y: -cmd.y1});
          }
          if (cmd.x2 !== void 0) {
            redCircles.push({x: cmd.x2, y: -cmd.y2});
          }
        }
        ctx.fillStyle = "blue";
        drawCircles(blueCircles, x, y, scale);
        ctx.fillStyle = "red";
        drawCircles(redCircles, x, y, scale);
      };
      Glyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {
        var scale;
        x = x !== void 0 ? x : 0;
        y = y !== void 0 ? y : 0;
        fontSize = fontSize !== void 0 ? fontSize : 24;
        scale = 1 / this.path.unitsPerEm * fontSize;
        ctx.lineWidth = 1;
        ctx.strokeStyle = "black";
        draw.line(ctx, x, -1e4, x, 1e4);
        draw.line(ctx, -1e4, y, 1e4, y);
        var xMin = this.xMin || 0;
        var yMin = this.yMin || 0;
        var xMax = this.xMax || 0;
        var yMax = this.yMax || 0;
        var advanceWidth = this.advanceWidth || 0;
        ctx.strokeStyle = "blue";
        draw.line(ctx, x + xMin * scale, -1e4, x + xMin * scale, 1e4);
        draw.line(ctx, x + xMax * scale, -1e4, x + xMax * scale, 1e4);
        draw.line(ctx, -1e4, y + -yMin * scale, 1e4, y + -yMin * scale);
        draw.line(ctx, -1e4, y + -yMax * scale, 1e4, y + -yMax * scale);
        ctx.strokeStyle = "green";
        draw.line(ctx, x + advanceWidth * scale, -1e4, x + advanceWidth * scale, 1e4);
      };
      function defineDependentProperty(glyph, externalName, internalName) {
        Object.defineProperty(glyph, externalName, {
          get: function() {
            glyph.path;
            return glyph[internalName];
          },
          set: function(newValue) {
            glyph[internalName] = newValue;
          },
          enumerable: true,
          configurable: true
        });
      }
      function GlyphSet(font, glyphs) {
        this.font = font;
        this.glyphs = {};
        if (Array.isArray(glyphs)) {
          for (var i = 0; i < glyphs.length; i++) {
            var glyph = glyphs[i];
            glyph.path.unitsPerEm = font.unitsPerEm;
            this.glyphs[i] = glyph;
          }
        }
        this.length = glyphs && glyphs.length || 0;
      }
      GlyphSet.prototype.get = function(index) {
        if (this.glyphs[index] === void 0) {
          this.font._push(index);
          if (typeof this.glyphs[index] === "function") {
            this.glyphs[index] = this.glyphs[index]();
          }
          var glyph = this.glyphs[index];
          var unicodeObj = this.font._IndexToUnicodeMap[index];
          if (unicodeObj) {
            for (var j = 0; j < unicodeObj.unicodes.length; j++) {
              glyph.addUnicode(unicodeObj.unicodes[j]);
            }
          }
          if (this.font.cffEncoding) {
            if (this.font.isCIDFont) {
              glyph.name = "gid" + index;
            } else {
              glyph.name = this.font.cffEncoding.charset[index];
            }
          } else if (this.font.glyphNames.names) {
            glyph.name = this.font.glyphNames.glyphIndexToName(index);
          }
          this.glyphs[index].advanceWidth = this.font._hmtxTableData[index].advanceWidth;
          this.glyphs[index].leftSideBearing = this.font._hmtxTableData[index].leftSideBearing;
        } else {
          if (typeof this.glyphs[index] === "function") {
            this.glyphs[index] = this.glyphs[index]();
          }
        }
        return this.glyphs[index];
      };
      GlyphSet.prototype.push = function(index, loader) {
        this.glyphs[index] = loader;
        this.length++;
      };
      function glyphLoader(font, index) {
        return new Glyph({index, font});
      }
      function ttfGlyphLoader(font, index, parseGlyph2, data, position, buildPath2) {
        return function() {
          var glyph = new Glyph({index, font});
          glyph.path = function() {
            parseGlyph2(glyph, data, position);
            var path = buildPath2(font.glyphs, glyph);
            path.unitsPerEm = font.unitsPerEm;
            return path;
          };
          defineDependentProperty(glyph, "xMin", "_xMin");
          defineDependentProperty(glyph, "xMax", "_xMax");
          defineDependentProperty(glyph, "yMin", "_yMin");
          defineDependentProperty(glyph, "yMax", "_yMax");
          return glyph;
        };
      }
      function cffGlyphLoader(font, index, parseCFFCharstring2, charstring) {
        return function() {
          var glyph = new Glyph({index, font});
          glyph.path = function() {
            var path = parseCFFCharstring2(font, glyph, charstring);
            path.unitsPerEm = font.unitsPerEm;
            return path;
          };
          return glyph;
        };
      }
      var glyphset = {GlyphSet, glyphLoader, ttfGlyphLoader, cffGlyphLoader};
      function equals(a, b) {
        if (a === b) {
          return true;
        } else if (Array.isArray(a) && Array.isArray(b)) {
          if (a.length !== b.length) {
            return false;
          }
          for (var i = 0; i < a.length; i += 1) {
            if (!equals(a[i], b[i])) {
              return false;
            }
          }
          return true;
        } else {
          return false;
        }
      }
      function calcCFFSubroutineBias(subrs) {
        var bias;
        if (subrs.length < 1240) {
          bias = 107;
        } else if (subrs.length < 33900) {
          bias = 1131;
        } else {
          bias = 32768;
        }
        return bias;
      }
      function parseCFFIndex(data, start, conversionFn) {
        var offsets = [];
        var objects = [];
        var count = parse.getCard16(data, start);
        var objectOffset;
        var endOffset;
        if (count !== 0) {
          var offsetSize = parse.getByte(data, start + 2);
          objectOffset = start + (count + 1) * offsetSize + 2;
          var pos = start + 3;
          for (var i = 0; i < count + 1; i += 1) {
            offsets.push(parse.getOffset(data, pos, offsetSize));
            pos += offsetSize;
          }
          endOffset = objectOffset + offsets[count];
        } else {
          endOffset = start + 2;
        }
        for (var i$1 = 0; i$1 < offsets.length - 1; i$1 += 1) {
          var value = parse.getBytes(data, objectOffset + offsets[i$1], objectOffset + offsets[i$1 + 1]);
          if (conversionFn) {
            value = conversionFn(value);
          }
          objects.push(value);
        }
        return {objects, startOffset: start, endOffset};
      }
      function parseCFFIndexLowMemory(data, start) {
        var offsets = [];
        var count = parse.getCard16(data, start);
        var objectOffset;
        var endOffset;
        if (count !== 0) {
          var offsetSize = parse.getByte(data, start + 2);
          objectOffset = start + (count + 1) * offsetSize + 2;
          var pos = start + 3;
          for (var i = 0; i < count + 1; i += 1) {
            offsets.push(parse.getOffset(data, pos, offsetSize));
            pos += offsetSize;
          }
          endOffset = objectOffset + offsets[count];
        } else {
          endOffset = start + 2;
        }
        return {offsets, startOffset: start, endOffset};
      }
      function getCffIndexObject(i, offsets, data, start, conversionFn) {
        var count = parse.getCard16(data, start);
        var objectOffset = 0;
        if (count !== 0) {
          var offsetSize = parse.getByte(data, start + 2);
          objectOffset = start + (count + 1) * offsetSize + 2;
        }
        var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);
        if (conversionFn) {
          value = conversionFn(value);
        }
        return value;
      }
      function parseFloatOperand(parser) {
        var s = "";
        var eof = 15;
        var lookup = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"];
        while (true) {
          var b = parser.parseByte();
          var n1 = b >> 4;
          var n2 = b & 15;
          if (n1 === eof) {
            break;
          }
          s += lookup[n1];
          if (n2 === eof) {
            break;
          }
          s += lookup[n2];
        }
        return parseFloat(s);
      }
      function parseOperand(parser, b0) {
        var b1;
        var b2;
        var b3;
        var b4;
        if (b0 === 28) {
          b1 = parser.parseByte();
          b2 = parser.parseByte();
          return b1 << 8 | b2;
        }
        if (b0 === 29) {
          b1 = parser.parseByte();
          b2 = parser.parseByte();
          b3 = parser.parseByte();
          b4 = parser.parseByte();
          return b1 << 24 | b2 << 16 | b3 << 8 | b4;
        }
        if (b0 === 30) {
          return parseFloatOperand(parser);
        }
        if (b0 >= 32 && b0 <= 246) {
          return b0 - 139;
        }
        if (b0 >= 247 && b0 <= 250) {
          b1 = parser.parseByte();
          return (b0 - 247) * 256 + b1 + 108;
        }
        if (b0 >= 251 && b0 <= 254) {
          b1 = parser.parseByte();
          return -(b0 - 251) * 256 - b1 - 108;
        }
        throw new Error("Invalid b0 " + b0);
      }
      function entriesToObject(entries) {
        var o = {};
        for (var i = 0; i < entries.length; i += 1) {
          var key = entries[i][0];
          var values = entries[i][1];
          var value = void 0;
          if (values.length === 1) {
            value = values[0];
          } else {
            value = values;
          }
          if (o.hasOwnProperty(key) && !isNaN(o[key])) {
            throw new Error("Object " + o + " already has key " + key);
          }
          o[key] = value;
        }
        return o;
      }
      function parseCFFDict(data, start, size) {
        start = start !== void 0 ? start : 0;
        var parser = new parse.Parser(data, start);
        var entries = [];
        var operands = [];
        size = size !== void 0 ? size : data.length;
        while (parser.relativeOffset < size) {
          var op = parser.parseByte();
          if (op <= 21) {
            if (op === 12) {
              op = 1200 + parser.parseByte();
            }
            entries.push([op, operands]);
            operands = [];
          } else {
            operands.push(parseOperand(parser, op));
          }
        }
        return entriesToObject(entries);
      }
      function getCFFString(strings, index) {
        if (index <= 390) {
          index = cffStandardStrings[index];
        } else {
          index = strings[index - 391];
        }
        return index;
      }
      function interpretDict(dict, meta2, strings) {
        var newDict = {};
        var value;
        for (var i = 0; i < meta2.length; i += 1) {
          var m = meta2[i];
          if (Array.isArray(m.type)) {
            var values = [];
            values.length = m.type.length;
            for (var j = 0; j < m.type.length; j++) {
              value = dict[m.op] !== void 0 ? dict[m.op][j] : void 0;
              if (value === void 0) {
                value = m.value !== void 0 && m.value[j] !== void 0 ? m.value[j] : null;
              }
              if (m.type[j] === "SID") {
                value = getCFFString(strings, value);
              }
              values[j] = value;
            }
            newDict[m.name] = values;
          } else {
            value = dict[m.op];
            if (value === void 0) {
              value = m.value !== void 0 ? m.value : null;
            }
            if (m.type === "SID") {
              value = getCFFString(strings, value);
            }
            newDict[m.name] = value;
          }
        }
        return newDict;
      }
      function parseCFFHeader(data, start) {
        var header = {};
        header.formatMajor = parse.getCard8(data, start);
        header.formatMinor = parse.getCard8(data, start + 1);
        header.size = parse.getCard8(data, start + 2);
        header.offsetSize = parse.getCard8(data, start + 3);
        header.startOffset = start;
        header.endOffset = start + 4;
        return header;
      }
      var TOP_DICT_META = [
        {name: "version", op: 0, type: "SID"},
        {name: "notice", op: 1, type: "SID"},
        {name: "copyright", op: 1200, type: "SID"},
        {name: "fullName", op: 2, type: "SID"},
        {name: "familyName", op: 3, type: "SID"},
        {name: "weight", op: 4, type: "SID"},
        {name: "isFixedPitch", op: 1201, type: "number", value: 0},
        {name: "italicAngle", op: 1202, type: "number", value: 0},
        {name: "underlinePosition", op: 1203, type: "number", value: -100},
        {name: "underlineThickness", op: 1204, type: "number", value: 50},
        {name: "paintType", op: 1205, type: "number", value: 0},
        {name: "charstringType", op: 1206, type: "number", value: 2},
        {
          name: "fontMatrix",
          op: 1207,
          type: ["real", "real", "real", "real", "real", "real"],
          value: [1e-3, 0, 0, 1e-3, 0, 0]
        },
        {name: "uniqueId", op: 13, type: "number"},
        {name: "fontBBox", op: 5, type: ["number", "number", "number", "number"], value: [0, 0, 0, 0]},
        {name: "strokeWidth", op: 1208, type: "number", value: 0},
        {name: "xuid", op: 14, type: [], value: null},
        {name: "charset", op: 15, type: "offset", value: 0},
        {name: "encoding", op: 16, type: "offset", value: 0},
        {name: "charStrings", op: 17, type: "offset", value: 0},
        {name: "private", op: 18, type: ["number", "offset"], value: [0, 0]},
        {name: "ros", op: 1230, type: ["SID", "SID", "number"]},
        {name: "cidFontVersion", op: 1231, type: "number", value: 0},
        {name: "cidFontRevision", op: 1232, type: "number", value: 0},
        {name: "cidFontType", op: 1233, type: "number", value: 0},
        {name: "cidCount", op: 1234, type: "number", value: 8720},
        {name: "uidBase", op: 1235, type: "number"},
        {name: "fdArray", op: 1236, type: "offset"},
        {name: "fdSelect", op: 1237, type: "offset"},
        {name: "fontName", op: 1238, type: "SID"}
      ];
      var PRIVATE_DICT_META = [
        {name: "subrs", op: 19, type: "offset", value: 0},
        {name: "defaultWidthX", op: 20, type: "number", value: 0},
        {name: "nominalWidthX", op: 21, type: "number", value: 0}
      ];
      function parseCFFTopDict(data, strings) {
        var dict = parseCFFDict(data, 0, data.byteLength);
        return interpretDict(dict, TOP_DICT_META, strings);
      }
      function parseCFFPrivateDict(data, start, size, strings) {
        var dict = parseCFFDict(data, start, size);
        return interpretDict(dict, PRIVATE_DICT_META, strings);
      }
      function gatherCFFTopDicts(data, start, cffIndex, strings) {
        var topDictArray = [];
        for (var iTopDict = 0; iTopDict < cffIndex.length; iTopDict += 1) {
          var topDictData = new DataView(new Uint8Array(cffIndex[iTopDict]).buffer);
          var topDict = parseCFFTopDict(topDictData, strings);
          topDict._subrs = [];
          topDict._subrsBias = 0;
          topDict._defaultWidthX = 0;
          topDict._nominalWidthX = 0;
          var privateSize = topDict.private[0];
          var privateOffset = topDict.private[1];
          if (privateSize !== 0 && privateOffset !== 0) {
            var privateDict = parseCFFPrivateDict(data, privateOffset + start, privateSize, strings);
            topDict._defaultWidthX = privateDict.defaultWidthX;
            topDict._nominalWidthX = privateDict.nominalWidthX;
            if (privateDict.subrs !== 0) {
              var subrOffset = privateOffset + privateDict.subrs;
              var subrIndex = parseCFFIndex(data, subrOffset + start);
              topDict._subrs = subrIndex.objects;
              topDict._subrsBias = calcCFFSubroutineBias(topDict._subrs);
            }
            topDict._privateDict = privateDict;
          }
          topDictArray.push(topDict);
        }
        return topDictArray;
      }
      function parseCFFCharset(data, start, nGlyphs, strings) {
        var sid;
        var count;
        var parser = new parse.Parser(data, start);
        nGlyphs -= 1;
        var charset = [".notdef"];
        var format = parser.parseCard8();
        if (format === 0) {
          for (var i = 0; i < nGlyphs; i += 1) {
            sid = parser.parseSID();
            charset.push(getCFFString(strings, sid));
          }
        } else if (format === 1) {
          while (charset.length <= nGlyphs) {
            sid = parser.parseSID();
            count = parser.parseCard8();
            for (var i$1 = 0; i$1 <= count; i$1 += 1) {
              charset.push(getCFFString(strings, sid));
              sid += 1;
            }
          }
        } else if (format === 2) {
          while (charset.length <= nGlyphs) {
            sid = parser.parseSID();
            count = parser.parseCard16();
            for (var i$2 = 0; i$2 <= count; i$2 += 1) {
              charset.push(getCFFString(strings, sid));
              sid += 1;
            }
          }
        } else {
          throw new Error("Unknown charset format " + format);
        }
        return charset;
      }
      function parseCFFEncoding(data, start, charset) {
        var code;
        var enc = {};
        var parser = new parse.Parser(data, start);
        var format = parser.parseCard8();
        if (format === 0) {
          var nCodes = parser.parseCard8();
          for (var i = 0; i < nCodes; i += 1) {
            code = parser.parseCard8();
            enc[code] = i;
          }
        } else if (format === 1) {
          var nRanges = parser.parseCard8();
          code = 1;
          for (var i$1 = 0; i$1 < nRanges; i$1 += 1) {
            var first = parser.parseCard8();
            var nLeft = parser.parseCard8();
            for (var j = first; j <= first + nLeft; j += 1) {
              enc[j] = code;
              code += 1;
            }
          }
        } else {
          throw new Error("Unknown encoding format " + format);
        }
        return new CffEncoding(enc, charset);
      }
      function parseCFFCharstring(font, glyph, code) {
        var c1x;
        var c1y;
        var c2x;
        var c2y;
        var p = new Path();
        var stack = [];
        var nStems = 0;
        var haveWidth = false;
        var open = false;
        var x = 0;
        var y = 0;
        var subrs;
        var subrsBias;
        var defaultWidthX;
        var nominalWidthX;
        if (font.isCIDFont) {
          var fdIndex = font.tables.cff.topDict._fdSelect[glyph.index];
          var fdDict = font.tables.cff.topDict._fdArray[fdIndex];
          subrs = fdDict._subrs;
          subrsBias = fdDict._subrsBias;
          defaultWidthX = fdDict._defaultWidthX;
          nominalWidthX = fdDict._nominalWidthX;
        } else {
          subrs = font.tables.cff.topDict._subrs;
          subrsBias = font.tables.cff.topDict._subrsBias;
          defaultWidthX = font.tables.cff.topDict._defaultWidthX;
          nominalWidthX = font.tables.cff.topDict._nominalWidthX;
        }
        var width = defaultWidthX;
        function newContour(x2, y2) {
          if (open) {
            p.closePath();
          }
          p.moveTo(x2, y2);
          open = true;
        }
        function parseStems() {
          var hasWidthArg;
          hasWidthArg = stack.length % 2 !== 0;
          if (hasWidthArg && !haveWidth) {
            width = stack.shift() + nominalWidthX;
          }
          nStems += stack.length >> 1;
          stack.length = 0;
          haveWidth = true;
        }
        function parse2(code2) {
          var b1;
          var b2;
          var b3;
          var b4;
          var codeIndex;
          var subrCode;
          var jpx;
          var jpy;
          var c3x;
          var c3y;
          var c4x;
          var c4y;
          var i = 0;
          while (i < code2.length) {
            var v = code2[i];
            i += 1;
            switch (v) {
              case 1:
                parseStems();
                break;
              case 3:
                parseStems();
                break;
              case 4:
                if (stack.length > 1 && !haveWidth) {
                  width = stack.shift() + nominalWidthX;
                  haveWidth = true;
                }
                y += stack.pop();
                newContour(x, y);
                break;
              case 5:
                while (stack.length > 0) {
                  x += stack.shift();
                  y += stack.shift();
                  p.lineTo(x, y);
                }
                break;
              case 6:
                while (stack.length > 0) {
                  x += stack.shift();
                  p.lineTo(x, y);
                  if (stack.length === 0) {
                    break;
                  }
                  y += stack.shift();
                  p.lineTo(x, y);
                }
                break;
              case 7:
                while (stack.length > 0) {
                  y += stack.shift();
                  p.lineTo(x, y);
                  if (stack.length === 0) {
                    break;
                  }
                  x += stack.shift();
                  p.lineTo(x, y);
                }
                break;
              case 8:
                while (stack.length > 0) {
                  c1x = x + stack.shift();
                  c1y = y + stack.shift();
                  c2x = c1x + stack.shift();
                  c2y = c1y + stack.shift();
                  x = c2x + stack.shift();
                  y = c2y + stack.shift();
                  p.curveTo(c1x, c1y, c2x, c2y, x, y);
                }
                break;
              case 10:
                codeIndex = stack.pop() + subrsBias;
                subrCode = subrs[codeIndex];
                if (subrCode) {
                  parse2(subrCode);
                }
                break;
              case 11:
                return;
              case 12:
                v = code2[i];
                i += 1;
                switch (v) {
                  case 35:
                    c1x = x + stack.shift();
                    c1y = y + stack.shift();
                    c2x = c1x + stack.shift();
                    c2y = c1y + stack.shift();
                    jpx = c2x + stack.shift();
                    jpy = c2y + stack.shift();
                    c3x = jpx + stack.shift();
                    c3y = jpy + stack.shift();
                    c4x = c3x + stack.shift();
                    c4y = c3y + stack.shift();
                    x = c4x + stack.shift();
                    y = c4y + stack.shift();
                    stack.shift();
                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);
                    p.curveTo(c3x, c3y, c4x, c4y, x, y);
                    break;
                  case 34:
                    c1x = x + stack.shift();
                    c1y = y;
                    c2x = c1x + stack.shift();
                    c2y = c1y + stack.shift();
                    jpx = c2x + stack.shift();
                    jpy = c2y;
                    c3x = jpx + stack.shift();
                    c3y = c2y;
                    c4x = c3x + stack.shift();
                    c4y = y;
                    x = c4x + stack.shift();
                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);
                    p.curveTo(c3x, c3y, c4x, c4y, x, y);
                    break;
                  case 36:
                    c1x = x + stack.shift();
                    c1y = y + stack.shift();
                    c2x = c1x + stack.shift();
                    c2y = c1y + stack.shift();
                    jpx = c2x + stack.shift();
                    jpy = c2y;
                    c3x = jpx + stack.shift();
                    c3y = c2y;
                    c4x = c3x + stack.shift();
                    c4y = c3y + stack.shift();
                    x = c4x + stack.shift();
                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);
                    p.curveTo(c3x, c3y, c4x, c4y, x, y);
                    break;
                  case 37:
                    c1x = x + stack.shift();
                    c1y = y + stack.shift();
                    c2x = c1x + stack.shift();
                    c2y = c1y + stack.shift();
                    jpx = c2x + stack.shift();
                    jpy = c2y + stack.shift();
                    c3x = jpx + stack.shift();
                    c3y = jpy + stack.shift();
                    c4x = c3x + stack.shift();
                    c4y = c3y + stack.shift();
                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {
                      x = c4x + stack.shift();
                    } else {
                      y = c4y + stack.shift();
                    }
                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);
                    p.curveTo(c3x, c3y, c4x, c4y, x, y);
                    break;
                  default:
                    console.log("Glyph " + glyph.index + ": unknown operator " + 1200 + v);
                    stack.length = 0;
                }
                break;
              case 14:
                if (stack.length > 0 && !haveWidth) {
                  width = stack.shift() + nominalWidthX;
                  haveWidth = true;
                }
                if (open) {
                  p.closePath();
                  open = false;
                }
                break;
              case 18:
                parseStems();
                break;
              case 19:
              case 20:
                parseStems();
                i += nStems + 7 >> 3;
                break;
              case 21:
                if (stack.length > 2 && !haveWidth) {
                  width = stack.shift() + nominalWidthX;
                  haveWidth = true;
                }
                y += stack.pop();
                x += stack.pop();
                newContour(x, y);
                break;
              case 22:
                if (stack.length > 1 && !haveWidth) {
                  width = stack.shift() + nominalWidthX;
                  haveWidth = true;
                }
                x += stack.pop();
                newContour(x, y);
                break;
              case 23:
                parseStems();
                break;
              case 24:
                while (stack.length > 2) {
                  c1x = x + stack.shift();
                  c1y = y + stack.shift();
                  c2x = c1x + stack.shift();
                  c2y = c1y + stack.shift();
                  x = c2x + stack.shift();
                  y = c2y + stack.shift();
                  p.curveTo(c1x, c1y, c2x, c2y, x, y);
                }
                x += stack.shift();
                y += stack.shift();
                p.lineTo(x, y);
                break;
              case 25:
                while (stack.length > 6) {
                  x += stack.shift();
                  y += stack.shift();
                  p.lineTo(x, y);
                }
                c1x = x + stack.shift();
                c1y = y + stack.shift();
                c2x = c1x + stack.shift();
                c2y = c1y + stack.shift();
                x = c2x + stack.shift();
                y = c2y + stack.shift();
                p.curveTo(c1x, c1y, c2x, c2y, x, y);
                break;
              case 26:
                if (stack.length % 2) {
                  x += stack.shift();
                }
                while (stack.length > 0) {
                  c1x = x;
                  c1y = y + stack.shift();
                  c2x = c1x + stack.shift();
                  c2y = c1y + stack.shift();
                  x = c2x;
                  y = c2y + stack.shift();
                  p.curveTo(c1x, c1y, c2x, c2y, x, y);
                }
                break;
              case 27:
                if (stack.length % 2) {
                  y += stack.shift();
                }
                while (stack.length > 0) {
                  c1x = x + stack.shift();
                  c1y = y;
                  c2x = c1x + stack.shift();
                  c2y = c1y + stack.shift();
                  x = c2x + stack.shift();
                  y = c2y;
                  p.curveTo(c1x, c1y, c2x, c2y, x, y);
                }
                break;
              case 28:
                b1 = code2[i];
                b2 = code2[i + 1];
                stack.push((b1 << 24 | b2 << 16) >> 16);
                i += 2;
                break;
              case 29:
                codeIndex = stack.pop() + font.gsubrsBias;
                subrCode = font.gsubrs[codeIndex];
                if (subrCode) {
                  parse2(subrCode);
                }
                break;
              case 30:
                while (stack.length > 0) {
                  c1x = x;
                  c1y = y + stack.shift();
                  c2x = c1x + stack.shift();
                  c2y = c1y + stack.shift();
                  x = c2x + stack.shift();
                  y = c2y + (stack.length === 1 ? stack.shift() : 0);
                  p.curveTo(c1x, c1y, c2x, c2y, x, y);
                  if (stack.length === 0) {
                    break;
                  }
                  c1x = x + stack.shift();
                  c1y = y;
                  c2x = c1x + stack.shift();
                  c2y = c1y + stack.shift();
                  y = c2y + stack.shift();
                  x = c2x + (stack.length === 1 ? stack.shift() : 0);
                  p.curveTo(c1x, c1y, c2x, c2y, x, y);
                }
                break;
              case 31:
                while (stack.length > 0) {
                  c1x = x + stack.shift();
                  c1y = y;
                  c2x = c1x + stack.shift();
                  c2y = c1y + stack.shift();
                  y = c2y + stack.shift();
                  x = c2x + (stack.length === 1 ? stack.shift() : 0);
                  p.curveTo(c1x, c1y, c2x, c2y, x, y);
                  if (stack.length === 0) {
                    break;
                  }
                  c1x = x;
                  c1y = y + stack.shift();
                  c2x = c1x + stack.shift();
                  c2y = c1y + stack.shift();
                  x = c2x + stack.shift();
                  y = c2y + (stack.length === 1 ? stack.shift() : 0);
                  p.curveTo(c1x, c1y, c2x, c2y, x, y);
                }
                break;
              default:
                if (v < 32) {
                  console.log("Glyph " + glyph.index + ": unknown operator " + v);
                } else if (v < 247) {
                  stack.push(v - 139);
                } else if (v < 251) {
                  b1 = code2[i];
                  i += 1;
                  stack.push((v - 247) * 256 + b1 + 108);
                } else if (v < 255) {
                  b1 = code2[i];
                  i += 1;
                  stack.push(-(v - 251) * 256 - b1 - 108);
                } else {
                  b1 = code2[i];
                  b2 = code2[i + 1];
                  b3 = code2[i + 2];
                  b4 = code2[i + 3];
                  i += 4;
                  stack.push((b1 << 24 | b2 << 16 | b3 << 8 | b4) / 65536);
                }
            }
          }
        }
        parse2(code);
        glyph.advanceWidth = width;
        return p;
      }
      function parseCFFFDSelect(data, start, nGlyphs, fdArrayCount) {
        var fdSelect = [];
        var fdIndex;
        var parser = new parse.Parser(data, start);
        var format = parser.parseCard8();
        if (format === 0) {
          for (var iGid = 0; iGid < nGlyphs; iGid++) {
            fdIndex = parser.parseCard8();
            if (fdIndex >= fdArrayCount) {
              throw new Error("CFF table CID Font FDSelect has bad FD index value " + fdIndex + " (FD count " + fdArrayCount + ")");
            }
            fdSelect.push(fdIndex);
          }
        } else if (format === 3) {
          var nRanges = parser.parseCard16();
          var first = parser.parseCard16();
          if (first !== 0) {
            throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID " + first);
          }
          var next;
          for (var iRange = 0; iRange < nRanges; iRange++) {
            fdIndex = parser.parseCard8();
            next = parser.parseCard16();
            if (fdIndex >= fdArrayCount) {
              throw new Error("CFF table CID Font FDSelect has bad FD index value " + fdIndex + " (FD count " + fdArrayCount + ")");
            }
            if (next > nGlyphs) {
              throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID " + next);
            }
            for (; first < next; first++) {
              fdSelect.push(fdIndex);
            }
            first = next;
          }
          if (next !== nGlyphs) {
            throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID " + next);
          }
        } else {
          throw new Error("CFF Table CID Font FDSelect table has unsupported format " + format);
        }
        return fdSelect;
      }
      function parseCFFTable(data, start, font, opt) {
        font.tables.cff = {};
        var header = parseCFFHeader(data, start);
        var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);
        var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);
        var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);
        var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);
        font.gsubrs = globalSubrIndex.objects;
        font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);
        var topDictArray = gatherCFFTopDicts(data, start, topDictIndex.objects, stringIndex.objects);
        if (topDictArray.length !== 1) {
          throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " + topDictArray.length);
        }
        var topDict = topDictArray[0];
        font.tables.cff.topDict = topDict;
        if (topDict._privateDict) {
          font.defaultWidthX = topDict._privateDict.defaultWidthX;
          font.nominalWidthX = topDict._privateDict.nominalWidthX;
        }
        if (topDict.ros[0] !== void 0 && topDict.ros[1] !== void 0) {
          font.isCIDFont = true;
        }
        if (font.isCIDFont) {
          var fdArrayOffset = topDict.fdArray;
          var fdSelectOffset = topDict.fdSelect;
          if (fdArrayOffset === 0 || fdSelectOffset === 0) {
            throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");
          }
          fdArrayOffset += start;
          var fdArrayIndex = parseCFFIndex(data, fdArrayOffset);
          var fdArray = gatherCFFTopDicts(data, start, fdArrayIndex.objects, stringIndex.objects);
          topDict._fdArray = fdArray;
          fdSelectOffset += start;
          topDict._fdSelect = parseCFFFDSelect(data, fdSelectOffset, font.numGlyphs, fdArray.length);
        }
        var privateDictOffset = start + topDict.private[1];
        var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict.private[0], stringIndex.objects);
        font.defaultWidthX = privateDict.defaultWidthX;
        font.nominalWidthX = privateDict.nominalWidthX;
        if (privateDict.subrs !== 0) {
          var subrOffset = privateDictOffset + privateDict.subrs;
          var subrIndex = parseCFFIndex(data, subrOffset);
          font.subrs = subrIndex.objects;
          font.subrsBias = calcCFFSubroutineBias(font.subrs);
        } else {
          font.subrs = [];
          font.subrsBias = 0;
        }
        var charStringsIndex;
        if (opt.lowMemory) {
          charStringsIndex = parseCFFIndexLowMemory(data, start + topDict.charStrings);
          font.nGlyphs = charStringsIndex.offsets.length;
        } else {
          charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);
          font.nGlyphs = charStringsIndex.objects.length;
        }
        var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);
        if (topDict.encoding === 0) {
          font.cffEncoding = new CffEncoding(cffStandardEncoding, charset);
        } else if (topDict.encoding === 1) {
          font.cffEncoding = new CffEncoding(cffExpertEncoding, charset);
        } else {
          font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);
        }
        font.encoding = font.encoding || font.cffEncoding;
        font.glyphs = new glyphset.GlyphSet(font);
        if (opt.lowMemory) {
          font._push = function(i2) {
            var charString2 = getCffIndexObject(i2, charStringsIndex.offsets, data, start + topDict.charStrings);
            font.glyphs.push(i2, glyphset.cffGlyphLoader(font, i2, parseCFFCharstring, charString2));
          };
        } else {
          for (var i = 0; i < font.nGlyphs; i += 1) {
            var charString = charStringsIndex.objects[i];
            font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));
          }
        }
      }
      function encodeString(s, strings) {
        var sid;
        var i = cffStandardStrings.indexOf(s);
        if (i >= 0) {
          sid = i;
        }
        i = strings.indexOf(s);
        if (i >= 0) {
          sid = i + cffStandardStrings.length;
        } else {
          sid = cffStandardStrings.length + strings.length;
          strings.push(s);
        }
        return sid;
      }
      function makeHeader() {
        return new table.Record("Header", [
          {name: "major", type: "Card8", value: 1},
          {name: "minor", type: "Card8", value: 0},
          {name: "hdrSize", type: "Card8", value: 4},
          {name: "major", type: "Card8", value: 1}
        ]);
      }
      function makeNameIndex(fontNames) {
        var t = new table.Record("Name INDEX", [
          {name: "names", type: "INDEX", value: []}
        ]);
        t.names = [];
        for (var i = 0; i < fontNames.length; i += 1) {
          t.names.push({name: "name_" + i, type: "NAME", value: fontNames[i]});
        }
        return t;
      }
      function makeDict(meta2, attrs, strings) {
        var m = {};
        for (var i = 0; i < meta2.length; i += 1) {
          var entry = meta2[i];
          var value = attrs[entry.name];
          if (value !== void 0 && !equals(value, entry.value)) {
            if (entry.type === "SID") {
              value = encodeString(value, strings);
            }
            m[entry.op] = {name: entry.name, type: entry.type, value};
          }
        }
        return m;
      }
      function makeTopDict(attrs, strings) {
        var t = new table.Record("Top DICT", [
          {name: "dict", type: "DICT", value: {}}
        ]);
        t.dict = makeDict(TOP_DICT_META, attrs, strings);
        return t;
      }
      function makeTopDictIndex(topDict) {
        var t = new table.Record("Top DICT INDEX", [
          {name: "topDicts", type: "INDEX", value: []}
        ]);
        t.topDicts = [{name: "topDict_0", type: "TABLE", value: topDict}];
        return t;
      }
      function makeStringIndex(strings) {
        var t = new table.Record("String INDEX", [
          {name: "strings", type: "INDEX", value: []}
        ]);
        t.strings = [];
        for (var i = 0; i < strings.length; i += 1) {
          t.strings.push({name: "string_" + i, type: "STRING", value: strings[i]});
        }
        return t;
      }
      function makeGlobalSubrIndex() {
        return new table.Record("Global Subr INDEX", [
          {name: "subrs", type: "INDEX", value: []}
        ]);
      }
      function makeCharsets(glyphNames, strings) {
        var t = new table.Record("Charsets", [
          {name: "format", type: "Card8", value: 0}
        ]);
        for (var i = 0; i < glyphNames.length; i += 1) {
          var glyphName = glyphNames[i];
          var glyphSID = encodeString(glyphName, strings);
          t.fields.push({name: "glyph_" + i, type: "SID", value: glyphSID});
        }
        return t;
      }
      function glyphToOps(glyph) {
        var ops = [];
        var path = glyph.path;
        ops.push({name: "width", type: "NUMBER", value: glyph.advanceWidth});
        var x = 0;
        var y = 0;
        for (var i = 0; i < path.commands.length; i += 1) {
          var dx = void 0;
          var dy = void 0;
          var cmd = path.commands[i];
          if (cmd.type === "Q") {
            var _13 = 1 / 3;
            var _23 = 2 / 3;
            cmd = {
              type: "C",
              x: cmd.x,
              y: cmd.y,
              x1: Math.round(_13 * x + _23 * cmd.x1),
              y1: Math.round(_13 * y + _23 * cmd.y1),
              x2: Math.round(_13 * cmd.x + _23 * cmd.x1),
              y2: Math.round(_13 * cmd.y + _23 * cmd.y1)
            };
          }
          if (cmd.type === "M") {
            dx = Math.round(cmd.x - x);
            dy = Math.round(cmd.y - y);
            ops.push({name: "dx", type: "NUMBER", value: dx});
            ops.push({name: "dy", type: "NUMBER", value: dy});
            ops.push({name: "rmoveto", type: "OP", value: 21});
            x = Math.round(cmd.x);
            y = Math.round(cmd.y);
          } else if (cmd.type === "L") {
            dx = Math.round(cmd.x - x);
            dy = Math.round(cmd.y - y);
            ops.push({name: "dx", type: "NUMBER", value: dx});
            ops.push({name: "dy", type: "NUMBER", value: dy});
            ops.push({name: "rlineto", type: "OP", value: 5});
            x = Math.round(cmd.x);
            y = Math.round(cmd.y);
          } else if (cmd.type === "C") {
            var dx1 = Math.round(cmd.x1 - x);
            var dy1 = Math.round(cmd.y1 - y);
            var dx2 = Math.round(cmd.x2 - cmd.x1);
            var dy2 = Math.round(cmd.y2 - cmd.y1);
            dx = Math.round(cmd.x - cmd.x2);
            dy = Math.round(cmd.y - cmd.y2);
            ops.push({name: "dx1", type: "NUMBER", value: dx1});
            ops.push({name: "dy1", type: "NUMBER", value: dy1});
            ops.push({name: "dx2", type: "NUMBER", value: dx2});
            ops.push({name: "dy2", type: "NUMBER", value: dy2});
            ops.push({name: "dx", type: "NUMBER", value: dx});
            ops.push({name: "dy", type: "NUMBER", value: dy});
            ops.push({name: "rrcurveto", type: "OP", value: 8});
            x = Math.round(cmd.x);
            y = Math.round(cmd.y);
          }
        }
        ops.push({name: "endchar", type: "OP", value: 14});
        return ops;
      }
      function makeCharStringsIndex(glyphs) {
        var t = new table.Record("CharStrings INDEX", [
          {name: "charStrings", type: "INDEX", value: []}
        ]);
        for (var i = 0; i < glyphs.length; i += 1) {
          var glyph = glyphs.get(i);
          var ops = glyphToOps(glyph);
          t.charStrings.push({name: glyph.name, type: "CHARSTRING", value: ops});
        }
        return t;
      }
      function makePrivateDict(attrs, strings) {
        var t = new table.Record("Private DICT", [
          {name: "dict", type: "DICT", value: {}}
        ]);
        t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);
        return t;
      }
      function makeCFFTable(glyphs, options) {
        var t = new table.Table("CFF ", [
          {name: "header", type: "RECORD"},
          {name: "nameIndex", type: "RECORD"},
          {name: "topDictIndex", type: "RECORD"},
          {name: "stringIndex", type: "RECORD"},
          {name: "globalSubrIndex", type: "RECORD"},
          {name: "charsets", type: "RECORD"},
          {name: "charStringsIndex", type: "RECORD"},
          {name: "privateDict", type: "RECORD"}
        ]);
        var fontScale = 1 / options.unitsPerEm;
        var attrs = {
          version: options.version,
          fullName: options.fullName,
          familyName: options.familyName,
          weight: options.weightName,
          fontBBox: options.fontBBox || [0, 0, 0, 0],
          fontMatrix: [fontScale, 0, 0, fontScale, 0, 0],
          charset: 999,
          encoding: 0,
          charStrings: 999,
          private: [0, 999]
        };
        var privateAttrs = {};
        var glyphNames = [];
        var glyph;
        for (var i = 1; i < glyphs.length; i += 1) {
          glyph = glyphs.get(i);
          glyphNames.push(glyph.name);
        }
        var strings = [];
        t.header = makeHeader();
        t.nameIndex = makeNameIndex([options.postScriptName]);
        var topDict = makeTopDict(attrs, strings);
        t.topDictIndex = makeTopDictIndex(topDict);
        t.globalSubrIndex = makeGlobalSubrIndex();
        t.charsets = makeCharsets(glyphNames, strings);
        t.charStringsIndex = makeCharStringsIndex(glyphs);
        t.privateDict = makePrivateDict(privateAttrs, strings);
        t.stringIndex = makeStringIndex(strings);
        var startOffset = t.header.sizeOf() + t.nameIndex.sizeOf() + t.topDictIndex.sizeOf() + t.stringIndex.sizeOf() + t.globalSubrIndex.sizeOf();
        attrs.charset = startOffset;
        attrs.encoding = 0;
        attrs.charStrings = attrs.charset + t.charsets.sizeOf();
        attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();
        topDict = makeTopDict(attrs, strings);
        t.topDictIndex = makeTopDictIndex(topDict);
        return t;
      }
      var cff = {parse: parseCFFTable, make: makeCFFTable};
      function parseHeadTable(data, start) {
        var head2 = {};
        var p = new parse.Parser(data, start);
        head2.version = p.parseVersion();
        head2.fontRevision = Math.round(p.parseFixed() * 1e3) / 1e3;
        head2.checkSumAdjustment = p.parseULong();
        head2.magicNumber = p.parseULong();
        check.argument(head2.magicNumber === 1594834165, "Font header has wrong magic number.");
        head2.flags = p.parseUShort();
        head2.unitsPerEm = p.parseUShort();
        head2.created = p.parseLongDateTime();
        head2.modified = p.parseLongDateTime();
        head2.xMin = p.parseShort();
        head2.yMin = p.parseShort();
        head2.xMax = p.parseShort();
        head2.yMax = p.parseShort();
        head2.macStyle = p.parseUShort();
        head2.lowestRecPPEM = p.parseUShort();
        head2.fontDirectionHint = p.parseShort();
        head2.indexToLocFormat = p.parseShort();
        head2.glyphDataFormat = p.parseShort();
        return head2;
      }
      function makeHeadTable(options) {
        var timestamp = Math.round(new Date().getTime() / 1e3) + 2082844800;
        var createdTimestamp = timestamp;
        if (options.createdTimestamp) {
          createdTimestamp = options.createdTimestamp + 2082844800;
        }
        return new table.Table("head", [
          {name: "version", type: "FIXED", value: 65536},
          {name: "fontRevision", type: "FIXED", value: 65536},
          {name: "checkSumAdjustment", type: "ULONG", value: 0},
          {name: "magicNumber", type: "ULONG", value: 1594834165},
          {name: "flags", type: "USHORT", value: 0},
          {name: "unitsPerEm", type: "USHORT", value: 1e3},
          {name: "created", type: "LONGDATETIME", value: createdTimestamp},
          {name: "modified", type: "LONGDATETIME", value: timestamp},
          {name: "xMin", type: "SHORT", value: 0},
          {name: "yMin", type: "SHORT", value: 0},
          {name: "xMax", type: "SHORT", value: 0},
          {name: "yMax", type: "SHORT", value: 0},
          {name: "macStyle", type: "USHORT", value: 0},
          {name: "lowestRecPPEM", type: "USHORT", value: 0},
          {name: "fontDirectionHint", type: "SHORT", value: 2},
          {name: "indexToLocFormat", type: "SHORT", value: 0},
          {name: "glyphDataFormat", type: "SHORT", value: 0}
        ], options);
      }
      var head = {parse: parseHeadTable, make: makeHeadTable};
      function parseHheaTable(data, start) {
        var hhea2 = {};
        var p = new parse.Parser(data, start);
        hhea2.version = p.parseVersion();
        hhea2.ascender = p.parseShort();
        hhea2.descender = p.parseShort();
        hhea2.lineGap = p.parseShort();
        hhea2.advanceWidthMax = p.parseUShort();
        hhea2.minLeftSideBearing = p.parseShort();
        hhea2.minRightSideBearing = p.parseShort();
        hhea2.xMaxExtent = p.parseShort();
        hhea2.caretSlopeRise = p.parseShort();
        hhea2.caretSlopeRun = p.parseShort();
        hhea2.caretOffset = p.parseShort();
        p.relativeOffset += 8;
        hhea2.metricDataFormat = p.parseShort();
        hhea2.numberOfHMetrics = p.parseUShort();
        return hhea2;
      }
      function makeHheaTable(options) {
        return new table.Table("hhea", [
          {name: "version", type: "FIXED", value: 65536},
          {name: "ascender", type: "FWORD", value: 0},
          {name: "descender", type: "FWORD", value: 0},
          {name: "lineGap", type: "FWORD", value: 0},
          {name: "advanceWidthMax", type: "UFWORD", value: 0},
          {name: "minLeftSideBearing", type: "FWORD", value: 0},
          {name: "minRightSideBearing", type: "FWORD", value: 0},
          {name: "xMaxExtent", type: "FWORD", value: 0},
          {name: "caretSlopeRise", type: "SHORT", value: 1},
          {name: "caretSlopeRun", type: "SHORT", value: 0},
          {name: "caretOffset", type: "SHORT", value: 0},
          {name: "reserved1", type: "SHORT", value: 0},
          {name: "reserved2", type: "SHORT", value: 0},
          {name: "reserved3", type: "SHORT", value: 0},
          {name: "reserved4", type: "SHORT", value: 0},
          {name: "metricDataFormat", type: "SHORT", value: 0},
          {name: "numberOfHMetrics", type: "USHORT", value: 0}
        ], options);
      }
      var hhea = {parse: parseHheaTable, make: makeHheaTable};
      function parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs) {
        var advanceWidth;
        var leftSideBearing;
        var p = new parse.Parser(data, start);
        for (var i = 0; i < numGlyphs; i += 1) {
          if (i < numMetrics) {
            advanceWidth = p.parseUShort();
            leftSideBearing = p.parseShort();
          }
          var glyph = glyphs.get(i);
          glyph.advanceWidth = advanceWidth;
          glyph.leftSideBearing = leftSideBearing;
        }
      }
      function parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs) {
        font._hmtxTableData = {};
        var advanceWidth;
        var leftSideBearing;
        var p = new parse.Parser(data, start);
        for (var i = 0; i < numGlyphs; i += 1) {
          if (i < numMetrics) {
            advanceWidth = p.parseUShort();
            leftSideBearing = p.parseShort();
          }
          font._hmtxTableData[i] = {
            advanceWidth,
            leftSideBearing
          };
        }
      }
      function parseHmtxTable(font, data, start, numMetrics, numGlyphs, glyphs, opt) {
        if (opt.lowMemory) {
          parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs);
        } else {
          parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs);
        }
      }
      function makeHmtxTable(glyphs) {
        var t = new table.Table("hmtx", []);
        for (var i = 0; i < glyphs.length; i += 1) {
          var glyph = glyphs.get(i);
          var advanceWidth = glyph.advanceWidth || 0;
          var leftSideBearing = glyph.leftSideBearing || 0;
          t.fields.push({name: "advanceWidth_" + i, type: "USHORT", value: advanceWidth});
          t.fields.push({name: "leftSideBearing_" + i, type: "SHORT", value: leftSideBearing});
        }
        return t;
      }
      var hmtx = {parse: parseHmtxTable, make: makeHmtxTable};
      function makeLtagTable(tags) {
        var result = new table.Table("ltag", [
          {name: "version", type: "ULONG", value: 1},
          {name: "flags", type: "ULONG", value: 0},
          {name: "numTags", type: "ULONG", value: tags.length}
        ]);
        var stringPool = "";
        var stringPoolOffset = 12 + tags.length * 4;
        for (var i = 0; i < tags.length; ++i) {
          var pos = stringPool.indexOf(tags[i]);
          if (pos < 0) {
            pos = stringPool.length;
            stringPool += tags[i];
          }
          result.fields.push({name: "offset " + i, type: "USHORT", value: stringPoolOffset + pos});
          result.fields.push({name: "length " + i, type: "USHORT", value: tags[i].length});
        }
        result.fields.push({name: "stringPool", type: "CHARARRAY", value: stringPool});
        return result;
      }
      function parseLtagTable(data, start) {
        var p = new parse.Parser(data, start);
        var tableVersion = p.parseULong();
        check.argument(tableVersion === 1, "Unsupported ltag table version.");
        p.skip("uLong", 1);
        var numTags = p.parseULong();
        var tags = [];
        for (var i = 0; i < numTags; i++) {
          var tag = "";
          var offset = start + p.parseUShort();
          var length = p.parseUShort();
          for (var j = offset; j < offset + length; ++j) {
            tag += String.fromCharCode(data.getInt8(j));
          }
          tags.push(tag);
        }
        return tags;
      }
      var ltag = {make: makeLtagTable, parse: parseLtagTable};
      function parseMaxpTable(data, start) {
        var maxp2 = {};
        var p = new parse.Parser(data, start);
        maxp2.version = p.parseVersion();
        maxp2.numGlyphs = p.parseUShort();
        if (maxp2.version === 1) {
          maxp2.maxPoints = p.parseUShort();
          maxp2.maxContours = p.parseUShort();
          maxp2.maxCompositePoints = p.parseUShort();
          maxp2.maxCompositeContours = p.parseUShort();
          maxp2.maxZones = p.parseUShort();
          maxp2.maxTwilightPoints = p.parseUShort();
          maxp2.maxStorage = p.parseUShort();
          maxp2.maxFunctionDefs = p.parseUShort();
          maxp2.maxInstructionDefs = p.parseUShort();
          maxp2.maxStackElements = p.parseUShort();
          maxp2.maxSizeOfInstructions = p.parseUShort();
          maxp2.maxComponentElements = p.parseUShort();
          maxp2.maxComponentDepth = p.parseUShort();
        }
        return maxp2;
      }
      function makeMaxpTable(numGlyphs) {
        return new table.Table("maxp", [
          {name: "version", type: "FIXED", value: 20480},
          {name: "numGlyphs", type: "USHORT", value: numGlyphs}
        ]);
      }
      var maxp = {parse: parseMaxpTable, make: makeMaxpTable};
      var nameTableNames = [
        "copyright",
        "fontFamily",
        "fontSubfamily",
        "uniqueID",
        "fullName",
        "version",
        "postScriptName",
        "trademark",
        "manufacturer",
        "designer",
        "description",
        "manufacturerURL",
        "designerURL",
        "license",
        "licenseURL",
        "reserved",
        "preferredFamily",
        "preferredSubfamily",
        "compatibleFullName",
        "sampleText",
        "postScriptFindFontName",
        "wwsFamily",
        "wwsSubfamily"
      ];
      var macLanguages = {
        0: "en",
        1: "fr",
        2: "de",
        3: "it",
        4: "nl",
        5: "sv",
        6: "es",
        7: "da",
        8: "pt",
        9: "no",
        10: "he",
        11: "ja",
        12: "ar",
        13: "fi",
        14: "el",
        15: "is",
        16: "mt",
        17: "tr",
        18: "hr",
        19: "zh-Hant",
        20: "ur",
        21: "hi",
        22: "th",
        23: "ko",
        24: "lt",
        25: "pl",
        26: "hu",
        27: "es",
        28: "lv",
        29: "se",
        30: "fo",
        31: "fa",
        32: "ru",
        33: "zh",
        34: "nl-BE",
        35: "ga",
        36: "sq",
        37: "ro",
        38: "cz",
        39: "sk",
        40: "si",
        41: "yi",
        42: "sr",
        43: "mk",
        44: "bg",
        45: "uk",
        46: "be",
        47: "uz",
        48: "kk",
        49: "az-Cyrl",
        50: "az-Arab",
        51: "hy",
        52: "ka",
        53: "mo",
        54: "ky",
        55: "tg",
        56: "tk",
        57: "mn-CN",
        58: "mn",
        59: "ps",
        60: "ks",
        61: "ku",
        62: "sd",
        63: "bo",
        64: "ne",
        65: "sa",
        66: "mr",
        67: "bn",
        68: "as",
        69: "gu",
        70: "pa",
        71: "or",
        72: "ml",
        73: "kn",
        74: "ta",
        75: "te",
        76: "si",
        77: "my",
        78: "km",
        79: "lo",
        80: "vi",
        81: "id",
        82: "tl",
        83: "ms",
        84: "ms-Arab",
        85: "am",
        86: "ti",
        87: "om",
        88: "so",
        89: "sw",
        90: "rw",
        91: "rn",
        92: "ny",
        93: "mg",
        94: "eo",
        128: "cy",
        129: "eu",
        130: "ca",
        131: "la",
        132: "qu",
        133: "gn",
        134: "ay",
        135: "tt",
        136: "ug",
        137: "dz",
        138: "jv",
        139: "su",
        140: "gl",
        141: "af",
        142: "br",
        143: "iu",
        144: "gd",
        145: "gv",
        146: "ga",
        147: "to",
        148: "el-polyton",
        149: "kl",
        150: "az",
        151: "nn"
      };
      var macLanguageToScript = {
        0: 0,
        1: 0,
        2: 0,
        3: 0,
        4: 0,
        5: 0,
        6: 0,
        7: 0,
        8: 0,
        9: 0,
        10: 5,
        11: 1,
        12: 4,
        13: 0,
        14: 6,
        15: 0,
        16: 0,
        17: 0,
        18: 0,
        19: 2,
        20: 4,
        21: 9,
        22: 21,
        23: 3,
        24: 29,
        25: 29,
        26: 29,
        27: 29,
        28: 29,
        29: 0,
        30: 0,
        31: 4,
        32: 7,
        33: 25,
        34: 0,
        35: 0,
        36: 0,
        37: 0,
        38: 29,
        39: 29,
        40: 0,
        41: 5,
        42: 7,
        43: 7,
        44: 7,
        45: 7,
        46: 7,
        47: 7,
        48: 7,
        49: 7,
        50: 4,
        51: 24,
        52: 23,
        53: 7,
        54: 7,
        55: 7,
        56: 7,
        57: 27,
        58: 7,
        59: 4,
        60: 4,
        61: 4,
        62: 4,
        63: 26,
        64: 9,
        65: 9,
        66: 9,
        67: 13,
        68: 13,
        69: 11,
        70: 10,
        71: 12,
        72: 17,
        73: 16,
        74: 14,
        75: 15,
        76: 18,
        77: 19,
        78: 20,
        79: 22,
        80: 30,
        81: 0,
        82: 0,
        83: 0,
        84: 4,
        85: 28,
        86: 28,
        87: 28,
        88: 0,
        89: 0,
        90: 0,
        91: 0,
        92: 0,
        93: 0,
        94: 0,
        128: 0,
        129: 0,
        130: 0,
        131: 0,
        132: 0,
        133: 0,
        134: 0,
        135: 7,
        136: 4,
        137: 26,
        138: 0,
        139: 0,
        140: 0,
        141: 0,
        142: 0,
        143: 28,
        144: 0,
        145: 0,
        146: 0,
        147: 0,
        148: 6,
        149: 0,
        150: 0,
        151: 0
      };
      var windowsLanguages = {
        1078: "af",
        1052: "sq",
        1156: "gsw",
        1118: "am",
        5121: "ar-DZ",
        15361: "ar-BH",
        3073: "ar",
        2049: "ar-IQ",
        11265: "ar-JO",
        13313: "ar-KW",
        12289: "ar-LB",
        4097: "ar-LY",
        6145: "ary",
        8193: "ar-OM",
        16385: "ar-QA",
        1025: "ar-SA",
        10241: "ar-SY",
        7169: "aeb",
        14337: "ar-AE",
        9217: "ar-YE",
        1067: "hy",
        1101: "as",
        2092: "az-Cyrl",
        1068: "az",
        1133: "ba",
        1069: "eu",
        1059: "be",
        2117: "bn",
        1093: "bn-IN",
        8218: "bs-Cyrl",
        5146: "bs",
        1150: "br",
        1026: "bg",
        1027: "ca",
        3076: "zh-HK",
        5124: "zh-MO",
        2052: "zh",
        4100: "zh-SG",
        1028: "zh-TW",
        1155: "co",
        1050: "hr",
        4122: "hr-BA",
        1029: "cs",
        1030: "da",
        1164: "prs",
        1125: "dv",
        2067: "nl-BE",
        1043: "nl",
        3081: "en-AU",
        10249: "en-BZ",
        4105: "en-CA",
        9225: "en-029",
        16393: "en-IN",
        6153: "en-IE",
        8201: "en-JM",
        17417: "en-MY",
        5129: "en-NZ",
        13321: "en-PH",
        18441: "en-SG",
        7177: "en-ZA",
        11273: "en-TT",
        2057: "en-GB",
        1033: "en",
        12297: "en-ZW",
        1061: "et",
        1080: "fo",
        1124: "fil",
        1035: "fi",
        2060: "fr-BE",
        3084: "fr-CA",
        1036: "fr",
        5132: "fr-LU",
        6156: "fr-MC",
        4108: "fr-CH",
        1122: "fy",
        1110: "gl",
        1079: "ka",
        3079: "de-AT",
        1031: "de",
        5127: "de-LI",
        4103: "de-LU",
        2055: "de-CH",
        1032: "el",
        1135: "kl",
        1095: "gu",
        1128: "ha",
        1037: "he",
        1081: "hi",
        1038: "hu",
        1039: "is",
        1136: "ig",
        1057: "id",
        1117: "iu",
        2141: "iu-Latn",
        2108: "ga",
        1076: "xh",
        1077: "zu",
        1040: "it",
        2064: "it-CH",
        1041: "ja",
        1099: "kn",
        1087: "kk",
        1107: "km",
        1158: "quc",
        1159: "rw",
        1089: "sw",
        1111: "kok",
        1042: "ko",
        1088: "ky",
        1108: "lo",
        1062: "lv",
        1063: "lt",
        2094: "dsb",
        1134: "lb",
        1071: "mk",
        2110: "ms-BN",
        1086: "ms",
        1100: "ml",
        1082: "mt",
        1153: "mi",
        1146: "arn",
        1102: "mr",
        1148: "moh",
        1104: "mn",
        2128: "mn-CN",
        1121: "ne",
        1044: "nb",
        2068: "nn",
        1154: "oc",
        1096: "or",
        1123: "ps",
        1045: "pl",
        1046: "pt",
        2070: "pt-PT",
        1094: "pa",
        1131: "qu-BO",
        2155: "qu-EC",
        3179: "qu",
        1048: "ro",
        1047: "rm",
        1049: "ru",
        9275: "smn",
        4155: "smj-NO",
        5179: "smj",
        3131: "se-FI",
        1083: "se",
        2107: "se-SE",
        8251: "sms",
        6203: "sma-NO",
        7227: "sms",
        1103: "sa",
        7194: "sr-Cyrl-BA",
        3098: "sr",
        6170: "sr-Latn-BA",
        2074: "sr-Latn",
        1132: "nso",
        1074: "tn",
        1115: "si",
        1051: "sk",
        1060: "sl",
        11274: "es-AR",
        16394: "es-BO",
        13322: "es-CL",
        9226: "es-CO",
        5130: "es-CR",
        7178: "es-DO",
        12298: "es-EC",
        17418: "es-SV",
        4106: "es-GT",
        18442: "es-HN",
        2058: "es-MX",
        19466: "es-NI",
        6154: "es-PA",
        15370: "es-PY",
        10250: "es-PE",
        20490: "es-PR",
        3082: "es",
        1034: "es",
        21514: "es-US",
        14346: "es-UY",
        8202: "es-VE",
        2077: "sv-FI",
        1053: "sv",
        1114: "syr",
        1064: "tg",
        2143: "tzm",
        1097: "ta",
        1092: "tt",
        1098: "te",
        1054: "th",
        1105: "bo",
        1055: "tr",
        1090: "tk",
        1152: "ug",
        1058: "uk",
        1070: "hsb",
        1056: "ur",
        2115: "uz-Cyrl",
        1091: "uz",
        1066: "vi",
        1106: "cy",
        1160: "wo",
        1157: "sah",
        1144: "ii",
        1130: "yo"
      };
      function getLanguageCode(platformID, languageID, ltag2) {
        switch (platformID) {
          case 0:
            if (languageID === 65535) {
              return "und";
            } else if (ltag2) {
              return ltag2[languageID];
            }
            break;
          case 1:
            return macLanguages[languageID];
          case 3:
            return windowsLanguages[languageID];
        }
        return void 0;
      }
      var utf16 = "utf-16";
      var macScriptEncodings = {
        0: "macintosh",
        1: "x-mac-japanese",
        2: "x-mac-chinesetrad",
        3: "x-mac-korean",
        6: "x-mac-greek",
        7: "x-mac-cyrillic",
        9: "x-mac-devanagai",
        10: "x-mac-gurmukhi",
        11: "x-mac-gujarati",
        12: "x-mac-oriya",
        13: "x-mac-bengali",
        14: "x-mac-tamil",
        15: "x-mac-telugu",
        16: "x-mac-kannada",
        17: "x-mac-malayalam",
        18: "x-mac-sinhalese",
        19: "x-mac-burmese",
        20: "x-mac-khmer",
        21: "x-mac-thai",
        22: "x-mac-lao",
        23: "x-mac-georgian",
        24: "x-mac-armenian",
        25: "x-mac-chinesesimp",
        26: "x-mac-tibetan",
        27: "x-mac-mongolian",
        28: "x-mac-ethiopic",
        29: "x-mac-ce",
        30: "x-mac-vietnamese",
        31: "x-mac-extarabic"
      };
      var macLanguageEncodings = {
        15: "x-mac-icelandic",
        17: "x-mac-turkish",
        18: "x-mac-croatian",
        24: "x-mac-ce",
        25: "x-mac-ce",
        26: "x-mac-ce",
        27: "x-mac-ce",
        28: "x-mac-ce",
        30: "x-mac-icelandic",
        37: "x-mac-romanian",
        38: "x-mac-ce",
        39: "x-mac-ce",
        40: "x-mac-ce",
        143: "x-mac-inuit",
        146: "x-mac-gaelic"
      };
      function getEncoding(platformID, encodingID, languageID) {
        switch (platformID) {
          case 0:
            return utf16;
          case 1:
            return macLanguageEncodings[languageID] || macScriptEncodings[encodingID];
          case 3:
            if (encodingID === 1 || encodingID === 10) {
              return utf16;
            }
            break;
        }
        return void 0;
      }
      function parseNameTable(data, start, ltag2) {
        var name = {};
        var p = new parse.Parser(data, start);
        var format = p.parseUShort();
        var count = p.parseUShort();
        var stringOffset = p.offset + p.parseUShort();
        for (var i = 0; i < count; i++) {
          var platformID = p.parseUShort();
          var encodingID = p.parseUShort();
          var languageID = p.parseUShort();
          var nameID = p.parseUShort();
          var property = nameTableNames[nameID] || nameID;
          var byteLength = p.parseUShort();
          var offset = p.parseUShort();
          var language = getLanguageCode(platformID, languageID, ltag2);
          var encoding = getEncoding(platformID, encodingID, languageID);
          if (encoding !== void 0 && language !== void 0) {
            var text = void 0;
            if (encoding === utf16) {
              text = decode.UTF16(data, stringOffset + offset, byteLength);
            } else {
              text = decode.MACSTRING(data, stringOffset + offset, byteLength, encoding);
            }
            if (text) {
              var translations = name[property];
              if (translations === void 0) {
                translations = name[property] = {};
              }
              translations[language] = text;
            }
          }
        }
        var langTagCount = 0;
        if (format === 1) {
          langTagCount = p.parseUShort();
        }
        return name;
      }
      function reverseDict(dict) {
        var result = {};
        for (var key in dict) {
          result[dict[key]] = parseInt(key);
        }
        return result;
      }
      function makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {
        return new table.Record("NameRecord", [
          {name: "platformID", type: "USHORT", value: platformID},
          {name: "encodingID", type: "USHORT", value: encodingID},
          {name: "languageID", type: "USHORT", value: languageID},
          {name: "nameID", type: "USHORT", value: nameID},
          {name: "length", type: "USHORT", value: length},
          {name: "offset", type: "USHORT", value: offset}
        ]);
      }
      function findSubArray(needle, haystack) {
        var needleLength = needle.length;
        var limit = haystack.length - needleLength + 1;
        loop:
          for (var pos = 0; pos < limit; pos++) {
            for (; pos < limit; pos++) {
              for (var k = 0; k < needleLength; k++) {
                if (haystack[pos + k] !== needle[k]) {
                  continue loop;
                }
              }
              return pos;
            }
          }
        return -1;
      }
      function addStringToPool(s, pool) {
        var offset = findSubArray(s, pool);
        if (offset < 0) {
          offset = pool.length;
          var i = 0;
          var len = s.length;
          for (; i < len; ++i) {
            pool.push(s[i]);
          }
        }
        return offset;
      }
      function makeNameTable(names, ltag2) {
        var nameID;
        var nameIDs = [];
        var namesWithNumericKeys = {};
        var nameTableIds = reverseDict(nameTableNames);
        for (var key in names) {
          var id = nameTableIds[key];
          if (id === void 0) {
            id = key;
          }
          nameID = parseInt(id);
          if (isNaN(nameID)) {
            throw new Error('Name table entry "' + key + '" does not exist, see nameTableNames for complete list.');
          }
          namesWithNumericKeys[nameID] = names[key];
          nameIDs.push(nameID);
        }
        var macLanguageIds = reverseDict(macLanguages);
        var windowsLanguageIds = reverseDict(windowsLanguages);
        var nameRecords = [];
        var stringPool = [];
        for (var i = 0; i < nameIDs.length; i++) {
          nameID = nameIDs[i];
          var translations = namesWithNumericKeys[nameID];
          for (var lang in translations) {
            var text = translations[lang];
            var macPlatform = 1;
            var macLanguage = macLanguageIds[lang];
            var macScript = macLanguageToScript[macLanguage];
            var macEncoding = getEncoding(macPlatform, macScript, macLanguage);
            var macName = encode.MACSTRING(text, macEncoding);
            if (macName === void 0) {
              macPlatform = 0;
              macLanguage = ltag2.indexOf(lang);
              if (macLanguage < 0) {
                macLanguage = ltag2.length;
                ltag2.push(lang);
              }
              macScript = 4;
              macName = encode.UTF16(text);
            }
            var macNameOffset = addStringToPool(macName, stringPool);
            nameRecords.push(makeNameRecord(macPlatform, macScript, macLanguage, nameID, macName.length, macNameOffset));
            var winLanguage = windowsLanguageIds[lang];
            if (winLanguage !== void 0) {
              var winName = encode.UTF16(text);
              var winNameOffset = addStringToPool(winName, stringPool);
              nameRecords.push(makeNameRecord(3, 1, winLanguage, nameID, winName.length, winNameOffset));
            }
          }
        }
        nameRecords.sort(function(a, b) {
          return a.platformID - b.platformID || a.encodingID - b.encodingID || a.languageID - b.languageID || a.nameID - b.nameID;
        });
        var t = new table.Table("name", [
          {name: "format", type: "USHORT", value: 0},
          {name: "count", type: "USHORT", value: nameRecords.length},
          {name: "stringOffset", type: "USHORT", value: 6 + nameRecords.length * 12}
        ]);
        for (var r = 0; r < nameRecords.length; r++) {
          t.fields.push({name: "record_" + r, type: "RECORD", value: nameRecords[r]});
        }
        t.fields.push({name: "strings", type: "LITERAL", value: stringPool});
        return t;
      }
      var _name = {parse: parseNameTable, make: makeNameTable};
      var unicodeRanges = [
        {begin: 0, end: 127},
        {begin: 128, end: 255},
        {begin: 256, end: 383},
        {begin: 384, end: 591},
        {begin: 592, end: 687},
        {begin: 688, end: 767},
        {begin: 768, end: 879},
        {begin: 880, end: 1023},
        {begin: 11392, end: 11519},
        {begin: 1024, end: 1279},
        {begin: 1328, end: 1423},
        {begin: 1424, end: 1535},
        {begin: 42240, end: 42559},
        {begin: 1536, end: 1791},
        {begin: 1984, end: 2047},
        {begin: 2304, end: 2431},
        {begin: 2432, end: 2559},
        {begin: 2560, end: 2687},
        {begin: 2688, end: 2815},
        {begin: 2816, end: 2943},
        {begin: 2944, end: 3071},
        {begin: 3072, end: 3199},
        {begin: 3200, end: 3327},
        {begin: 3328, end: 3455},
        {begin: 3584, end: 3711},
        {begin: 3712, end: 3839},
        {begin: 4256, end: 4351},
        {begin: 6912, end: 7039},
        {begin: 4352, end: 4607},
        {begin: 7680, end: 7935},
        {begin: 7936, end: 8191},
        {begin: 8192, end: 8303},
        {begin: 8304, end: 8351},
        {begin: 8352, end: 8399},
        {begin: 8400, end: 8447},
        {begin: 8448, end: 8527},
        {begin: 8528, end: 8591},
        {begin: 8592, end: 8703},
        {begin: 8704, end: 8959},
        {begin: 8960, end: 9215},
        {begin: 9216, end: 9279},
        {begin: 9280, end: 9311},
        {begin: 9312, end: 9471},
        {begin: 9472, end: 9599},
        {begin: 9600, end: 9631},
        {begin: 9632, end: 9727},
        {begin: 9728, end: 9983},
        {begin: 9984, end: 10175},
        {begin: 12288, end: 12351},
        {begin: 12352, end: 12447},
        {begin: 12448, end: 12543},
        {begin: 12544, end: 12591},
        {begin: 12592, end: 12687},
        {begin: 43072, end: 43135},
        {begin: 12800, end: 13055},
        {begin: 13056, end: 13311},
        {begin: 44032, end: 55215},
        {begin: 55296, end: 57343},
        {begin: 67840, end: 67871},
        {begin: 19968, end: 40959},
        {begin: 57344, end: 63743},
        {begin: 12736, end: 12783},
        {begin: 64256, end: 64335},
        {begin: 64336, end: 65023},
        {begin: 65056, end: 65071},
        {begin: 65040, end: 65055},
        {begin: 65104, end: 65135},
        {begin: 65136, end: 65279},
        {begin: 65280, end: 65519},
        {begin: 65520, end: 65535},
        {begin: 3840, end: 4095},
        {begin: 1792, end: 1871},
        {begin: 1920, end: 1983},
        {begin: 3456, end: 3583},
        {begin: 4096, end: 4255},
        {begin: 4608, end: 4991},
        {begin: 5024, end: 5119},
        {begin: 5120, end: 5759},
        {begin: 5760, end: 5791},
        {begin: 5792, end: 5887},
        {begin: 6016, end: 6143},
        {begin: 6144, end: 6319},
        {begin: 10240, end: 10495},
        {begin: 40960, end: 42127},
        {begin: 5888, end: 5919},
        {begin: 66304, end: 66351},
        {begin: 66352, end: 66383},
        {begin: 66560, end: 66639},
        {begin: 118784, end: 119039},
        {begin: 119808, end: 120831},
        {begin: 1044480, end: 1048573},
        {begin: 65024, end: 65039},
        {begin: 917504, end: 917631},
        {begin: 6400, end: 6479},
        {begin: 6480, end: 6527},
        {begin: 6528, end: 6623},
        {begin: 6656, end: 6687},
        {begin: 11264, end: 11359},
        {begin: 11568, end: 11647},
        {begin: 19904, end: 19967},
        {begin: 43008, end: 43055},
        {begin: 65536, end: 65663},
        {begin: 65856, end: 65935},
        {begin: 66432, end: 66463},
        {begin: 66464, end: 66527},
        {begin: 66640, end: 66687},
        {begin: 66688, end: 66735},
        {begin: 67584, end: 67647},
        {begin: 68096, end: 68191},
        {begin: 119552, end: 119647},
        {begin: 73728, end: 74751},
        {begin: 119648, end: 119679},
        {begin: 7040, end: 7103},
        {begin: 7168, end: 7247},
        {begin: 7248, end: 7295},
        {begin: 43136, end: 43231},
        {begin: 43264, end: 43311},
        {begin: 43312, end: 43359},
        {begin: 43520, end: 43615},
        {begin: 65936, end: 65999},
        {begin: 66e3, end: 66047},
        {begin: 66208, end: 66271},
        {begin: 127024, end: 127135}
      ];
      function getUnicodeRange(unicode) {
        for (var i = 0; i < unicodeRanges.length; i += 1) {
          var range = unicodeRanges[i];
          if (unicode >= range.begin && unicode < range.end) {
            return i;
          }
        }
        return -1;
      }
      function parseOS2Table(data, start) {
        var os22 = {};
        var p = new parse.Parser(data, start);
        os22.version = p.parseUShort();
        os22.xAvgCharWidth = p.parseShort();
        os22.usWeightClass = p.parseUShort();
        os22.usWidthClass = p.parseUShort();
        os22.fsType = p.parseUShort();
        os22.ySubscriptXSize = p.parseShort();
        os22.ySubscriptYSize = p.parseShort();
        os22.ySubscriptXOffset = p.parseShort();
        os22.ySubscriptYOffset = p.parseShort();
        os22.ySuperscriptXSize = p.parseShort();
        os22.ySuperscriptYSize = p.parseShort();
        os22.ySuperscriptXOffset = p.parseShort();
        os22.ySuperscriptYOffset = p.parseShort();
        os22.yStrikeoutSize = p.parseShort();
        os22.yStrikeoutPosition = p.parseShort();
        os22.sFamilyClass = p.parseShort();
        os22.panose = [];
        for (var i = 0; i < 10; i++) {
          os22.panose[i] = p.parseByte();
        }
        os22.ulUnicodeRange1 = p.parseULong();
        os22.ulUnicodeRange2 = p.parseULong();
        os22.ulUnicodeRange3 = p.parseULong();
        os22.ulUnicodeRange4 = p.parseULong();
        os22.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());
        os22.fsSelection = p.parseUShort();
        os22.usFirstCharIndex = p.parseUShort();
        os22.usLastCharIndex = p.parseUShort();
        os22.sTypoAscender = p.parseShort();
        os22.sTypoDescender = p.parseShort();
        os22.sTypoLineGap = p.parseShort();
        os22.usWinAscent = p.parseUShort();
        os22.usWinDescent = p.parseUShort();
        if (os22.version >= 1) {
          os22.ulCodePageRange1 = p.parseULong();
          os22.ulCodePageRange2 = p.parseULong();
        }
        if (os22.version >= 2) {
          os22.sxHeight = p.parseShort();
          os22.sCapHeight = p.parseShort();
          os22.usDefaultChar = p.parseUShort();
          os22.usBreakChar = p.parseUShort();
          os22.usMaxContent = p.parseUShort();
        }
        return os22;
      }
      function makeOS2Table(options) {
        return new table.Table("OS/2", [
          {name: "version", type: "USHORT", value: 3},
          {name: "xAvgCharWidth", type: "SHORT", value: 0},
          {name: "usWeightClass", type: "USHORT", value: 0},
          {name: "usWidthClass", type: "USHORT", value: 0},
          {name: "fsType", type: "USHORT", value: 0},
          {name: "ySubscriptXSize", type: "SHORT", value: 650},
          {name: "ySubscriptYSize", type: "SHORT", value: 699},
          {name: "ySubscriptXOffset", type: "SHORT", value: 0},
          {name: "ySubscriptYOffset", type: "SHORT", value: 140},
          {name: "ySuperscriptXSize", type: "SHORT", value: 650},
          {name: "ySuperscriptYSize", type: "SHORT", value: 699},
          {name: "ySuperscriptXOffset", type: "SHORT", value: 0},
          {name: "ySuperscriptYOffset", type: "SHORT", value: 479},
          {name: "yStrikeoutSize", type: "SHORT", value: 49},
          {name: "yStrikeoutPosition", type: "SHORT", value: 258},
          {name: "sFamilyClass", type: "SHORT", value: 0},
          {name: "bFamilyType", type: "BYTE", value: 0},
          {name: "bSerifStyle", type: "BYTE", value: 0},
          {name: "bWeight", type: "BYTE", value: 0},
          {name: "bProportion", type: "BYTE", value: 0},
          {name: "bContrast", type: "BYTE", value: 0},
          {name: "bStrokeVariation", type: "BYTE", value: 0},
          {name: "bArmStyle", type: "BYTE", value: 0},
          {name: "bLetterform", type: "BYTE", value: 0},
          {name: "bMidline", type: "BYTE", value: 0},
          {name: "bXHeight", type: "BYTE", value: 0},
          {name: "ulUnicodeRange1", type: "ULONG", value: 0},
          {name: "ulUnicodeRange2", type: "ULONG", value: 0},
          {name: "ulUnicodeRange3", type: "ULONG", value: 0},
          {name: "ulUnicodeRange4", type: "ULONG", value: 0},
          {name: "achVendID", type: "CHARARRAY", value: "XXXX"},
          {name: "fsSelection", type: "USHORT", value: 0},
          {name: "usFirstCharIndex", type: "USHORT", value: 0},
          {name: "usLastCharIndex", type: "USHORT", value: 0},
          {name: "sTypoAscender", type: "SHORT", value: 0},
          {name: "sTypoDescender", type: "SHORT", value: 0},
          {name: "sTypoLineGap", type: "SHORT", value: 0},
          {name: "usWinAscent", type: "USHORT", value: 0},
          {name: "usWinDescent", type: "USHORT", value: 0},
          {name: "ulCodePageRange1", type: "ULONG", value: 0},
          {name: "ulCodePageRange2", type: "ULONG", value: 0},
          {name: "sxHeight", type: "SHORT", value: 0},
          {name: "sCapHeight", type: "SHORT", value: 0},
          {name: "usDefaultChar", type: "USHORT", value: 0},
          {name: "usBreakChar", type: "USHORT", value: 0},
          {name: "usMaxContext", type: "USHORT", value: 0}
        ], options);
      }
      var os2 = {parse: parseOS2Table, make: makeOS2Table, unicodeRanges, getUnicodeRange};
      function parsePostTable(data, start) {
        var post2 = {};
        var p = new parse.Parser(data, start);
        post2.version = p.parseVersion();
        post2.italicAngle = p.parseFixed();
        post2.underlinePosition = p.parseShort();
        post2.underlineThickness = p.parseShort();
        post2.isFixedPitch = p.parseULong();
        post2.minMemType42 = p.parseULong();
        post2.maxMemType42 = p.parseULong();
        post2.minMemType1 = p.parseULong();
        post2.maxMemType1 = p.parseULong();
        switch (post2.version) {
          case 1:
            post2.names = standardNames.slice();
            break;
          case 2:
            post2.numberOfGlyphs = p.parseUShort();
            post2.glyphNameIndex = new Array(post2.numberOfGlyphs);
            for (var i = 0; i < post2.numberOfGlyphs; i++) {
              post2.glyphNameIndex[i] = p.parseUShort();
            }
            post2.names = [];
            for (var i$1 = 0; i$1 < post2.numberOfGlyphs; i$1++) {
              if (post2.glyphNameIndex[i$1] >= standardNames.length) {
                var nameLength = p.parseChar();
                post2.names.push(p.parseString(nameLength));
              }
            }
            break;
          case 2.5:
            post2.numberOfGlyphs = p.parseUShort();
            post2.offset = new Array(post2.numberOfGlyphs);
            for (var i$2 = 0; i$2 < post2.numberOfGlyphs; i$2++) {
              post2.offset[i$2] = p.parseChar();
            }
            break;
        }
        return post2;
      }
      function makePostTable() {
        return new table.Table("post", [
          {name: "version", type: "FIXED", value: 196608},
          {name: "italicAngle", type: "FIXED", value: 0},
          {name: "underlinePosition", type: "FWORD", value: 0},
          {name: "underlineThickness", type: "FWORD", value: 0},
          {name: "isFixedPitch", type: "ULONG", value: 0},
          {name: "minMemType42", type: "ULONG", value: 0},
          {name: "maxMemType42", type: "ULONG", value: 0},
          {name: "minMemType1", type: "ULONG", value: 0},
          {name: "maxMemType1", type: "ULONG", value: 0}
        ]);
      }
      var post = {parse: parsePostTable, make: makePostTable};
      var subtableParsers = new Array(9);
      subtableParsers[1] = function parseLookup1() {
        var start = this.offset + this.relativeOffset;
        var substFormat = this.parseUShort();
        if (substFormat === 1) {
          return {
            substFormat: 1,
            coverage: this.parsePointer(Parser.coverage),
            deltaGlyphId: this.parseUShort()
          };
        } else if (substFormat === 2) {
          return {
            substFormat: 2,
            coverage: this.parsePointer(Parser.coverage),
            substitute: this.parseOffset16List()
          };
        }
        check.assert(false, "0x" + start.toString(16) + ": lookup type 1 format must be 1 or 2.");
      };
      subtableParsers[2] = function parseLookup2() {
        var substFormat = this.parseUShort();
        check.argument(substFormat === 1, "GSUB Multiple Substitution Subtable identifier-format must be 1");
        return {
          substFormat,
          coverage: this.parsePointer(Parser.coverage),
          sequences: this.parseListOfLists()
        };
      };
      subtableParsers[3] = function parseLookup3() {
        var substFormat = this.parseUShort();
        check.argument(substFormat === 1, "GSUB Alternate Substitution Subtable identifier-format must be 1");
        return {
          substFormat,
          coverage: this.parsePointer(Parser.coverage),
          alternateSets: this.parseListOfLists()
        };
      };
      subtableParsers[4] = function parseLookup4() {
        var substFormat = this.parseUShort();
        check.argument(substFormat === 1, "GSUB ligature table identifier-format must be 1");
        return {
          substFormat,
          coverage: this.parsePointer(Parser.coverage),
          ligatureSets: this.parseListOfLists(function() {
            return {
              ligGlyph: this.parseUShort(),
              components: this.parseUShortList(this.parseUShort() - 1)
            };
          })
        };
      };
      var lookupRecordDesc = {
        sequenceIndex: Parser.uShort,
        lookupListIndex: Parser.uShort
      };
      subtableParsers[5] = function parseLookup5() {
        var start = this.offset + this.relativeOffset;
        var substFormat = this.parseUShort();
        if (substFormat === 1) {
          return {
            substFormat,
            coverage: this.parsePointer(Parser.coverage),
            ruleSets: this.parseListOfLists(function() {
              var glyphCount2 = this.parseUShort();
              var substCount2 = this.parseUShort();
              return {
                input: this.parseUShortList(glyphCount2 - 1),
                lookupRecords: this.parseRecordList(substCount2, lookupRecordDesc)
              };
            })
          };
        } else if (substFormat === 2) {
          return {
            substFormat,
            coverage: this.parsePointer(Parser.coverage),
            classDef: this.parsePointer(Parser.classDef),
            classSets: this.parseListOfLists(function() {
              var glyphCount2 = this.parseUShort();
              var substCount2 = this.parseUShort();
              return {
                classes: this.parseUShortList(glyphCount2 - 1),
                lookupRecords: this.parseRecordList(substCount2, lookupRecordDesc)
              };
            })
          };
        } else if (substFormat === 3) {
          var glyphCount = this.parseUShort();
          var substCount = this.parseUShort();
          return {
            substFormat,
            coverages: this.parseList(glyphCount, Parser.pointer(Parser.coverage)),
            lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)
          };
        }
        check.assert(false, "0x" + start.toString(16) + ": lookup type 5 format must be 1, 2 or 3.");
      };
      subtableParsers[6] = function parseLookup6() {
        var start = this.offset + this.relativeOffset;
        var substFormat = this.parseUShort();
        if (substFormat === 1) {
          return {
            substFormat: 1,
            coverage: this.parsePointer(Parser.coverage),
            chainRuleSets: this.parseListOfLists(function() {
              return {
                backtrack: this.parseUShortList(),
                input: this.parseUShortList(this.parseShort() - 1),
                lookahead: this.parseUShortList(),
                lookupRecords: this.parseRecordList(lookupRecordDesc)
              };
            })
          };
        } else if (substFormat === 2) {
          return {
            substFormat: 2,
            coverage: this.parsePointer(Parser.coverage),
            backtrackClassDef: this.parsePointer(Parser.classDef),
            inputClassDef: this.parsePointer(Parser.classDef),
            lookaheadClassDef: this.parsePointer(Parser.classDef),
            chainClassSet: this.parseListOfLists(function() {
              return {
                backtrack: this.parseUShortList(),
                input: this.parseUShortList(this.parseShort() - 1),
                lookahead: this.parseUShortList(),
                lookupRecords: this.parseRecordList(lookupRecordDesc)
              };
            })
          };
        } else if (substFormat === 3) {
          return {
            substFormat: 3,
            backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),
            inputCoverage: this.parseList(Parser.pointer(Parser.coverage)),
            lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),
            lookupRecords: this.parseRecordList(lookupRecordDesc)
          };
        }
        check.assert(false, "0x" + start.toString(16) + ": lookup type 6 format must be 1, 2 or 3.");
      };
      subtableParsers[7] = function parseLookup7() {
        var substFormat = this.parseUShort();
        check.argument(substFormat === 1, "GSUB Extension Substitution subtable identifier-format must be 1");
        var extensionLookupType = this.parseUShort();
        var extensionParser = new Parser(this.data, this.offset + this.parseULong());
        return {
          substFormat: 1,
          lookupType: extensionLookupType,
          extension: subtableParsers[extensionLookupType].call(extensionParser)
        };
      };
      subtableParsers[8] = function parseLookup8() {
        var substFormat = this.parseUShort();
        check.argument(substFormat === 1, "GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1");
        return {
          substFormat,
          coverage: this.parsePointer(Parser.coverage),
          backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),
          lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),
          substitutes: this.parseUShortList()
        };
      };
      function parseGsubTable(data, start) {
        start = start || 0;
        var p = new Parser(data, start);
        var tableVersion = p.parseVersion(1);
        check.argument(tableVersion === 1 || tableVersion === 1.1, "Unsupported GSUB table version.");
        if (tableVersion === 1) {
          return {
            version: tableVersion,
            scripts: p.parseScriptList(),
            features: p.parseFeatureList(),
            lookups: p.parseLookupList(subtableParsers)
          };
        } else {
          return {
            version: tableVersion,
            scripts: p.parseScriptList(),
            features: p.parseFeatureList(),
            lookups: p.parseLookupList(subtableParsers),
            variations: p.parseFeatureVariationsList()
          };
        }
      }
      var subtableMakers = new Array(9);
      subtableMakers[1] = function makeLookup1(subtable) {
        if (subtable.substFormat === 1) {
          return new table.Table("substitutionTable", [
            {name: "substFormat", type: "USHORT", value: 1},
            {name: "coverage", type: "TABLE", value: new table.Coverage(subtable.coverage)},
            {name: "deltaGlyphID", type: "USHORT", value: subtable.deltaGlyphId}
          ]);
        } else {
          return new table.Table("substitutionTable", [
            {name: "substFormat", type: "USHORT", value: 2},
            {name: "coverage", type: "TABLE", value: new table.Coverage(subtable.coverage)}
          ].concat(table.ushortList("substitute", subtable.substitute)));
        }
      };
      subtableMakers[2] = function makeLookup2(subtable) {
        check.assert(subtable.substFormat === 1, "Lookup type 2 substFormat must be 1.");
        return new table.Table("substitutionTable", [
          {name: "substFormat", type: "USHORT", value: 1},
          {name: "coverage", type: "TABLE", value: new table.Coverage(subtable.coverage)}
        ].concat(table.tableList("seqSet", subtable.sequences, function(sequenceSet) {
          return new table.Table("sequenceSetTable", table.ushortList("sequence", sequenceSet));
        })));
      };
      subtableMakers[3] = function makeLookup3(subtable) {
        check.assert(subtable.substFormat === 1, "Lookup type 3 substFormat must be 1.");
        return new table.Table("substitutionTable", [
          {name: "substFormat", type: "USHORT", value: 1},
          {name: "coverage", type: "TABLE", value: new table.Coverage(subtable.coverage)}
        ].concat(table.tableList("altSet", subtable.alternateSets, function(alternateSet) {
          return new table.Table("alternateSetTable", table.ushortList("alternate", alternateSet));
        })));
      };
      subtableMakers[4] = function makeLookup4(subtable) {
        check.assert(subtable.substFormat === 1, "Lookup type 4 substFormat must be 1.");
        return new table.Table("substitutionTable", [
          {name: "substFormat", type: "USHORT", value: 1},
          {name: "coverage", type: "TABLE", value: new table.Coverage(subtable.coverage)}
        ].concat(table.tableList("ligSet", subtable.ligatureSets, function(ligatureSet) {
          return new table.Table("ligatureSetTable", table.tableList("ligature", ligatureSet, function(ligature) {
            return new table.Table("ligatureTable", [{name: "ligGlyph", type: "USHORT", value: ligature.ligGlyph}].concat(table.ushortList("component", ligature.components, ligature.components.length + 1)));
          }));
        })));
      };
      subtableMakers[6] = function makeLookup6(subtable) {
        if (subtable.substFormat === 1) {
          var returnTable = new table.Table("chainContextTable", [
            {name: "substFormat", type: "USHORT", value: subtable.substFormat},
            {name: "coverage", type: "TABLE", value: new table.Coverage(subtable.coverage)}
          ].concat(table.tableList("chainRuleSet", subtable.chainRuleSets, function(chainRuleSet) {
            return new table.Table("chainRuleSetTable", table.tableList("chainRule", chainRuleSet, function(chainRule) {
              var tableData2 = table.ushortList("backtrackGlyph", chainRule.backtrack, chainRule.backtrack.length).concat(table.ushortList("inputGlyph", chainRule.input, chainRule.input.length + 1)).concat(table.ushortList("lookaheadGlyph", chainRule.lookahead, chainRule.lookahead.length)).concat(table.ushortList("substitution", [], chainRule.lookupRecords.length));
              chainRule.lookupRecords.forEach(function(record, i) {
                tableData2 = tableData2.concat({name: "sequenceIndex" + i, type: "USHORT", value: record.sequenceIndex}).concat({name: "lookupListIndex" + i, type: "USHORT", value: record.lookupListIndex});
              });
              return new table.Table("chainRuleTable", tableData2);
            }));
          })));
          return returnTable;
        } else if (subtable.substFormat === 2) {
          check.assert(false, "lookup type 6 format 2 is not yet supported.");
        } else if (subtable.substFormat === 3) {
          var tableData = [
            {name: "substFormat", type: "USHORT", value: subtable.substFormat}
          ];
          tableData.push({name: "backtrackGlyphCount", type: "USHORT", value: subtable.backtrackCoverage.length});
          subtable.backtrackCoverage.forEach(function(coverage, i) {
            tableData.push({name: "backtrackCoverage" + i, type: "TABLE", value: new table.Coverage(coverage)});
          });
          tableData.push({name: "inputGlyphCount", type: "USHORT", value: subtable.inputCoverage.length});
          subtable.inputCoverage.forEach(function(coverage, i) {
            tableData.push({name: "inputCoverage" + i, type: "TABLE", value: new table.Coverage(coverage)});
          });
          tableData.push({name: "lookaheadGlyphCount", type: "USHORT", value: subtable.lookaheadCoverage.length});
          subtable.lookaheadCoverage.forEach(function(coverage, i) {
            tableData.push({name: "lookaheadCoverage" + i, type: "TABLE", value: new table.Coverage(coverage)});
          });
          tableData.push({name: "substitutionCount", type: "USHORT", value: subtable.lookupRecords.length});
          subtable.lookupRecords.forEach(function(record, i) {
            tableData = tableData.concat({name: "sequenceIndex" + i, type: "USHORT", value: record.sequenceIndex}).concat({name: "lookupListIndex" + i, type: "USHORT", value: record.lookupListIndex});
          });
          var returnTable$1 = new table.Table("chainContextTable", tableData);
          return returnTable$1;
        }
        check.assert(false, "lookup type 6 format must be 1, 2 or 3.");
      };
      function makeGsubTable(gsub2) {
        return new table.Table("GSUB", [
          {name: "version", type: "ULONG", value: 65536},
          {name: "scripts", type: "TABLE", value: new table.ScriptList(gsub2.scripts)},
          {name: "features", type: "TABLE", value: new table.FeatureList(gsub2.features)},
          {name: "lookups", type: "TABLE", value: new table.LookupList(gsub2.lookups, subtableMakers)}
        ]);
      }
      var gsub = {parse: parseGsubTable, make: makeGsubTable};
      function parseMetaTable(data, start) {
        var p = new parse.Parser(data, start);
        var tableVersion = p.parseULong();
        check.argument(tableVersion === 1, "Unsupported META table version.");
        p.parseULong();
        p.parseULong();
        var numDataMaps = p.parseULong();
        var tags = {};
        for (var i = 0; i < numDataMaps; i++) {
          var tag = p.parseTag();
          var dataOffset = p.parseULong();
          var dataLength = p.parseULong();
          var text = decode.UTF8(data, start + dataOffset, dataLength);
          tags[tag] = text;
        }
        return tags;
      }
      function makeMetaTable(tags) {
        var numTags = Object.keys(tags).length;
        var stringPool = "";
        var stringPoolOffset = 16 + numTags * 12;
        var result = new table.Table("meta", [
          {name: "version", type: "ULONG", value: 1},
          {name: "flags", type: "ULONG", value: 0},
          {name: "offset", type: "ULONG", value: stringPoolOffset},
          {name: "numTags", type: "ULONG", value: numTags}
        ]);
        for (var tag in tags) {
          var pos = stringPool.length;
          stringPool += tags[tag];
          result.fields.push({name: "tag " + tag, type: "TAG", value: tag});
          result.fields.push({name: "offset " + tag, type: "ULONG", value: stringPoolOffset + pos});
          result.fields.push({name: "length " + tag, type: "ULONG", value: tags[tag].length});
        }
        result.fields.push({name: "stringPool", type: "CHARARRAY", value: stringPool});
        return result;
      }
      var meta = {parse: parseMetaTable, make: makeMetaTable};
      function log2(v) {
        return Math.log(v) / Math.log(2) | 0;
      }
      function computeCheckSum(bytes) {
        while (bytes.length % 4 !== 0) {
          bytes.push(0);
        }
        var sum = 0;
        for (var i = 0; i < bytes.length; i += 4) {
          sum += (bytes[i] << 24) + (bytes[i + 1] << 16) + (bytes[i + 2] << 8) + bytes[i + 3];
        }
        sum %= Math.pow(2, 32);
        return sum;
      }
      function makeTableRecord(tag, checkSum, offset, length) {
        return new table.Record("Table Record", [
          {name: "tag", type: "TAG", value: tag !== void 0 ? tag : ""},
          {name: "checkSum", type: "ULONG", value: checkSum !== void 0 ? checkSum : 0},
          {name: "offset", type: "ULONG", value: offset !== void 0 ? offset : 0},
          {name: "length", type: "ULONG", value: length !== void 0 ? length : 0}
        ]);
      }
      function makeSfntTable(tables) {
        var sfnt2 = new table.Table("sfnt", [
          {name: "version", type: "TAG", value: "OTTO"},
          {name: "numTables", type: "USHORT", value: 0},
          {name: "searchRange", type: "USHORT", value: 0},
          {name: "entrySelector", type: "USHORT", value: 0},
          {name: "rangeShift", type: "USHORT", value: 0}
        ]);
        sfnt2.tables = tables;
        sfnt2.numTables = tables.length;
        var highestPowerOf2 = Math.pow(2, log2(sfnt2.numTables));
        sfnt2.searchRange = 16 * highestPowerOf2;
        sfnt2.entrySelector = log2(highestPowerOf2);
        sfnt2.rangeShift = sfnt2.numTables * 16 - sfnt2.searchRange;
        var recordFields = [];
        var tableFields = [];
        var offset = sfnt2.sizeOf() + makeTableRecord().sizeOf() * sfnt2.numTables;
        while (offset % 4 !== 0) {
          offset += 1;
          tableFields.push({name: "padding", type: "BYTE", value: 0});
        }
        for (var i = 0; i < tables.length; i += 1) {
          var t = tables[i];
          check.argument(t.tableName.length === 4, "Table name" + t.tableName + " is invalid.");
          var tableLength = t.sizeOf();
          var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);
          recordFields.push({name: tableRecord.tag + " Table Record", type: "RECORD", value: tableRecord});
          tableFields.push({name: t.tableName + " table", type: "RECORD", value: t});
          offset += tableLength;
          check.argument(!isNaN(offset), "Something went wrong calculating the offset.");
          while (offset % 4 !== 0) {
            offset += 1;
            tableFields.push({name: "padding", type: "BYTE", value: 0});
          }
        }
        recordFields.sort(function(r1, r2) {
          if (r1.value.tag > r2.value.tag) {
            return 1;
          } else {
            return -1;
          }
        });
        sfnt2.fields = sfnt2.fields.concat(recordFields);
        sfnt2.fields = sfnt2.fields.concat(tableFields);
        return sfnt2;
      }
      function metricsForChar(font, chars, notFoundMetrics) {
        for (var i = 0; i < chars.length; i += 1) {
          var glyphIndex = font.charToGlyphIndex(chars[i]);
          if (glyphIndex > 0) {
            var glyph = font.glyphs.get(glyphIndex);
            return glyph.getMetrics();
          }
        }
        return notFoundMetrics;
      }
      function average(vs) {
        var sum = 0;
        for (var i = 0; i < vs.length; i += 1) {
          sum += vs[i];
        }
        return sum / vs.length;
      }
      function fontToSfntTable(font) {
        var xMins = [];
        var yMins = [];
        var xMaxs = [];
        var yMaxs = [];
        var advanceWidths = [];
        var leftSideBearings = [];
        var rightSideBearings = [];
        var firstCharIndex;
        var lastCharIndex = 0;
        var ulUnicodeRange1 = 0;
        var ulUnicodeRange2 = 0;
        var ulUnicodeRange3 = 0;
        var ulUnicodeRange4 = 0;
        for (var i = 0; i < font.glyphs.length; i += 1) {
          var glyph = font.glyphs.get(i);
          var unicode = glyph.unicode | 0;
          if (isNaN(glyph.advanceWidth)) {
            throw new Error("Glyph " + glyph.name + " (" + i + "): advanceWidth is not a number.");
          }
          if (firstCharIndex > unicode || firstCharIndex === void 0) {
            if (unicode > 0) {
              firstCharIndex = unicode;
            }
          }
          if (lastCharIndex < unicode) {
            lastCharIndex = unicode;
          }
          var position = os2.getUnicodeRange(unicode);
          if (position < 32) {
            ulUnicodeRange1 |= 1 << position;
          } else if (position < 64) {
            ulUnicodeRange2 |= 1 << position - 32;
          } else if (position < 96) {
            ulUnicodeRange3 |= 1 << position - 64;
          } else if (position < 123) {
            ulUnicodeRange4 |= 1 << position - 96;
          } else {
            throw new Error("Unicode ranges bits > 123 are reserved for internal usage");
          }
          if (glyph.name === ".notdef") {
            continue;
          }
          var metrics = glyph.getMetrics();
          xMins.push(metrics.xMin);
          yMins.push(metrics.yMin);
          xMaxs.push(metrics.xMax);
          yMaxs.push(metrics.yMax);
          leftSideBearings.push(metrics.leftSideBearing);
          rightSideBearings.push(metrics.rightSideBearing);
          advanceWidths.push(glyph.advanceWidth);
        }
        var globals = {
          xMin: Math.min.apply(null, xMins),
          yMin: Math.min.apply(null, yMins),
          xMax: Math.max.apply(null, xMaxs),
          yMax: Math.max.apply(null, yMaxs),
          advanceWidthMax: Math.max.apply(null, advanceWidths),
          advanceWidthAvg: average(advanceWidths),
          minLeftSideBearing: Math.min.apply(null, leftSideBearings),
          maxLeftSideBearing: Math.max.apply(null, leftSideBearings),
          minRightSideBearing: Math.min.apply(null, rightSideBearings)
        };
        globals.ascender = font.ascender;
        globals.descender = font.descender;
        var headTable = head.make({
          flags: 3,
          unitsPerEm: font.unitsPerEm,
          xMin: globals.xMin,
          yMin: globals.yMin,
          xMax: globals.xMax,
          yMax: globals.yMax,
          lowestRecPPEM: 3,
          createdTimestamp: font.createdTimestamp
        });
        var hheaTable = hhea.make({
          ascender: globals.ascender,
          descender: globals.descender,
          advanceWidthMax: globals.advanceWidthMax,
          minLeftSideBearing: globals.minLeftSideBearing,
          minRightSideBearing: globals.minRightSideBearing,
          xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),
          numberOfHMetrics: font.glyphs.length
        });
        var maxpTable = maxp.make(font.glyphs.length);
        var os2Table = os2.make(Object.assign({
          xAvgCharWidth: Math.round(globals.advanceWidthAvg),
          usFirstCharIndex: firstCharIndex,
          usLastCharIndex: lastCharIndex,
          ulUnicodeRange1,
          ulUnicodeRange2,
          ulUnicodeRange3,
          ulUnicodeRange4,
          sTypoAscender: globals.ascender,
          sTypoDescender: globals.descender,
          sTypoLineGap: 0,
          usWinAscent: globals.yMax,
          usWinDescent: Math.abs(globals.yMin),
          ulCodePageRange1: 1,
          sxHeight: metricsForChar(font, "xyvw", {yMax: Math.round(globals.ascender / 2)}).yMax,
          sCapHeight: metricsForChar(font, "HIKLEFJMNTZBDPRAGOQSUVWXY", globals).yMax,
          usDefaultChar: font.hasChar(" ") ? 32 : 0,
          usBreakChar: font.hasChar(" ") ? 32 : 0
        }, font.tables.os2));
        var hmtxTable = hmtx.make(font.glyphs);
        var cmapTable = cmap.make(font.glyphs);
        var englishFamilyName = font.getEnglishName("fontFamily");
        var englishStyleName = font.getEnglishName("fontSubfamily");
        var englishFullName = englishFamilyName + " " + englishStyleName;
        var postScriptName = font.getEnglishName("postScriptName");
        if (!postScriptName) {
          postScriptName = englishFamilyName.replace(/\s/g, "") + "-" + englishStyleName;
        }
        var names = {};
        for (var n in font.names) {
          names[n] = font.names[n];
        }
        if (!names.uniqueID) {
          names.uniqueID = {en: font.getEnglishName("manufacturer") + ":" + englishFullName};
        }
        if (!names.postScriptName) {
          names.postScriptName = {en: postScriptName};
        }
        if (!names.preferredFamily) {
          names.preferredFamily = font.names.fontFamily;
        }
        if (!names.preferredSubfamily) {
          names.preferredSubfamily = font.names.fontSubfamily;
        }
        var languageTags = [];
        var nameTable = _name.make(names, languageTags);
        var ltagTable = languageTags.length > 0 ? ltag.make(languageTags) : void 0;
        var postTable = post.make();
        var cffTable = cff.make(font.glyphs, {
          version: font.getEnglishName("version"),
          fullName: englishFullName,
          familyName: englishFamilyName,
          weightName: englishStyleName,
          postScriptName,
          unitsPerEm: font.unitsPerEm,
          fontBBox: [0, globals.yMin, globals.ascender, globals.advanceWidthMax]
        });
        var metaTable = font.metas && Object.keys(font.metas).length > 0 ? meta.make(font.metas) : void 0;
        var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];
        if (ltagTable) {
          tables.push(ltagTable);
        }
        if (font.tables.gsub) {
          tables.push(gsub.make(font.tables.gsub));
        }
        if (metaTable) {
          tables.push(metaTable);
        }
        var sfntTable = makeSfntTable(tables);
        var bytes = sfntTable.encode();
        var checkSum = computeCheckSum(bytes);
        var tableFields = sfntTable.fields;
        var checkSumAdjusted = false;
        for (var i$1 = 0; i$1 < tableFields.length; i$1 += 1) {
          if (tableFields[i$1].name === "head table") {
            tableFields[i$1].value.checkSumAdjustment = 2981146554 - checkSum;
            checkSumAdjusted = true;
            break;
          }
        }
        if (!checkSumAdjusted) {
          throw new Error("Could not find head table with checkSum to adjust.");
        }
        return sfntTable;
      }
      var sfnt = {make: makeSfntTable, fontToTable: fontToSfntTable, computeCheckSum};
      function searchTag(arr, tag) {
        var imin = 0;
        var imax = arr.length - 1;
        while (imin <= imax) {
          var imid = imin + imax >>> 1;
          var val = arr[imid].tag;
          if (val === tag) {
            return imid;
          } else if (val < tag) {
            imin = imid + 1;
          } else {
            imax = imid - 1;
          }
        }
        return -imin - 1;
      }
      function binSearch(arr, value) {
        var imin = 0;
        var imax = arr.length - 1;
        while (imin <= imax) {
          var imid = imin + imax >>> 1;
          var val = arr[imid];
          if (val === value) {
            return imid;
          } else if (val < value) {
            imin = imid + 1;
          } else {
            imax = imid - 1;
          }
        }
        return -imin - 1;
      }
      function searchRange(ranges, value) {
        var range;
        var imin = 0;
        var imax = ranges.length - 1;
        while (imin <= imax) {
          var imid = imin + imax >>> 1;
          range = ranges[imid];
          var start = range.start;
          if (start === value) {
            return range;
          } else if (start < value) {
            imin = imid + 1;
          } else {
            imax = imid - 1;
          }
        }
        if (imin > 0) {
          range = ranges[imin - 1];
          if (value > range.end) {
            return 0;
          }
          return range;
        }
      }
      function Layout(font, tableName) {
        this.font = font;
        this.tableName = tableName;
      }
      Layout.prototype = {
        searchTag,
        binSearch,
        getTable: function(create) {
          var layout = this.font.tables[this.tableName];
          if (!layout && create) {
            layout = this.font.tables[this.tableName] = this.createDefaultTable();
          }
          return layout;
        },
        getScriptNames: function() {
          var layout = this.getTable();
          if (!layout) {
            return [];
          }
          return layout.scripts.map(function(script) {
            return script.tag;
          });
        },
        getDefaultScriptName: function() {
          var layout = this.getTable();
          if (!layout) {
            return;
          }
          var hasLatn = false;
          for (var i = 0; i < layout.scripts.length; i++) {
            var name = layout.scripts[i].tag;
            if (name === "DFLT") {
              return name;
            }
            if (name === "latn") {
              hasLatn = true;
            }
          }
          if (hasLatn) {
            return "latn";
          }
        },
        getScriptTable: function(script, create) {
          var layout = this.getTable(create);
          if (layout) {
            script = script || "DFLT";
            var scripts = layout.scripts;
            var pos = searchTag(layout.scripts, script);
            if (pos >= 0) {
              return scripts[pos].script;
            } else if (create) {
              var scr = {
                tag: script,
                script: {
                  defaultLangSys: {reserved: 0, reqFeatureIndex: 65535, featureIndexes: []},
                  langSysRecords: []
                }
              };
              scripts.splice(-1 - pos, 0, scr);
              return scr.script;
            }
          }
        },
        getLangSysTable: function(script, language, create) {
          var scriptTable = this.getScriptTable(script, create);
          if (scriptTable) {
            if (!language || language === "dflt" || language === "DFLT") {
              return scriptTable.defaultLangSys;
            }
            var pos = searchTag(scriptTable.langSysRecords, language);
            if (pos >= 0) {
              return scriptTable.langSysRecords[pos].langSys;
            } else if (create) {
              var langSysRecord = {
                tag: language,
                langSys: {reserved: 0, reqFeatureIndex: 65535, featureIndexes: []}
              };
              scriptTable.langSysRecords.splice(-1 - pos, 0, langSysRecord);
              return langSysRecord.langSys;
            }
          }
        },
        getFeatureTable: function(script, language, feature, create) {
          var langSysTable2 = this.getLangSysTable(script, language, create);
          if (langSysTable2) {
            var featureRecord;
            var featIndexes = langSysTable2.featureIndexes;
            var allFeatures = this.font.tables[this.tableName].features;
            for (var i = 0; i < featIndexes.length; i++) {
              featureRecord = allFeatures[featIndexes[i]];
              if (featureRecord.tag === feature) {
                return featureRecord.feature;
              }
            }
            if (create) {
              var index = allFeatures.length;
              check.assert(index === 0 || feature >= allFeatures[index - 1].tag, "Features must be added in alphabetical order.");
              featureRecord = {
                tag: feature,
                feature: {params: 0, lookupListIndexes: []}
              };
              allFeatures.push(featureRecord);
              featIndexes.push(index);
              return featureRecord.feature;
            }
          }
        },
        getLookupTables: function(script, language, feature, lookupType, create) {
          var featureTable = this.getFeatureTable(script, language, feature, create);
          var tables = [];
          if (featureTable) {
            var lookupTable;
            var lookupListIndexes = featureTable.lookupListIndexes;
            var allLookups = this.font.tables[this.tableName].lookups;
            for (var i = 0; i < lookupListIndexes.length; i++) {
              lookupTable = allLookups[lookupListIndexes[i]];
              if (lookupTable.lookupType === lookupType) {
                tables.push(lookupTable);
              }
            }
            if (tables.length === 0 && create) {
              lookupTable = {
                lookupType,
                lookupFlag: 0,
                subtables: [],
                markFilteringSet: void 0
              };
              var index = allLookups.length;
              allLookups.push(lookupTable);
              lookupListIndexes.push(index);
              return [lookupTable];
            }
          }
          return tables;
        },
        getGlyphClass: function(classDefTable, glyphIndex) {
          switch (classDefTable.format) {
            case 1:
              if (classDefTable.startGlyph <= glyphIndex && glyphIndex < classDefTable.startGlyph + classDefTable.classes.length) {
                return classDefTable.classes[glyphIndex - classDefTable.startGlyph];
              }
              return 0;
            case 2:
              var range = searchRange(classDefTable.ranges, glyphIndex);
              return range ? range.classId : 0;
          }
        },
        getCoverageIndex: function(coverageTable, glyphIndex) {
          switch (coverageTable.format) {
            case 1:
              var index = binSearch(coverageTable.glyphs, glyphIndex);
              return index >= 0 ? index : -1;
            case 2:
              var range = searchRange(coverageTable.ranges, glyphIndex);
              return range ? range.index + glyphIndex - range.start : -1;
          }
        },
        expandCoverage: function(coverageTable) {
          if (coverageTable.format === 1) {
            return coverageTable.glyphs;
          } else {
            var glyphs = [];
            var ranges = coverageTable.ranges;
            for (var i = 0; i < ranges.length; i++) {
              var range = ranges[i];
              var start = range.start;
              var end = range.end;
              for (var j = start; j <= end; j++) {
                glyphs.push(j);
              }
            }
            return glyphs;
          }
        }
      };
      function Position(font) {
        Layout.call(this, font, "gpos");
      }
      Position.prototype = Layout.prototype;
      Position.prototype.init = function() {
        var script = this.getDefaultScriptName();
        this.defaultKerningTables = this.getKerningTables(script);
      };
      Position.prototype.getKerningValue = function(kerningLookups, leftIndex, rightIndex) {
        for (var i = 0; i < kerningLookups.length; i++) {
          var subtables = kerningLookups[i].subtables;
          for (var j = 0; j < subtables.length; j++) {
            var subtable = subtables[j];
            var covIndex = this.getCoverageIndex(subtable.coverage, leftIndex);
            if (covIndex < 0) {
              continue;
            }
            switch (subtable.posFormat) {
              case 1:
                var pairSet = subtable.pairSets[covIndex];
                for (var k = 0; k < pairSet.length; k++) {
                  var pair = pairSet[k];
                  if (pair.secondGlyph === rightIndex) {
                    return pair.value1 && pair.value1.xAdvance || 0;
                  }
                }
                break;
              case 2:
                var class1 = this.getGlyphClass(subtable.classDef1, leftIndex);
                var class2 = this.getGlyphClass(subtable.classDef2, rightIndex);
                var pair$1 = subtable.classRecords[class1][class2];
                return pair$1.value1 && pair$1.value1.xAdvance || 0;
            }
          }
        }
        return 0;
      };
      Position.prototype.getKerningTables = function(script, language) {
        if (this.font.tables.gpos) {
          return this.getLookupTables(script, language, "kern", 2);
        }
      };
      function Substitution(font) {
        Layout.call(this, font, "gsub");
      }
      function arraysEqual(ar1, ar2) {
        var n = ar1.length;
        if (n !== ar2.length) {
          return false;
        }
        for (var i = 0; i < n; i++) {
          if (ar1[i] !== ar2[i]) {
            return false;
          }
        }
        return true;
      }
      function getSubstFormat(lookupTable, format, defaultSubtable) {
        var subtables = lookupTable.subtables;
        for (var i = 0; i < subtables.length; i++) {
          var subtable = subtables[i];
          if (subtable.substFormat === format) {
            return subtable;
          }
        }
        if (defaultSubtable) {
          subtables.push(defaultSubtable);
          return defaultSubtable;
        }
        return void 0;
      }
      Substitution.prototype = Layout.prototype;
      Substitution.prototype.createDefaultTable = function() {
        return {
          version: 1,
          scripts: [{
            tag: "DFLT",
            script: {
              defaultLangSys: {reserved: 0, reqFeatureIndex: 65535, featureIndexes: []},
              langSysRecords: []
            }
          }],
          features: [],
          lookups: []
        };
      };
      Substitution.prototype.getSingle = function(feature, script, language) {
        var substitutions = [];
        var lookupTables = this.getLookupTables(script, language, feature, 1);
        for (var idx = 0; idx < lookupTables.length; idx++) {
          var subtables = lookupTables[idx].subtables;
          for (var i = 0; i < subtables.length; i++) {
            var subtable = subtables[i];
            var glyphs = this.expandCoverage(subtable.coverage);
            var j = void 0;
            if (subtable.substFormat === 1) {
              var delta = subtable.deltaGlyphId;
              for (j = 0; j < glyphs.length; j++) {
                var glyph = glyphs[j];
                substitutions.push({sub: glyph, by: glyph + delta});
              }
            } else {
              var substitute = subtable.substitute;
              for (j = 0; j < glyphs.length; j++) {
                substitutions.push({sub: glyphs[j], by: substitute[j]});
              }
            }
          }
        }
        return substitutions;
      };
      Substitution.prototype.getMultiple = function(feature, script, language) {
        var substitutions = [];
        var lookupTables = this.getLookupTables(script, language, feature, 2);
        for (var idx = 0; idx < lookupTables.length; idx++) {
          var subtables = lookupTables[idx].subtables;
          for (var i = 0; i < subtables.length; i++) {
            var subtable = subtables[i];
            var glyphs = this.expandCoverage(subtable.coverage);
            var j = void 0;
            for (j = 0; j < glyphs.length; j++) {
              var glyph = glyphs[j];
              var replacements = subtable.sequences[j];
              substitutions.push({sub: glyph, by: replacements});
            }
          }
        }
        return substitutions;
      };
      Substitution.prototype.getAlternates = function(feature, script, language) {
        var alternates = [];
        var lookupTables = this.getLookupTables(script, language, feature, 3);
        for (var idx = 0; idx < lookupTables.length; idx++) {
          var subtables = lookupTables[idx].subtables;
          for (var i = 0; i < subtables.length; i++) {
            var subtable = subtables[i];
            var glyphs = this.expandCoverage(subtable.coverage);
            var alternateSets = subtable.alternateSets;
            for (var j = 0; j < glyphs.length; j++) {
              alternates.push({sub: glyphs[j], by: alternateSets[j]});
            }
          }
        }
        return alternates;
      };
      Substitution.prototype.getLigatures = function(feature, script, language) {
        var ligatures = [];
        var lookupTables = this.getLookupTables(script, language, feature, 4);
        for (var idx = 0; idx < lookupTables.length; idx++) {
          var subtables = lookupTables[idx].subtables;
          for (var i = 0; i < subtables.length; i++) {
            var subtable = subtables[i];
            var glyphs = this.expandCoverage(subtable.coverage);
            var ligatureSets = subtable.ligatureSets;
            for (var j = 0; j < glyphs.length; j++) {
              var startGlyph = glyphs[j];
              var ligSet = ligatureSets[j];
              for (var k = 0; k < ligSet.length; k++) {
                var lig = ligSet[k];
                ligatures.push({
                  sub: [startGlyph].concat(lig.components),
                  by: lig.ligGlyph
                });
              }
            }
          }
        }
        return ligatures;
      };
      Substitution.prototype.addSingle = function(feature, substitution, script, language) {
        var lookupTable = this.getLookupTables(script, language, feature, 1, true)[0];
        var subtable = getSubstFormat(lookupTable, 2, {
          substFormat: 2,
          coverage: {format: 1, glyphs: []},
          substitute: []
        });
        check.assert(subtable.coverage.format === 1, "Single: unable to modify coverage table format " + subtable.coverage.format);
        var coverageGlyph = substitution.sub;
        var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);
        if (pos < 0) {
          pos = -1 - pos;
          subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);
          subtable.substitute.splice(pos, 0, 0);
        }
        subtable.substitute[pos] = substitution.by;
      };
      Substitution.prototype.addMultiple = function(feature, substitution, script, language) {
        check.assert(substitution.by instanceof Array && substitution.by.length > 1, 'Multiple: "by" must be an array of two or more ids');
        var lookupTable = this.getLookupTables(script, language, feature, 2, true)[0];
        var subtable = getSubstFormat(lookupTable, 1, {
          substFormat: 1,
          coverage: {format: 1, glyphs: []},
          sequences: []
        });
        check.assert(subtable.coverage.format === 1, "Multiple: unable to modify coverage table format " + subtable.coverage.format);
        var coverageGlyph = substitution.sub;
        var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);
        if (pos < 0) {
          pos = -1 - pos;
          subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);
          subtable.sequences.splice(pos, 0, 0);
        }
        subtable.sequences[pos] = substitution.by;
      };
      Substitution.prototype.addAlternate = function(feature, substitution, script, language) {
        var lookupTable = this.getLookupTables(script, language, feature, 3, true)[0];
        var subtable = getSubstFormat(lookupTable, 1, {
          substFormat: 1,
          coverage: {format: 1, glyphs: []},
          alternateSets: []
        });
        check.assert(subtable.coverage.format === 1, "Alternate: unable to modify coverage table format " + subtable.coverage.format);
        var coverageGlyph = substitution.sub;
        var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);
        if (pos < 0) {
          pos = -1 - pos;
          subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);
          subtable.alternateSets.splice(pos, 0, 0);
        }
        subtable.alternateSets[pos] = substitution.by;
      };
      Substitution.prototype.addLigature = function(feature, ligature, script, language) {
        var lookupTable = this.getLookupTables(script, language, feature, 4, true)[0];
        var subtable = lookupTable.subtables[0];
        if (!subtable) {
          subtable = {
            substFormat: 1,
            coverage: {format: 1, glyphs: []},
            ligatureSets: []
          };
          lookupTable.subtables[0] = subtable;
        }
        check.assert(subtable.coverage.format === 1, "Ligature: unable to modify coverage table format " + subtable.coverage.format);
        var coverageGlyph = ligature.sub[0];
        var ligComponents = ligature.sub.slice(1);
        var ligatureTable = {
          ligGlyph: ligature.by,
          components: ligComponents
        };
        var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);
        if (pos >= 0) {
          var ligatureSet = subtable.ligatureSets[pos];
          for (var i = 0; i < ligatureSet.length; i++) {
            if (arraysEqual(ligatureSet[i].components, ligComponents)) {
              return;
            }
          }
          ligatureSet.push(ligatureTable);
        } else {
          pos = -1 - pos;
          subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);
          subtable.ligatureSets.splice(pos, 0, [ligatureTable]);
        }
      };
      Substitution.prototype.getFeature = function(feature, script, language) {
        if (/ss\d\d/.test(feature)) {
          return this.getSingle(feature, script, language);
        }
        switch (feature) {
          case "aalt":
          case "salt":
            return this.getSingle(feature, script, language).concat(this.getAlternates(feature, script, language));
          case "dlig":
          case "liga":
          case "rlig":
            return this.getLigatures(feature, script, language);
          case "ccmp":
            return this.getMultiple(feature, script, language).concat(this.getLigatures(feature, script, language));
          case "stch":
            return this.getMultiple(feature, script, language);
        }
        return void 0;
      };
      Substitution.prototype.add = function(feature, sub, script, language) {
        if (/ss\d\d/.test(feature)) {
          return this.addSingle(feature, sub, script, language);
        }
        switch (feature) {
          case "aalt":
          case "salt":
            if (typeof sub.by === "number") {
              return this.addSingle(feature, sub, script, language);
            }
            return this.addAlternate(feature, sub, script, language);
          case "dlig":
          case "liga":
          case "rlig":
            return this.addLigature(feature, sub, script, language);
          case "ccmp":
            if (sub.by instanceof Array) {
              return this.addMultiple(feature, sub, script, language);
            }
            return this.addLigature(feature, sub, script, language);
        }
        return void 0;
      };
      function isBrowser() {
        return typeof window !== "undefined";
      }
      function nodeBufferToArrayBuffer(buffer) {
        var ab = new ArrayBuffer(buffer.length);
        var view = new Uint8Array(ab);
        for (var i = 0; i < buffer.length; ++i) {
          view[i] = buffer[i];
        }
        return ab;
      }
      function arrayBufferToNodeBuffer(ab) {
        var buffer = new Buffer(ab.byteLength);
        var view = new Uint8Array(ab);
        for (var i = 0; i < buffer.length; ++i) {
          buffer[i] = view[i];
        }
        return buffer;
      }
      function checkArgument(expression, message) {
        if (!expression) {
          throw message;
        }
      }
      function parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {
        var v;
        if ((flag & shortVectorBitMask) > 0) {
          v = p.parseByte();
          if ((flag & sameBitMask) === 0) {
            v = -v;
          }
          v = previousValue + v;
        } else {
          if ((flag & sameBitMask) > 0) {
            v = previousValue;
          } else {
            v = previousValue + p.parseShort();
          }
        }
        return v;
      }
      function parseGlyph(glyph, data, start) {
        var p = new parse.Parser(data, start);
        glyph.numberOfContours = p.parseShort();
        glyph._xMin = p.parseShort();
        glyph._yMin = p.parseShort();
        glyph._xMax = p.parseShort();
        glyph._yMax = p.parseShort();
        var flags;
        var flag;
        if (glyph.numberOfContours > 0) {
          var endPointIndices = glyph.endPointIndices = [];
          for (var i = 0; i < glyph.numberOfContours; i += 1) {
            endPointIndices.push(p.parseUShort());
          }
          glyph.instructionLength = p.parseUShort();
          glyph.instructions = [];
          for (var i$1 = 0; i$1 < glyph.instructionLength; i$1 += 1) {
            glyph.instructions.push(p.parseByte());
          }
          var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;
          flags = [];
          for (var i$2 = 0; i$2 < numberOfCoordinates; i$2 += 1) {
            flag = p.parseByte();
            flags.push(flag);
            if ((flag & 8) > 0) {
              var repeatCount = p.parseByte();
              for (var j = 0; j < repeatCount; j += 1) {
                flags.push(flag);
                i$2 += 1;
              }
            }
          }
          check.argument(flags.length === numberOfCoordinates, "Bad flags.");
          if (endPointIndices.length > 0) {
            var points = [];
            var point;
            if (numberOfCoordinates > 0) {
              for (var i$3 = 0; i$3 < numberOfCoordinates; i$3 += 1) {
                flag = flags[i$3];
                point = {};
                point.onCurve = !!(flag & 1);
                point.lastPointOfContour = endPointIndices.indexOf(i$3) >= 0;
                points.push(point);
              }
              var px = 0;
              for (var i$4 = 0; i$4 < numberOfCoordinates; i$4 += 1) {
                flag = flags[i$4];
                point = points[i$4];
                point.x = parseGlyphCoordinate(p, flag, px, 2, 16);
                px = point.x;
              }
              var py = 0;
              for (var i$5 = 0; i$5 < numberOfCoordinates; i$5 += 1) {
                flag = flags[i$5];
                point = points[i$5];
                point.y = parseGlyphCoordinate(p, flag, py, 4, 32);
                py = point.y;
              }
            }
            glyph.points = points;
          } else {
            glyph.points = [];
          }
        } else if (glyph.numberOfContours === 0) {
          glyph.points = [];
        } else {
          glyph.isComposite = true;
          glyph.points = [];
          glyph.components = [];
          var moreComponents = true;
          while (moreComponents) {
            flags = p.parseUShort();
            var component = {
              glyphIndex: p.parseUShort(),
              xScale: 1,
              scale01: 0,
              scale10: 0,
              yScale: 1,
              dx: 0,
              dy: 0
            };
            if ((flags & 1) > 0) {
              if ((flags & 2) > 0) {
                component.dx = p.parseShort();
                component.dy = p.parseShort();
              } else {
                component.matchedPoints = [p.parseUShort(), p.parseUShort()];
              }
            } else {
              if ((flags & 2) > 0) {
                component.dx = p.parseChar();
                component.dy = p.parseChar();
              } else {
                component.matchedPoints = [p.parseByte(), p.parseByte()];
              }
            }
            if ((flags & 8) > 0) {
              component.xScale = component.yScale = p.parseF2Dot14();
            } else if ((flags & 64) > 0) {
              component.xScale = p.parseF2Dot14();
              component.yScale = p.parseF2Dot14();
            } else if ((flags & 128) > 0) {
              component.xScale = p.parseF2Dot14();
              component.scale01 = p.parseF2Dot14();
              component.scale10 = p.parseF2Dot14();
              component.yScale = p.parseF2Dot14();
            }
            glyph.components.push(component);
            moreComponents = !!(flags & 32);
          }
          if (flags & 256) {
            glyph.instructionLength = p.parseUShort();
            glyph.instructions = [];
            for (var i$6 = 0; i$6 < glyph.instructionLength; i$6 += 1) {
              glyph.instructions.push(p.parseByte());
            }
          }
        }
      }
      function transformPoints(points, transform) {
        var newPoints = [];
        for (var i = 0; i < points.length; i += 1) {
          var pt = points[i];
          var newPt = {
            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,
            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,
            onCurve: pt.onCurve,
            lastPointOfContour: pt.lastPointOfContour
          };
          newPoints.push(newPt);
        }
        return newPoints;
      }
      function getContours(points) {
        var contours = [];
        var currentContour = [];
        for (var i = 0; i < points.length; i += 1) {
          var pt = points[i];
          currentContour.push(pt);
          if (pt.lastPointOfContour) {
            contours.push(currentContour);
            currentContour = [];
          }
        }
        check.argument(currentContour.length === 0, "There are still points left in the current contour.");
        return contours;
      }
      function getPath(points) {
        var p = new Path();
        if (!points) {
          return p;
        }
        var contours = getContours(points);
        for (var contourIndex = 0; contourIndex < contours.length; ++contourIndex) {
          var contour = contours[contourIndex];
          var prev = null;
          var curr = contour[contour.length - 1];
          var next = contour[0];
          if (curr.onCurve) {
            p.moveTo(curr.x, curr.y);
          } else {
            if (next.onCurve) {
              p.moveTo(next.x, next.y);
            } else {
              var start = {x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5};
              p.moveTo(start.x, start.y);
            }
          }
          for (var i = 0; i < contour.length; ++i) {
            prev = curr;
            curr = next;
            next = contour[(i + 1) % contour.length];
            if (curr.onCurve) {
              p.lineTo(curr.x, curr.y);
            } else {
              var prev2 = prev;
              var next2 = next;
              if (!prev.onCurve) {
                prev2 = {x: (curr.x + prev.x) * 0.5, y: (curr.y + prev.y) * 0.5};
              }
              if (!next.onCurve) {
                next2 = {x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5};
              }
              p.quadraticCurveTo(curr.x, curr.y, next2.x, next2.y);
            }
          }
          p.closePath();
        }
        return p;
      }
      function buildPath(glyphs, glyph) {
        if (glyph.isComposite) {
          for (var j = 0; j < glyph.components.length; j += 1) {
            var component = glyph.components[j];
            var componentGlyph = glyphs.get(component.glyphIndex);
            componentGlyph.getPath();
            if (componentGlyph.points) {
              var transformedPoints = void 0;
              if (component.matchedPoints === void 0) {
                transformedPoints = transformPoints(componentGlyph.points, component);
              } else {
                if (component.matchedPoints[0] > glyph.points.length - 1 || component.matchedPoints[1] > componentGlyph.points.length - 1) {
                  throw Error("Matched points out of range in " + glyph.name);
                }
                var firstPt = glyph.points[component.matchedPoints[0]];
                var secondPt = componentGlyph.points[component.matchedPoints[1]];
                var transform = {
                  xScale: component.xScale,
                  scale01: component.scale01,
                  scale10: component.scale10,
                  yScale: component.yScale,
                  dx: 0,
                  dy: 0
                };
                secondPt = transformPoints([secondPt], transform)[0];
                transform.dx = firstPt.x - secondPt.x;
                transform.dy = firstPt.y - secondPt.y;
                transformedPoints = transformPoints(componentGlyph.points, transform);
              }
              glyph.points = glyph.points.concat(transformedPoints);
            }
          }
        }
        return getPath(glyph.points);
      }
      function parseGlyfTableAll(data, start, loca2, font) {
        var glyphs = new glyphset.GlyphSet(font);
        for (var i = 0; i < loca2.length - 1; i += 1) {
          var offset = loca2[i];
          var nextOffset = loca2[i + 1];
          if (offset !== nextOffset) {
            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));
          } else {
            glyphs.push(i, glyphset.glyphLoader(font, i));
          }
        }
        return glyphs;
      }
      function parseGlyfTableOnLowMemory(data, start, loca2, font) {
        var glyphs = new glyphset.GlyphSet(font);
        font._push = function(i) {
          var offset = loca2[i];
          var nextOffset = loca2[i + 1];
          if (offset !== nextOffset) {
            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));
          } else {
            glyphs.push(i, glyphset.glyphLoader(font, i));
          }
        };
        return glyphs;
      }
      function parseGlyfTable(data, start, loca2, font, opt) {
        if (opt.lowMemory) {
          return parseGlyfTableOnLowMemory(data, start, loca2, font);
        } else {
          return parseGlyfTableAll(data, start, loca2, font);
        }
      }
      var glyf = {getPath, parse: parseGlyfTable};
      var instructionTable;
      var exec;
      var execGlyph;
      var execComponent;
      function Hinting(font) {
        this.font = font;
        this.getCommands = function(hPoints) {
          return glyf.getPath(hPoints).commands;
        };
        this._fpgmState = this._prepState = void 0;
        this._errorState = 0;
      }
      function roundOff(v) {
        return v;
      }
      function roundToGrid(v) {
        return Math.sign(v) * Math.round(Math.abs(v));
      }
      function roundToDoubleGrid(v) {
        return Math.sign(v) * Math.round(Math.abs(v * 2)) / 2;
      }
      function roundToHalfGrid(v) {
        return Math.sign(v) * (Math.round(Math.abs(v) + 0.5) - 0.5);
      }
      function roundUpToGrid(v) {
        return Math.sign(v) * Math.ceil(Math.abs(v));
      }
      function roundDownToGrid(v) {
        return Math.sign(v) * Math.floor(Math.abs(v));
      }
      var roundSuper = function(v) {
        var period = this.srPeriod;
        var phase = this.srPhase;
        var threshold = this.srThreshold;
        var sign = 1;
        if (v < 0) {
          v = -v;
          sign = -1;
        }
        v += threshold - phase;
        v = Math.trunc(v / period) * period;
        v += phase;
        if (v < 0) {
          return phase * sign;
        }
        return v * sign;
      };
      var xUnitVector = {
        x: 1,
        y: 0,
        axis: "x",
        distance: function(p1, p2, o1, o2) {
          return (o1 ? p1.xo : p1.x) - (o2 ? p2.xo : p2.x);
        },
        interpolate: function(p, rp1, rp2, pv) {
          var do1;
          var do2;
          var doa1;
          var doa2;
          var dm1;
          var dm2;
          var dt;
          if (!pv || pv === this) {
            do1 = p.xo - rp1.xo;
            do2 = p.xo - rp2.xo;
            dm1 = rp1.x - rp1.xo;
            dm2 = rp2.x - rp2.xo;
            doa1 = Math.abs(do1);
            doa2 = Math.abs(do2);
            dt = doa1 + doa2;
            if (dt === 0) {
              p.x = p.xo + (dm1 + dm2) / 2;
              return;
            }
            p.x = p.xo + (dm1 * doa2 + dm2 * doa1) / dt;
            return;
          }
          do1 = pv.distance(p, rp1, true, true);
          do2 = pv.distance(p, rp2, true, true);
          dm1 = pv.distance(rp1, rp1, false, true);
          dm2 = pv.distance(rp2, rp2, false, true);
          doa1 = Math.abs(do1);
          doa2 = Math.abs(do2);
          dt = doa1 + doa2;
          if (dt === 0) {
            xUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);
            return;
          }
          xUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);
        },
        normalSlope: Number.NEGATIVE_INFINITY,
        setRelative: function(p, rp, d, pv, org) {
          if (!pv || pv === this) {
            p.x = (org ? rp.xo : rp.x) + d;
            return;
          }
          var rpx = org ? rp.xo : rp.x;
          var rpy = org ? rp.yo : rp.y;
          var rpdx = rpx + d * pv.x;
          var rpdy = rpy + d * pv.y;
          p.x = rpdx + (p.y - rpdy) / pv.normalSlope;
        },
        slope: 0,
        touch: function(p) {
          p.xTouched = true;
        },
        touched: function(p) {
          return p.xTouched;
        },
        untouch: function(p) {
          p.xTouched = false;
        }
      };
      var yUnitVector = {
        x: 0,
        y: 1,
        axis: "y",
        distance: function(p1, p2, o1, o2) {
          return (o1 ? p1.yo : p1.y) - (o2 ? p2.yo : p2.y);
        },
        interpolate: function(p, rp1, rp2, pv) {
          var do1;
          var do2;
          var doa1;
          var doa2;
          var dm1;
          var dm2;
          var dt;
          if (!pv || pv === this) {
            do1 = p.yo - rp1.yo;
            do2 = p.yo - rp2.yo;
            dm1 = rp1.y - rp1.yo;
            dm2 = rp2.y - rp2.yo;
            doa1 = Math.abs(do1);
            doa2 = Math.abs(do2);
            dt = doa1 + doa2;
            if (dt === 0) {
              p.y = p.yo + (dm1 + dm2) / 2;
              return;
            }
            p.y = p.yo + (dm1 * doa2 + dm2 * doa1) / dt;
            return;
          }
          do1 = pv.distance(p, rp1, true, true);
          do2 = pv.distance(p, rp2, true, true);
          dm1 = pv.distance(rp1, rp1, false, true);
          dm2 = pv.distance(rp2, rp2, false, true);
          doa1 = Math.abs(do1);
          doa2 = Math.abs(do2);
          dt = doa1 + doa2;
          if (dt === 0) {
            yUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);
            return;
          }
          yUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);
        },
        normalSlope: 0,
        setRelative: function(p, rp, d, pv, org) {
          if (!pv || pv === this) {
            p.y = (org ? rp.yo : rp.y) + d;
            return;
          }
          var rpx = org ? rp.xo : rp.x;
          var rpy = org ? rp.yo : rp.y;
          var rpdx = rpx + d * pv.x;
          var rpdy = rpy + d * pv.y;
          p.y = rpdy + pv.normalSlope * (p.x - rpdx);
        },
        slope: Number.POSITIVE_INFINITY,
        touch: function(p) {
          p.yTouched = true;
        },
        touched: function(p) {
          return p.yTouched;
        },
        untouch: function(p) {
          p.yTouched = false;
        }
      };
      Object.freeze(xUnitVector);
      Object.freeze(yUnitVector);
      function UnitVector(x, y) {
        this.x = x;
        this.y = y;
        this.axis = void 0;
        this.slope = y / x;
        this.normalSlope = -x / y;
        Object.freeze(this);
      }
      UnitVector.prototype.distance = function(p1, p2, o1, o2) {
        return this.x * xUnitVector.distance(p1, p2, o1, o2) + this.y * yUnitVector.distance(p1, p2, o1, o2);
      };
      UnitVector.prototype.interpolate = function(p, rp1, rp2, pv) {
        var dm1;
        var dm2;
        var do1;
        var do2;
        var doa1;
        var doa2;
        var dt;
        do1 = pv.distance(p, rp1, true, true);
        do2 = pv.distance(p, rp2, true, true);
        dm1 = pv.distance(rp1, rp1, false, true);
        dm2 = pv.distance(rp2, rp2, false, true);
        doa1 = Math.abs(do1);
        doa2 = Math.abs(do2);
        dt = doa1 + doa2;
        if (dt === 0) {
          this.setRelative(p, p, (dm1 + dm2) / 2, pv, true);
          return;
        }
        this.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);
      };
      UnitVector.prototype.setRelative = function(p, rp, d, pv, org) {
        pv = pv || this;
        var rpx = org ? rp.xo : rp.x;
        var rpy = org ? rp.yo : rp.y;
        var rpdx = rpx + d * pv.x;
        var rpdy = rpy + d * pv.y;
        var pvns = pv.normalSlope;
        var fvs = this.slope;
        var px = p.x;
        var py = p.y;
        p.x = (fvs * px - pvns * rpdx + rpdy - py) / (fvs - pvns);
        p.y = fvs * (p.x - px) + py;
      };
      UnitVector.prototype.touch = function(p) {
        p.xTouched = true;
        p.yTouched = true;
      };
      function getUnitVector(x, y) {
        var d = Math.sqrt(x * x + y * y);
        x /= d;
        y /= d;
        if (x === 1 && y === 0) {
          return xUnitVector;
        } else if (x === 0 && y === 1) {
          return yUnitVector;
        } else {
          return new UnitVector(x, y);
        }
      }
      function HPoint(x, y, lastPointOfContour, onCurve) {
        this.x = this.xo = Math.round(x * 64) / 64;
        this.y = this.yo = Math.round(y * 64) / 64;
        this.lastPointOfContour = lastPointOfContour;
        this.onCurve = onCurve;
        this.prevPointOnContour = void 0;
        this.nextPointOnContour = void 0;
        this.xTouched = false;
        this.yTouched = false;
        Object.preventExtensions(this);
      }
      HPoint.prototype.nextTouched = function(v) {
        var p = this.nextPointOnContour;
        while (!v.touched(p) && p !== this) {
          p = p.nextPointOnContour;
        }
        return p;
      };
      HPoint.prototype.prevTouched = function(v) {
        var p = this.prevPointOnContour;
        while (!v.touched(p) && p !== this) {
          p = p.prevPointOnContour;
        }
        return p;
      };
      var HPZero = Object.freeze(new HPoint(0, 0));
      var defaultState = {
        cvCutIn: 17 / 16,
        deltaBase: 9,
        deltaShift: 0.125,
        loop: 1,
        minDis: 1,
        autoFlip: true
      };
      function State(env, prog) {
        this.env = env;
        this.stack = [];
        this.prog = prog;
        switch (env) {
          case "glyf":
            this.zp0 = this.zp1 = this.zp2 = 1;
            this.rp0 = this.rp1 = this.rp2 = 0;
          case "prep":
            this.fv = this.pv = this.dpv = xUnitVector;
            this.round = roundToGrid;
        }
      }
      Hinting.prototype.exec = function(glyph, ppem) {
        if (typeof ppem !== "number") {
          throw new Error("Point size is not a number!");
        }
        if (this._errorState > 2) {
          return;
        }
        var font = this.font;
        var prepState = this._prepState;
        if (!prepState || prepState.ppem !== ppem) {
          var fpgmState = this._fpgmState;
          if (!fpgmState) {
            State.prototype = defaultState;
            fpgmState = this._fpgmState = new State("fpgm", font.tables.fpgm);
            fpgmState.funcs = [];
            fpgmState.font = font;
            if (exports2.DEBUG) {
              console.log("---EXEC FPGM---");
              fpgmState.step = -1;
            }
            try {
              exec(fpgmState);
            } catch (e) {
              console.log("Hinting error in FPGM:" + e);
              this._errorState = 3;
              return;
            }
          }
          State.prototype = fpgmState;
          prepState = this._prepState = new State("prep", font.tables.prep);
          prepState.ppem = ppem;
          var oCvt = font.tables.cvt;
          if (oCvt) {
            var cvt = prepState.cvt = new Array(oCvt.length);
            var scale = ppem / font.unitsPerEm;
            for (var c = 0; c < oCvt.length; c++) {
              cvt[c] = oCvt[c] * scale;
            }
          } else {
            prepState.cvt = [];
          }
          if (exports2.DEBUG) {
            console.log("---EXEC PREP---");
            prepState.step = -1;
          }
          try {
            exec(prepState);
          } catch (e) {
            if (this._errorState < 2) {
              console.log("Hinting error in PREP:" + e);
            }
            this._errorState = 2;
          }
        }
        if (this._errorState > 1) {
          return;
        }
        try {
          return execGlyph(glyph, prepState);
        } catch (e) {
          if (this._errorState < 1) {
            console.log("Hinting error:" + e);
            console.log("Note: further hinting errors are silenced");
          }
          this._errorState = 1;
          return void 0;
        }
      };
      execGlyph = function(glyph, prepState) {
        var xScale = prepState.ppem / prepState.font.unitsPerEm;
        var yScale = xScale;
        var components = glyph.components;
        var contours;
        var gZone;
        var state;
        State.prototype = prepState;
        if (!components) {
          state = new State("glyf", glyph.instructions);
          if (exports2.DEBUG) {
            console.log("---EXEC GLYPH---");
            state.step = -1;
          }
          execComponent(glyph, state, xScale, yScale);
          gZone = state.gZone;
        } else {
          var font = prepState.font;
          gZone = [];
          contours = [];
          for (var i = 0; i < components.length; i++) {
            var c = components[i];
            var cg = font.glyphs.get(c.glyphIndex);
            state = new State("glyf", cg.instructions);
            if (exports2.DEBUG) {
              console.log("---EXEC COMP " + i + "---");
              state.step = -1;
            }
            execComponent(cg, state, xScale, yScale);
            var dx = Math.round(c.dx * xScale);
            var dy = Math.round(c.dy * yScale);
            var gz = state.gZone;
            var cc = state.contours;
            for (var pi = 0; pi < gz.length; pi++) {
              var p = gz[pi];
              p.xTouched = p.yTouched = false;
              p.xo = p.x = p.x + dx;
              p.yo = p.y = p.y + dy;
            }
            var gLen = gZone.length;
            gZone.push.apply(gZone, gz);
            for (var j = 0; j < cc.length; j++) {
              contours.push(cc[j] + gLen);
            }
          }
          if (glyph.instructions && !state.inhibitGridFit) {
            state = new State("glyf", glyph.instructions);
            state.gZone = state.z0 = state.z1 = state.z2 = gZone;
            state.contours = contours;
            gZone.push(new HPoint(0, 0), new HPoint(Math.round(glyph.advanceWidth * xScale), 0));
            if (exports2.DEBUG) {
              console.log("---EXEC COMPOSITE---");
              state.step = -1;
            }
            exec(state);
            gZone.length -= 2;
          }
        }
        return gZone;
      };
      execComponent = function(glyph, state, xScale, yScale) {
        var points = glyph.points || [];
        var pLen = points.length;
        var gZone = state.gZone = state.z0 = state.z1 = state.z2 = [];
        var contours = state.contours = [];
        var cp;
        for (var i = 0; i < pLen; i++) {
          cp = points[i];
          gZone[i] = new HPoint(cp.x * xScale, cp.y * yScale, cp.lastPointOfContour, cp.onCurve);
        }
        var sp;
        var np;
        for (var i$1 = 0; i$1 < pLen; i$1++) {
          cp = gZone[i$1];
          if (!sp) {
            sp = cp;
            contours.push(i$1);
          }
          if (cp.lastPointOfContour) {
            cp.nextPointOnContour = sp;
            sp.prevPointOnContour = cp;
            sp = void 0;
          } else {
            np = gZone[i$1 + 1];
            cp.nextPointOnContour = np;
            np.prevPointOnContour = cp;
          }
        }
        if (state.inhibitGridFit) {
          return;
        }
        if (exports2.DEBUG) {
          console.log("PROCESSING GLYPH", state.stack);
          for (var i$2 = 0; i$2 < pLen; i$2++) {
            console.log(i$2, gZone[i$2].x, gZone[i$2].y);
          }
        }
        gZone.push(new HPoint(0, 0), new HPoint(Math.round(glyph.advanceWidth * xScale), 0));
        exec(state);
        gZone.length -= 2;
        if (exports2.DEBUG) {
          console.log("FINISHED GLYPH", state.stack);
          for (var i$3 = 0; i$3 < pLen; i$3++) {
            console.log(i$3, gZone[i$3].x, gZone[i$3].y);
          }
        }
      };
      exec = function(state) {
        var prog = state.prog;
        if (!prog) {
          return;
        }
        var pLen = prog.length;
        var ins;
        for (state.ip = 0; state.ip < pLen; state.ip++) {
          if (exports2.DEBUG) {
            state.step++;
          }
          ins = instructionTable[prog[state.ip]];
          if (!ins) {
            throw new Error("unknown instruction: 0x" + Number(prog[state.ip]).toString(16));
          }
          ins(state);
        }
      };
      function initTZone(state) {
        var tZone = state.tZone = new Array(state.gZone.length);
        for (var i = 0; i < tZone.length; i++) {
          tZone[i] = new HPoint(0, 0);
        }
      }
      function skip(state, handleElse) {
        var prog = state.prog;
        var ip = state.ip;
        var nesting = 1;
        var ins;
        do {
          ins = prog[++ip];
          if (ins === 88) {
            nesting++;
          } else if (ins === 89) {
            nesting--;
          } else if (ins === 64) {
            ip += prog[ip + 1] + 1;
          } else if (ins === 65) {
            ip += 2 * prog[ip + 1] + 1;
          } else if (ins >= 176 && ins <= 183) {
            ip += ins - 176 + 1;
          } else if (ins >= 184 && ins <= 191) {
            ip += (ins - 184 + 1) * 2;
          } else if (handleElse && nesting === 1 && ins === 27) {
            break;
          }
        } while (nesting > 0);
        state.ip = ip;
      }
      function SVTCA(v, state) {
        if (exports2.DEBUG) {
          console.log(state.step, "SVTCA[" + v.axis + "]");
        }
        state.fv = state.pv = state.dpv = v;
      }
      function SPVTCA(v, state) {
        if (exports2.DEBUG) {
          console.log(state.step, "SPVTCA[" + v.axis + "]");
        }
        state.pv = state.dpv = v;
      }
      function SFVTCA(v, state) {
        if (exports2.DEBUG) {
          console.log(state.step, "SFVTCA[" + v.axis + "]");
        }
        state.fv = v;
      }
      function SPVTL(a, state) {
        var stack = state.stack;
        var p2i = stack.pop();
        var p1i = stack.pop();
        var p2 = state.z2[p2i];
        var p1 = state.z1[p1i];
        if (exports2.DEBUG) {
          console.log("SPVTL[" + a + "]", p2i, p1i);
        }
        var dx;
        var dy;
        if (!a) {
          dx = p1.x - p2.x;
          dy = p1.y - p2.y;
        } else {
          dx = p2.y - p1.y;
          dy = p1.x - p2.x;
        }
        state.pv = state.dpv = getUnitVector(dx, dy);
      }
      function SFVTL(a, state) {
        var stack = state.stack;
        var p2i = stack.pop();
        var p1i = stack.pop();
        var p2 = state.z2[p2i];
        var p1 = state.z1[p1i];
        if (exports2.DEBUG) {
          console.log("SFVTL[" + a + "]", p2i, p1i);
        }
        var dx;
        var dy;
        if (!a) {
          dx = p1.x - p2.x;
          dy = p1.y - p2.y;
        } else {
          dx = p2.y - p1.y;
          dy = p1.x - p2.x;
        }
        state.fv = getUnitVector(dx, dy);
      }
      function SPVFS(state) {
        var stack = state.stack;
        var y = stack.pop();
        var x = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SPVFS[]", y, x);
        }
        state.pv = state.dpv = getUnitVector(x, y);
      }
      function SFVFS(state) {
        var stack = state.stack;
        var y = stack.pop();
        var x = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SPVFS[]", y, x);
        }
        state.fv = getUnitVector(x, y);
      }
      function GPV(state) {
        var stack = state.stack;
        var pv = state.pv;
        if (exports2.DEBUG) {
          console.log(state.step, "GPV[]");
        }
        stack.push(pv.x * 16384);
        stack.push(pv.y * 16384);
      }
      function GFV(state) {
        var stack = state.stack;
        var fv = state.fv;
        if (exports2.DEBUG) {
          console.log(state.step, "GFV[]");
        }
        stack.push(fv.x * 16384);
        stack.push(fv.y * 16384);
      }
      function SFVTPV(state) {
        state.fv = state.pv;
        if (exports2.DEBUG) {
          console.log(state.step, "SFVTPV[]");
        }
      }
      function ISECT(state) {
        var stack = state.stack;
        var pa0i = stack.pop();
        var pa1i = stack.pop();
        var pb0i = stack.pop();
        var pb1i = stack.pop();
        var pi = stack.pop();
        var z0 = state.z0;
        var z1 = state.z1;
        var pa0 = z0[pa0i];
        var pa1 = z0[pa1i];
        var pb0 = z1[pb0i];
        var pb1 = z1[pb1i];
        var p = state.z2[pi];
        if (exports2.DEBUG) {
          console.log("ISECT[], ", pa0i, pa1i, pb0i, pb1i, pi);
        }
        var x1 = pa0.x;
        var y1 = pa0.y;
        var x2 = pa1.x;
        var y2 = pa1.y;
        var x3 = pb0.x;
        var y3 = pb0.y;
        var x4 = pb1.x;
        var y4 = pb1.y;
        var div = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);
        var f1 = x1 * y2 - y1 * x2;
        var f2 = x3 * y4 - y3 * x4;
        p.x = (f1 * (x3 - x4) - f2 * (x1 - x2)) / div;
        p.y = (f1 * (y3 - y4) - f2 * (y1 - y2)) / div;
      }
      function SRP0(state) {
        state.rp0 = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SRP0[]", state.rp0);
        }
      }
      function SRP1(state) {
        state.rp1 = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SRP1[]", state.rp1);
        }
      }
      function SRP2(state) {
        state.rp2 = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SRP2[]", state.rp2);
        }
      }
      function SZP0(state) {
        var n = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SZP0[]", n);
        }
        state.zp0 = n;
        switch (n) {
          case 0:
            if (!state.tZone) {
              initTZone(state);
            }
            state.z0 = state.tZone;
            break;
          case 1:
            state.z0 = state.gZone;
            break;
          default:
            throw new Error("Invalid zone pointer");
        }
      }
      function SZP1(state) {
        var n = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SZP1[]", n);
        }
        state.zp1 = n;
        switch (n) {
          case 0:
            if (!state.tZone) {
              initTZone(state);
            }
            state.z1 = state.tZone;
            break;
          case 1:
            state.z1 = state.gZone;
            break;
          default:
            throw new Error("Invalid zone pointer");
        }
      }
      function SZP2(state) {
        var n = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SZP2[]", n);
        }
        state.zp2 = n;
        switch (n) {
          case 0:
            if (!state.tZone) {
              initTZone(state);
            }
            state.z2 = state.tZone;
            break;
          case 1:
            state.z2 = state.gZone;
            break;
          default:
            throw new Error("Invalid zone pointer");
        }
      }
      function SZPS(state) {
        var n = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SZPS[]", n);
        }
        state.zp0 = state.zp1 = state.zp2 = n;
        switch (n) {
          case 0:
            if (!state.tZone) {
              initTZone(state);
            }
            state.z0 = state.z1 = state.z2 = state.tZone;
            break;
          case 1:
            state.z0 = state.z1 = state.z2 = state.gZone;
            break;
          default:
            throw new Error("Invalid zone pointer");
        }
      }
      function SLOOP(state) {
        state.loop = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SLOOP[]", state.loop);
        }
      }
      function RTG(state) {
        if (exports2.DEBUG) {
          console.log(state.step, "RTG[]");
        }
        state.round = roundToGrid;
      }
      function RTHG(state) {
        if (exports2.DEBUG) {
          console.log(state.step, "RTHG[]");
        }
        state.round = roundToHalfGrid;
      }
      function SMD(state) {
        var d = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SMD[]", d);
        }
        state.minDis = d / 64;
      }
      function ELSE(state) {
        if (exports2.DEBUG) {
          console.log(state.step, "ELSE[]");
        }
        skip(state, false);
      }
      function JMPR(state) {
        var o = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "JMPR[]", o);
        }
        state.ip += o - 1;
      }
      function SCVTCI(state) {
        var n = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SCVTCI[]", n);
        }
        state.cvCutIn = n / 64;
      }
      function DUP(state) {
        var stack = state.stack;
        if (exports2.DEBUG) {
          console.log(state.step, "DUP[]");
        }
        stack.push(stack[stack.length - 1]);
      }
      function POP(state) {
        if (exports2.DEBUG) {
          console.log(state.step, "POP[]");
        }
        state.stack.pop();
      }
      function CLEAR(state) {
        if (exports2.DEBUG) {
          console.log(state.step, "CLEAR[]");
        }
        state.stack.length = 0;
      }
      function SWAP(state) {
        var stack = state.stack;
        var a = stack.pop();
        var b = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SWAP[]");
        }
        stack.push(a);
        stack.push(b);
      }
      function DEPTH(state) {
        var stack = state.stack;
        if (exports2.DEBUG) {
          console.log(state.step, "DEPTH[]");
        }
        stack.push(stack.length);
      }
      function LOOPCALL(state) {
        var stack = state.stack;
        var fn = stack.pop();
        var c = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "LOOPCALL[]", fn, c);
        }
        var cip = state.ip;
        var cprog = state.prog;
        state.prog = state.funcs[fn];
        for (var i = 0; i < c; i++) {
          exec(state);
          if (exports2.DEBUG) {
            console.log(++state.step, i + 1 < c ? "next loopcall" : "done loopcall", i);
          }
        }
        state.ip = cip;
        state.prog = cprog;
      }
      function CALL(state) {
        var fn = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "CALL[]", fn);
        }
        var cip = state.ip;
        var cprog = state.prog;
        state.prog = state.funcs[fn];
        exec(state);
        state.ip = cip;
        state.prog = cprog;
        if (exports2.DEBUG) {
          console.log(++state.step, "returning from", fn);
        }
      }
      function CINDEX(state) {
        var stack = state.stack;
        var k = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "CINDEX[]", k);
        }
        stack.push(stack[stack.length - k]);
      }
      function MINDEX(state) {
        var stack = state.stack;
        var k = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "MINDEX[]", k);
        }
        stack.push(stack.splice(stack.length - k, 1)[0]);
      }
      function FDEF(state) {
        if (state.env !== "fpgm") {
          throw new Error("FDEF not allowed here");
        }
        var stack = state.stack;
        var prog = state.prog;
        var ip = state.ip;
        var fn = stack.pop();
        var ipBegin = ip;
        if (exports2.DEBUG) {
          console.log(state.step, "FDEF[]", fn);
        }
        while (prog[++ip] !== 45) {
        }
        state.ip = ip;
        state.funcs[fn] = prog.slice(ipBegin + 1, ip);
      }
      function MDAP(round, state) {
        var pi = state.stack.pop();
        var p = state.z0[pi];
        var fv = state.fv;
        var pv = state.pv;
        if (exports2.DEBUG) {
          console.log(state.step, "MDAP[" + round + "]", pi);
        }
        var d = pv.distance(p, HPZero);
        if (round) {
          d = state.round(d);
        }
        fv.setRelative(p, HPZero, d, pv);
        fv.touch(p);
        state.rp0 = state.rp1 = pi;
      }
      function IUP(v, state) {
        var z2 = state.z2;
        var pLen = z2.length - 2;
        var cp;
        var pp;
        var np;
        if (exports2.DEBUG) {
          console.log(state.step, "IUP[" + v.axis + "]");
        }
        for (var i = 0; i < pLen; i++) {
          cp = z2[i];
          if (v.touched(cp)) {
            continue;
          }
          pp = cp.prevTouched(v);
          if (pp === cp) {
            continue;
          }
          np = cp.nextTouched(v);
          if (pp === np) {
            v.setRelative(cp, cp, v.distance(pp, pp, false, true), v, true);
          }
          v.interpolate(cp, pp, np, v);
        }
      }
      function SHP(a, state) {
        var stack = state.stack;
        var rpi = a ? state.rp1 : state.rp2;
        var rp = (a ? state.z0 : state.z1)[rpi];
        var fv = state.fv;
        var pv = state.pv;
        var loop = state.loop;
        var z2 = state.z2;
        while (loop--) {
          var pi = stack.pop();
          var p = z2[pi];
          var d = pv.distance(rp, rp, false, true);
          fv.setRelative(p, p, d, pv);
          fv.touch(p);
          if (exports2.DEBUG) {
            console.log(state.step, (state.loop > 1 ? "loop " + (state.loop - loop) + ": " : "") + "SHP[" + (a ? "rp1" : "rp2") + "]", pi);
          }
        }
        state.loop = 1;
      }
      function SHC(a, state) {
        var stack = state.stack;
        var rpi = a ? state.rp1 : state.rp2;
        var rp = (a ? state.z0 : state.z1)[rpi];
        var fv = state.fv;
        var pv = state.pv;
        var ci = stack.pop();
        var sp = state.z2[state.contours[ci]];
        var p = sp;
        if (exports2.DEBUG) {
          console.log(state.step, "SHC[" + a + "]", ci);
        }
        var d = pv.distance(rp, rp, false, true);
        do {
          if (p !== rp) {
            fv.setRelative(p, p, d, pv);
          }
          p = p.nextPointOnContour;
        } while (p !== sp);
      }
      function SHZ(a, state) {
        var stack = state.stack;
        var rpi = a ? state.rp1 : state.rp2;
        var rp = (a ? state.z0 : state.z1)[rpi];
        var fv = state.fv;
        var pv = state.pv;
        var e = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SHZ[" + a + "]", e);
        }
        var z;
        switch (e) {
          case 0:
            z = state.tZone;
            break;
          case 1:
            z = state.gZone;
            break;
          default:
            throw new Error("Invalid zone");
        }
        var p;
        var d = pv.distance(rp, rp, false, true);
        var pLen = z.length - 2;
        for (var i = 0; i < pLen; i++) {
          p = z[i];
          fv.setRelative(p, p, d, pv);
        }
      }
      function SHPIX(state) {
        var stack = state.stack;
        var loop = state.loop;
        var fv = state.fv;
        var d = stack.pop() / 64;
        var z2 = state.z2;
        while (loop--) {
          var pi = stack.pop();
          var p = z2[pi];
          if (exports2.DEBUG) {
            console.log(state.step, (state.loop > 1 ? "loop " + (state.loop - loop) + ": " : "") + "SHPIX[]", pi, d);
          }
          fv.setRelative(p, p, d);
          fv.touch(p);
        }
        state.loop = 1;
      }
      function IP(state) {
        var stack = state.stack;
        var rp1i = state.rp1;
        var rp2i = state.rp2;
        var loop = state.loop;
        var rp1 = state.z0[rp1i];
        var rp2 = state.z1[rp2i];
        var fv = state.fv;
        var pv = state.dpv;
        var z2 = state.z2;
        while (loop--) {
          var pi = stack.pop();
          var p = z2[pi];
          if (exports2.DEBUG) {
            console.log(state.step, (state.loop > 1 ? "loop " + (state.loop - loop) + ": " : "") + "IP[]", pi, rp1i, "<->", rp2i);
          }
          fv.interpolate(p, rp1, rp2, pv);
          fv.touch(p);
        }
        state.loop = 1;
      }
      function MSIRP(a, state) {
        var stack = state.stack;
        var d = stack.pop() / 64;
        var pi = stack.pop();
        var p = state.z1[pi];
        var rp0 = state.z0[state.rp0];
        var fv = state.fv;
        var pv = state.pv;
        fv.setRelative(p, rp0, d, pv);
        fv.touch(p);
        if (exports2.DEBUG) {
          console.log(state.step, "MSIRP[" + a + "]", d, pi);
        }
        state.rp1 = state.rp0;
        state.rp2 = pi;
        if (a) {
          state.rp0 = pi;
        }
      }
      function ALIGNRP(state) {
        var stack = state.stack;
        var rp0i = state.rp0;
        var rp0 = state.z0[rp0i];
        var loop = state.loop;
        var fv = state.fv;
        var pv = state.pv;
        var z1 = state.z1;
        while (loop--) {
          var pi = stack.pop();
          var p = z1[pi];
          if (exports2.DEBUG) {
            console.log(state.step, (state.loop > 1 ? "loop " + (state.loop - loop) + ": " : "") + "ALIGNRP[]", pi);
          }
          fv.setRelative(p, rp0, 0, pv);
          fv.touch(p);
        }
        state.loop = 1;
      }
      function RTDG(state) {
        if (exports2.DEBUG) {
          console.log(state.step, "RTDG[]");
        }
        state.round = roundToDoubleGrid;
      }
      function MIAP(round, state) {
        var stack = state.stack;
        var n = stack.pop();
        var pi = stack.pop();
        var p = state.z0[pi];
        var fv = state.fv;
        var pv = state.pv;
        var cv = state.cvt[n];
        if (exports2.DEBUG) {
          console.log(state.step, "MIAP[" + round + "]", n, "(", cv, ")", pi);
        }
        var d = pv.distance(p, HPZero);
        if (round) {
          if (Math.abs(d - cv) < state.cvCutIn) {
            d = cv;
          }
          d = state.round(d);
        }
        fv.setRelative(p, HPZero, d, pv);
        if (state.zp0 === 0) {
          p.xo = p.x;
          p.yo = p.y;
        }
        fv.touch(p);
        state.rp0 = state.rp1 = pi;
      }
      function NPUSHB(state) {
        var prog = state.prog;
        var ip = state.ip;
        var stack = state.stack;
        var n = prog[++ip];
        if (exports2.DEBUG) {
          console.log(state.step, "NPUSHB[]", n);
        }
        for (var i = 0; i < n; i++) {
          stack.push(prog[++ip]);
        }
        state.ip = ip;
      }
      function NPUSHW(state) {
        var ip = state.ip;
        var prog = state.prog;
        var stack = state.stack;
        var n = prog[++ip];
        if (exports2.DEBUG) {
          console.log(state.step, "NPUSHW[]", n);
        }
        for (var i = 0; i < n; i++) {
          var w = prog[++ip] << 8 | prog[++ip];
          if (w & 32768) {
            w = -((w ^ 65535) + 1);
          }
          stack.push(w);
        }
        state.ip = ip;
      }
      function WS(state) {
        var stack = state.stack;
        var store = state.store;
        if (!store) {
          store = state.store = [];
        }
        var v = stack.pop();
        var l = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "WS", v, l);
        }
        store[l] = v;
      }
      function RS(state) {
        var stack = state.stack;
        var store = state.store;
        var l = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "RS", l);
        }
        var v = store && store[l] || 0;
        stack.push(v);
      }
      function WCVTP(state) {
        var stack = state.stack;
        var v = stack.pop();
        var l = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "WCVTP", v, l);
        }
        state.cvt[l] = v / 64;
      }
      function RCVT(state) {
        var stack = state.stack;
        var cvte = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "RCVT", cvte);
        }
        stack.push(state.cvt[cvte] * 64);
      }
      function GC(a, state) {
        var stack = state.stack;
        var pi = stack.pop();
        var p = state.z2[pi];
        if (exports2.DEBUG) {
          console.log(state.step, "GC[" + a + "]", pi);
        }
        stack.push(state.dpv.distance(p, HPZero, a, false) * 64);
      }
      function MD(a, state) {
        var stack = state.stack;
        var pi2 = stack.pop();
        var pi1 = stack.pop();
        var p2 = state.z1[pi2];
        var p1 = state.z0[pi1];
        var d = state.dpv.distance(p1, p2, a, a);
        if (exports2.DEBUG) {
          console.log(state.step, "MD[" + a + "]", pi2, pi1, "->", d);
        }
        state.stack.push(Math.round(d * 64));
      }
      function MPPEM(state) {
        if (exports2.DEBUG) {
          console.log(state.step, "MPPEM[]");
        }
        state.stack.push(state.ppem);
      }
      function FLIPON(state) {
        if (exports2.DEBUG) {
          console.log(state.step, "FLIPON[]");
        }
        state.autoFlip = true;
      }
      function LT(state) {
        var stack = state.stack;
        var e2 = stack.pop();
        var e1 = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "LT[]", e2, e1);
        }
        stack.push(e1 < e2 ? 1 : 0);
      }
      function LTEQ(state) {
        var stack = state.stack;
        var e2 = stack.pop();
        var e1 = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "LTEQ[]", e2, e1);
        }
        stack.push(e1 <= e2 ? 1 : 0);
      }
      function GT(state) {
        var stack = state.stack;
        var e2 = stack.pop();
        var e1 = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "GT[]", e2, e1);
        }
        stack.push(e1 > e2 ? 1 : 0);
      }
      function GTEQ(state) {
        var stack = state.stack;
        var e2 = stack.pop();
        var e1 = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "GTEQ[]", e2, e1);
        }
        stack.push(e1 >= e2 ? 1 : 0);
      }
      function EQ(state) {
        var stack = state.stack;
        var e2 = stack.pop();
        var e1 = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "EQ[]", e2, e1);
        }
        stack.push(e2 === e1 ? 1 : 0);
      }
      function NEQ(state) {
        var stack = state.stack;
        var e2 = stack.pop();
        var e1 = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "NEQ[]", e2, e1);
        }
        stack.push(e2 !== e1 ? 1 : 0);
      }
      function ODD(state) {
        var stack = state.stack;
        var n = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "ODD[]", n);
        }
        stack.push(Math.trunc(n) % 2 ? 1 : 0);
      }
      function EVEN(state) {
        var stack = state.stack;
        var n = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "EVEN[]", n);
        }
        stack.push(Math.trunc(n) % 2 ? 0 : 1);
      }
      function IF(state) {
        var test = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "IF[]", test);
        }
        if (!test) {
          skip(state, true);
          if (exports2.DEBUG) {
            console.log(state.step, "EIF[]");
          }
        }
      }
      function EIF(state) {
        if (exports2.DEBUG) {
          console.log(state.step, "EIF[]");
        }
      }
      function AND(state) {
        var stack = state.stack;
        var e2 = stack.pop();
        var e1 = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "AND[]", e2, e1);
        }
        stack.push(e2 && e1 ? 1 : 0);
      }
      function OR(state) {
        var stack = state.stack;
        var e2 = stack.pop();
        var e1 = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "OR[]", e2, e1);
        }
        stack.push(e2 || e1 ? 1 : 0);
      }
      function NOT(state) {
        var stack = state.stack;
        var e = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "NOT[]", e);
        }
        stack.push(e ? 0 : 1);
      }
      function DELTAP123(b, state) {
        var stack = state.stack;
        var n = stack.pop();
        var fv = state.fv;
        var pv = state.pv;
        var ppem = state.ppem;
        var base = state.deltaBase + (b - 1) * 16;
        var ds = state.deltaShift;
        var z0 = state.z0;
        if (exports2.DEBUG) {
          console.log(state.step, "DELTAP[" + b + "]", n, stack);
        }
        for (var i = 0; i < n; i++) {
          var pi = stack.pop();
          var arg = stack.pop();
          var appem = base + ((arg & 240) >> 4);
          if (appem !== ppem) {
            continue;
          }
          var mag = (arg & 15) - 8;
          if (mag >= 0) {
            mag++;
          }
          if (exports2.DEBUG) {
            console.log(state.step, "DELTAPFIX", pi, "by", mag * ds);
          }
          var p = z0[pi];
          fv.setRelative(p, p, mag * ds, pv);
        }
      }
      function SDB(state) {
        var stack = state.stack;
        var n = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SDB[]", n);
        }
        state.deltaBase = n;
      }
      function SDS(state) {
        var stack = state.stack;
        var n = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SDS[]", n);
        }
        state.deltaShift = Math.pow(0.5, n);
      }
      function ADD(state) {
        var stack = state.stack;
        var n2 = stack.pop();
        var n1 = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "ADD[]", n2, n1);
        }
        stack.push(n1 + n2);
      }
      function SUB(state) {
        var stack = state.stack;
        var n2 = stack.pop();
        var n1 = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SUB[]", n2, n1);
        }
        stack.push(n1 - n2);
      }
      function DIV(state) {
        var stack = state.stack;
        var n2 = stack.pop();
        var n1 = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "DIV[]", n2, n1);
        }
        stack.push(n1 * 64 / n2);
      }
      function MUL(state) {
        var stack = state.stack;
        var n2 = stack.pop();
        var n1 = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "MUL[]", n2, n1);
        }
        stack.push(n1 * n2 / 64);
      }
      function ABS(state) {
        var stack = state.stack;
        var n = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "ABS[]", n);
        }
        stack.push(Math.abs(n));
      }
      function NEG(state) {
        var stack = state.stack;
        var n = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "NEG[]", n);
        }
        stack.push(-n);
      }
      function FLOOR(state) {
        var stack = state.stack;
        var n = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "FLOOR[]", n);
        }
        stack.push(Math.floor(n / 64) * 64);
      }
      function CEILING(state) {
        var stack = state.stack;
        var n = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "CEILING[]", n);
        }
        stack.push(Math.ceil(n / 64) * 64);
      }
      function ROUND(dt, state) {
        var stack = state.stack;
        var n = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "ROUND[]");
        }
        stack.push(state.round(n / 64) * 64);
      }
      function WCVTF(state) {
        var stack = state.stack;
        var v = stack.pop();
        var l = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "WCVTF[]", v, l);
        }
        state.cvt[l] = v * state.ppem / state.font.unitsPerEm;
      }
      function DELTAC123(b, state) {
        var stack = state.stack;
        var n = stack.pop();
        var ppem = state.ppem;
        var base = state.deltaBase + (b - 1) * 16;
        var ds = state.deltaShift;
        if (exports2.DEBUG) {
          console.log(state.step, "DELTAC[" + b + "]", n, stack);
        }
        for (var i = 0; i < n; i++) {
          var c = stack.pop();
          var arg = stack.pop();
          var appem = base + ((arg & 240) >> 4);
          if (appem !== ppem) {
            continue;
          }
          var mag = (arg & 15) - 8;
          if (mag >= 0) {
            mag++;
          }
          var delta = mag * ds;
          if (exports2.DEBUG) {
            console.log(state.step, "DELTACFIX", c, "by", delta);
          }
          state.cvt[c] += delta;
        }
      }
      function SROUND(state) {
        var n = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SROUND[]", n);
        }
        state.round = roundSuper;
        var period;
        switch (n & 192) {
          case 0:
            period = 0.5;
            break;
          case 64:
            period = 1;
            break;
          case 128:
            period = 2;
            break;
          default:
            throw new Error("invalid SROUND value");
        }
        state.srPeriod = period;
        switch (n & 48) {
          case 0:
            state.srPhase = 0;
            break;
          case 16:
            state.srPhase = 0.25 * period;
            break;
          case 32:
            state.srPhase = 0.5 * period;
            break;
          case 48:
            state.srPhase = 0.75 * period;
            break;
          default:
            throw new Error("invalid SROUND value");
        }
        n &= 15;
        if (n === 0) {
          state.srThreshold = 0;
        } else {
          state.srThreshold = (n / 8 - 0.5) * period;
        }
      }
      function S45ROUND(state) {
        var n = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "S45ROUND[]", n);
        }
        state.round = roundSuper;
        var period;
        switch (n & 192) {
          case 0:
            period = Math.sqrt(2) / 2;
            break;
          case 64:
            period = Math.sqrt(2);
            break;
          case 128:
            period = 2 * Math.sqrt(2);
            break;
          default:
            throw new Error("invalid S45ROUND value");
        }
        state.srPeriod = period;
        switch (n & 48) {
          case 0:
            state.srPhase = 0;
            break;
          case 16:
            state.srPhase = 0.25 * period;
            break;
          case 32:
            state.srPhase = 0.5 * period;
            break;
          case 48:
            state.srPhase = 0.75 * period;
            break;
          default:
            throw new Error("invalid S45ROUND value");
        }
        n &= 15;
        if (n === 0) {
          state.srThreshold = 0;
        } else {
          state.srThreshold = (n / 8 - 0.5) * period;
        }
      }
      function ROFF(state) {
        if (exports2.DEBUG) {
          console.log(state.step, "ROFF[]");
        }
        state.round = roundOff;
      }
      function RUTG(state) {
        if (exports2.DEBUG) {
          console.log(state.step, "RUTG[]");
        }
        state.round = roundUpToGrid;
      }
      function RDTG(state) {
        if (exports2.DEBUG) {
          console.log(state.step, "RDTG[]");
        }
        state.round = roundDownToGrid;
      }
      function SCANCTRL(state) {
        var n = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SCANCTRL[]", n);
        }
      }
      function SDPVTL(a, state) {
        var stack = state.stack;
        var p2i = stack.pop();
        var p1i = stack.pop();
        var p2 = state.z2[p2i];
        var p1 = state.z1[p1i];
        if (exports2.DEBUG) {
          console.log(state.step, "SDPVTL[" + a + "]", p2i, p1i);
        }
        var dx;
        var dy;
        if (!a) {
          dx = p1.x - p2.x;
          dy = p1.y - p2.y;
        } else {
          dx = p2.y - p1.y;
          dy = p1.x - p2.x;
        }
        state.dpv = getUnitVector(dx, dy);
      }
      function GETINFO(state) {
        var stack = state.stack;
        var sel = stack.pop();
        var r = 0;
        if (exports2.DEBUG) {
          console.log(state.step, "GETINFO[]", sel);
        }
        if (sel & 1) {
          r = 35;
        }
        if (sel & 32) {
          r |= 4096;
        }
        stack.push(r);
      }
      function ROLL(state) {
        var stack = state.stack;
        var a = stack.pop();
        var b = stack.pop();
        var c = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "ROLL[]");
        }
        stack.push(b);
        stack.push(a);
        stack.push(c);
      }
      function MAX(state) {
        var stack = state.stack;
        var e2 = stack.pop();
        var e1 = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "MAX[]", e2, e1);
        }
        stack.push(Math.max(e1, e2));
      }
      function MIN(state) {
        var stack = state.stack;
        var e2 = stack.pop();
        var e1 = stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "MIN[]", e2, e1);
        }
        stack.push(Math.min(e1, e2));
      }
      function SCANTYPE(state) {
        var n = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "SCANTYPE[]", n);
        }
      }
      function INSTCTRL(state) {
        var s = state.stack.pop();
        var v = state.stack.pop();
        if (exports2.DEBUG) {
          console.log(state.step, "INSTCTRL[]", s, v);
        }
        switch (s) {
          case 1:
            state.inhibitGridFit = !!v;
            return;
          case 2:
            state.ignoreCvt = !!v;
            return;
          default:
            throw new Error("invalid INSTCTRL[] selector");
        }
      }
      function PUSHB(n, state) {
        var stack = state.stack;
        var prog = state.prog;
        var ip = state.ip;
        if (exports2.DEBUG) {
          console.log(state.step, "PUSHB[" + n + "]");
        }
        for (var i = 0; i < n; i++) {
          stack.push(prog[++ip]);
        }
        state.ip = ip;
      }
      function PUSHW(n, state) {
        var ip = state.ip;
        var prog = state.prog;
        var stack = state.stack;
        if (exports2.DEBUG) {
          console.log(state.ip, "PUSHW[" + n + "]");
        }
        for (var i = 0; i < n; i++) {
          var w = prog[++ip] << 8 | prog[++ip];
          if (w & 32768) {
            w = -((w ^ 65535) + 1);
          }
          stack.push(w);
        }
        state.ip = ip;
      }
      function MDRP_MIRP(indirect, setRp0, keepD, ro, dt, state) {
        var stack = state.stack;
        var cvte = indirect && stack.pop();
        var pi = stack.pop();
        var rp0i = state.rp0;
        var rp = state.z0[rp0i];
        var p = state.z1[pi];
        var md = state.minDis;
        var fv = state.fv;
        var pv = state.dpv;
        var od;
        var d;
        var sign;
        var cv;
        d = od = pv.distance(p, rp, true, true);
        sign = d >= 0 ? 1 : -1;
        d = Math.abs(d);
        if (indirect) {
          cv = state.cvt[cvte];
          if (ro && Math.abs(d - cv) < state.cvCutIn) {
            d = cv;
          }
        }
        if (keepD && d < md) {
          d = md;
        }
        if (ro) {
          d = state.round(d);
        }
        fv.setRelative(p, rp, sign * d, pv);
        fv.touch(p);
        if (exports2.DEBUG) {
          console.log(state.step, (indirect ? "MIRP[" : "MDRP[") + (setRp0 ? "M" : "m") + (keepD ? ">" : "_") + (ro ? "R" : "_") + (dt === 0 ? "Gr" : dt === 1 ? "Bl" : dt === 2 ? "Wh" : "") + "]", indirect ? cvte + "(" + state.cvt[cvte] + "," + cv + ")" : "", pi, "(d =", od, "->", sign * d, ")");
        }
        state.rp1 = state.rp0;
        state.rp2 = pi;
        if (setRp0) {
          state.rp0 = pi;
        }
      }
      instructionTable = [
        SVTCA.bind(void 0, yUnitVector),
        SVTCA.bind(void 0, xUnitVector),
        SPVTCA.bind(void 0, yUnitVector),
        SPVTCA.bind(void 0, xUnitVector),
        SFVTCA.bind(void 0, yUnitVector),
        SFVTCA.bind(void 0, xUnitVector),
        SPVTL.bind(void 0, 0),
        SPVTL.bind(void 0, 1),
        SFVTL.bind(void 0, 0),
        SFVTL.bind(void 0, 1),
        SPVFS,
        SFVFS,
        GPV,
        GFV,
        SFVTPV,
        ISECT,
        SRP0,
        SRP1,
        SRP2,
        SZP0,
        SZP1,
        SZP2,
        SZPS,
        SLOOP,
        RTG,
        RTHG,
        SMD,
        ELSE,
        JMPR,
        SCVTCI,
        void 0,
        void 0,
        DUP,
        POP,
        CLEAR,
        SWAP,
        DEPTH,
        CINDEX,
        MINDEX,
        void 0,
        void 0,
        void 0,
        LOOPCALL,
        CALL,
        FDEF,
        void 0,
        MDAP.bind(void 0, 0),
        MDAP.bind(void 0, 1),
        IUP.bind(void 0, yUnitVector),
        IUP.bind(void 0, xUnitVector),
        SHP.bind(void 0, 0),
        SHP.bind(void 0, 1),
        SHC.bind(void 0, 0),
        SHC.bind(void 0, 1),
        SHZ.bind(void 0, 0),
        SHZ.bind(void 0, 1),
        SHPIX,
        IP,
        MSIRP.bind(void 0, 0),
        MSIRP.bind(void 0, 1),
        ALIGNRP,
        RTDG,
        MIAP.bind(void 0, 0),
        MIAP.bind(void 0, 1),
        NPUSHB,
        NPUSHW,
        WS,
        RS,
        WCVTP,
        RCVT,
        GC.bind(void 0, 0),
        GC.bind(void 0, 1),
        void 0,
        MD.bind(void 0, 0),
        MD.bind(void 0, 1),
        MPPEM,
        void 0,
        FLIPON,
        void 0,
        void 0,
        LT,
        LTEQ,
        GT,
        GTEQ,
        EQ,
        NEQ,
        ODD,
        EVEN,
        IF,
        EIF,
        AND,
        OR,
        NOT,
        DELTAP123.bind(void 0, 1),
        SDB,
        SDS,
        ADD,
        SUB,
        DIV,
        MUL,
        ABS,
        NEG,
        FLOOR,
        CEILING,
        ROUND.bind(void 0, 0),
        ROUND.bind(void 0, 1),
        ROUND.bind(void 0, 2),
        ROUND.bind(void 0, 3),
        void 0,
        void 0,
        void 0,
        void 0,
        WCVTF,
        DELTAP123.bind(void 0, 2),
        DELTAP123.bind(void 0, 3),
        DELTAC123.bind(void 0, 1),
        DELTAC123.bind(void 0, 2),
        DELTAC123.bind(void 0, 3),
        SROUND,
        S45ROUND,
        void 0,
        void 0,
        ROFF,
        void 0,
        RUTG,
        RDTG,
        POP,
        POP,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        SCANCTRL,
        SDPVTL.bind(void 0, 0),
        SDPVTL.bind(void 0, 1),
        GETINFO,
        void 0,
        ROLL,
        MAX,
        MIN,
        SCANTYPE,
        INSTCTRL,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        void 0,
        PUSHB.bind(void 0, 1),
        PUSHB.bind(void 0, 2),
        PUSHB.bind(void 0, 3),
        PUSHB.bind(void 0, 4),
        PUSHB.bind(void 0, 5),
        PUSHB.bind(void 0, 6),
        PUSHB.bind(void 0, 7),
        PUSHB.bind(void 0, 8),
        PUSHW.bind(void 0, 1),
        PUSHW.bind(void 0, 2),
        PUSHW.bind(void 0, 3),
        PUSHW.bind(void 0, 4),
        PUSHW.bind(void 0, 5),
        PUSHW.bind(void 0, 6),
        PUSHW.bind(void 0, 7),
        PUSHW.bind(void 0, 8),
        MDRP_MIRP.bind(void 0, 0, 0, 0, 0, 0),
        MDRP_MIRP.bind(void 0, 0, 0, 0, 0, 1),
        MDRP_MIRP.bind(void 0, 0, 0, 0, 0, 2),
        MDRP_MIRP.bind(void 0, 0, 0, 0, 0, 3),
        MDRP_MIRP.bind(void 0, 0, 0, 0, 1, 0),
        MDRP_MIRP.bind(void 0, 0, 0, 0, 1, 1),
        MDRP_MIRP.bind(void 0, 0, 0, 0, 1, 2),
        MDRP_MIRP.bind(void 0, 0, 0, 0, 1, 3),
        MDRP_MIRP.bind(void 0, 0, 0, 1, 0, 0),
        MDRP_MIRP.bind(void 0, 0, 0, 1, 0, 1),
        MDRP_MIRP.bind(void 0, 0, 0, 1, 0, 2),
        MDRP_MIRP.bind(void 0, 0, 0, 1, 0, 3),
        MDRP_MIRP.bind(void 0, 0, 0, 1, 1, 0),
        MDRP_MIRP.bind(void 0, 0, 0, 1, 1, 1),
        MDRP_MIRP.bind(void 0, 0, 0, 1, 1, 2),
        MDRP_MIRP.bind(void 0, 0, 0, 1, 1, 3),
        MDRP_MIRP.bind(void 0, 0, 1, 0, 0, 0),
        MDRP_MIRP.bind(void 0, 0, 1, 0, 0, 1),
        MDRP_MIRP.bind(void 0, 0, 1, 0, 0, 2),
        MDRP_MIRP.bind(void 0, 0, 1, 0, 0, 3),
        MDRP_MIRP.bind(void 0, 0, 1, 0, 1, 0),
        MDRP_MIRP.bind(void 0, 0, 1, 0, 1, 1),
        MDRP_MIRP.bind(void 0, 0, 1, 0, 1, 2),
        MDRP_MIRP.bind(void 0, 0, 1, 0, 1, 3),
        MDRP_MIRP.bind(void 0, 0, 1, 1, 0, 0),
        MDRP_MIRP.bind(void 0, 0, 1, 1, 0, 1),
        MDRP_MIRP.bind(void 0, 0, 1, 1, 0, 2),
        MDRP_MIRP.bind(void 0, 0, 1, 1, 0, 3),
        MDRP_MIRP.bind(void 0, 0, 1, 1, 1, 0),
        MDRP_MIRP.bind(void 0, 0, 1, 1, 1, 1),
        MDRP_MIRP.bind(void 0, 0, 1, 1, 1, 2),
        MDRP_MIRP.bind(void 0, 0, 1, 1, 1, 3),
        MDRP_MIRP.bind(void 0, 1, 0, 0, 0, 0),
        MDRP_MIRP.bind(void 0, 1, 0, 0, 0, 1),
        MDRP_MIRP.bind(void 0, 1, 0, 0, 0, 2),
        MDRP_MIRP.bind(void 0, 1, 0, 0, 0, 3),
        MDRP_MIRP.bind(void 0, 1, 0, 0, 1, 0),
        MDRP_MIRP.bind(void 0, 1, 0, 0, 1, 1),
        MDRP_MIRP.bind(void 0, 1, 0, 0, 1, 2),
        MDRP_MIRP.bind(void 0, 1, 0, 0, 1, 3),
        MDRP_MIRP.bind(void 0, 1, 0, 1, 0, 0),
        MDRP_MIRP.bind(void 0, 1, 0, 1, 0, 1),
        MDRP_MIRP.bind(void 0, 1, 0, 1, 0, 2),
        MDRP_MIRP.bind(void 0, 1, 0, 1, 0, 3),
        MDRP_MIRP.bind(void 0, 1, 0, 1, 1, 0),
        MDRP_MIRP.bind(void 0, 1, 0, 1, 1, 1),
        MDRP_MIRP.bind(void 0, 1, 0, 1, 1, 2),
        MDRP_MIRP.bind(void 0, 1, 0, 1, 1, 3),
        MDRP_MIRP.bind(void 0, 1, 1, 0, 0, 0),
        MDRP_MIRP.bind(void 0, 1, 1, 0, 0, 1),
        MDRP_MIRP.bind(void 0, 1, 1, 0, 0, 2),
        MDRP_MIRP.bind(void 0, 1, 1, 0, 0, 3),
        MDRP_MIRP.bind(void 0, 1, 1, 0, 1, 0),
        MDRP_MIRP.bind(void 0, 1, 1, 0, 1, 1),
        MDRP_MIRP.bind(void 0, 1, 1, 0, 1, 2),
        MDRP_MIRP.bind(void 0, 1, 1, 0, 1, 3),
        MDRP_MIRP.bind(void 0, 1, 1, 1, 0, 0),
        MDRP_MIRP.bind(void 0, 1, 1, 1, 0, 1),
        MDRP_MIRP.bind(void 0, 1, 1, 1, 0, 2),
        MDRP_MIRP.bind(void 0, 1, 1, 1, 0, 3),
        MDRP_MIRP.bind(void 0, 1, 1, 1, 1, 0),
        MDRP_MIRP.bind(void 0, 1, 1, 1, 1, 1),
        MDRP_MIRP.bind(void 0, 1, 1, 1, 1, 2),
        MDRP_MIRP.bind(void 0, 1, 1, 1, 1, 3)
      ];
      function Token(char) {
        this.char = char;
        this.state = {};
        this.activeState = null;
      }
      function ContextRange(startIndex, endOffset, contextName) {
        this.contextName = contextName;
        this.startIndex = startIndex;
        this.endOffset = endOffset;
      }
      function ContextChecker(contextName, checkStart, checkEnd) {
        this.contextName = contextName;
        this.openRange = null;
        this.ranges = [];
        this.checkStart = checkStart;
        this.checkEnd = checkEnd;
      }
      function ContextParams(context, currentIndex) {
        this.context = context;
        this.index = currentIndex;
        this.length = context.length;
        this.current = context[currentIndex];
        this.backtrack = context.slice(0, currentIndex);
        this.lookahead = context.slice(currentIndex + 1);
      }
      function Event(eventId) {
        this.eventId = eventId;
        this.subscribers = [];
      }
      function initializeCoreEvents(events) {
        var this$1 = this;
        var coreEvents = [
          "start",
          "end",
          "next",
          "newToken",
          "contextStart",
          "contextEnd",
          "insertToken",
          "removeToken",
          "removeRange",
          "replaceToken",
          "replaceRange",
          "composeRUD",
          "updateContextsRanges"
        ];
        coreEvents.forEach(function(eventId) {
          Object.defineProperty(this$1.events, eventId, {
            value: new Event(eventId)
          });
        });
        if (!!events) {
          coreEvents.forEach(function(eventId) {
            var event = events[eventId];
            if (typeof event === "function") {
              this$1.events[eventId].subscribe(event);
            }
          });
        }
        var requiresContextUpdate = [
          "insertToken",
          "removeToken",
          "removeRange",
          "replaceToken",
          "replaceRange",
          "composeRUD"
        ];
        requiresContextUpdate.forEach(function(eventId) {
          this$1.events[eventId].subscribe(this$1.updateContextsRanges);
        });
      }
      function Tokenizer(events) {
        this.tokens = [];
        this.registeredContexts = {};
        this.contextCheckers = [];
        this.events = {};
        this.registeredModifiers = [];
        initializeCoreEvents.call(this, events);
      }
      Token.prototype.setState = function(key, value) {
        this.state[key] = value;
        this.activeState = {key, value: this.state[key]};
        return this.activeState;
      };
      Token.prototype.getState = function(stateId) {
        return this.state[stateId] || null;
      };
      Tokenizer.prototype.inboundIndex = function(index) {
        return index >= 0 && index < this.tokens.length;
      };
      Tokenizer.prototype.composeRUD = function(RUDs) {
        var this$1 = this;
        var silent = true;
        var state = RUDs.map(function(RUD) {
          return this$1[RUD[0]].apply(this$1, RUD.slice(1).concat(silent));
        });
        var hasFAILObject = function(obj) {
          return typeof obj === "object" && obj.hasOwnProperty("FAIL");
        };
        if (state.every(hasFAILObject)) {
          return {
            FAIL: "composeRUD: one or more operations hasn't completed successfully",
            report: state.filter(hasFAILObject)
          };
        }
        this.dispatch("composeRUD", [state.filter(function(op) {
          return !hasFAILObject(op);
        })]);
      };
      Tokenizer.prototype.replaceRange = function(startIndex, offset, tokens, silent) {
        offset = offset !== null ? offset : this.tokens.length;
        var isTokenType = tokens.every(function(token) {
          return token instanceof Token;
        });
        if (!isNaN(startIndex) && this.inboundIndex(startIndex) && isTokenType) {
          var replaced = this.tokens.splice.apply(this.tokens, [startIndex, offset].concat(tokens));
          if (!silent) {
            this.dispatch("replaceToken", [startIndex, offset, tokens]);
          }
          return [replaced, tokens];
        } else {
          return {FAIL: "replaceRange: invalid tokens or startIndex."};
        }
      };
      Tokenizer.prototype.replaceToken = function(index, token, silent) {
        if (!isNaN(index) && this.inboundIndex(index) && token instanceof Token) {
          var replaced = this.tokens.splice(index, 1, token);
          if (!silent) {
            this.dispatch("replaceToken", [index, token]);
          }
          return [replaced[0], token];
        } else {
          return {FAIL: "replaceToken: invalid token or index."};
        }
      };
      Tokenizer.prototype.removeRange = function(startIndex, offset, silent) {
        offset = !isNaN(offset) ? offset : this.tokens.length;
        var tokens = this.tokens.splice(startIndex, offset);
        if (!silent) {
          this.dispatch("removeRange", [tokens, startIndex, offset]);
        }
        return tokens;
      };
      Tokenizer.prototype.removeToken = function(index, silent) {
        if (!isNaN(index) && this.inboundIndex(index)) {
          var token = this.tokens.splice(index, 1);
          if (!silent) {
            this.dispatch("removeToken", [token, index]);
          }
          return token;
        } else {
          return {FAIL: "removeToken: invalid token index."};
        }
      };
      Tokenizer.prototype.insertToken = function(tokens, index, silent) {
        var tokenType = tokens.every(function(token) {
          return token instanceof Token;
        });
        if (tokenType) {
          this.tokens.splice.apply(this.tokens, [index, 0].concat(tokens));
          if (!silent) {
            this.dispatch("insertToken", [tokens, index]);
          }
          return tokens;
        } else {
          return {FAIL: "insertToken: invalid token(s)."};
        }
      };
      Tokenizer.prototype.registerModifier = function(modifierId, condition, modifier) {
        this.events.newToken.subscribe(function(token, contextParams) {
          var conditionParams = [token, contextParams];
          var canApplyModifier = condition === null || condition.apply(this, conditionParams) === true;
          var modifierParams = [token, contextParams];
          if (canApplyModifier) {
            var newStateValue = modifier.apply(this, modifierParams);
            token.setState(modifierId, newStateValue);
          }
        });
        this.registeredModifiers.push(modifierId);
      };
      Event.prototype.subscribe = function(eventHandler) {
        if (typeof eventHandler === "function") {
          return this.subscribers.push(eventHandler) - 1;
        } else {
          return {FAIL: "invalid '" + this.eventId + "' event handler"};
        }
      };
      Event.prototype.unsubscribe = function(subsId) {
        this.subscribers.splice(subsId, 1);
      };
      ContextParams.prototype.setCurrentIndex = function(index) {
        this.index = index;
        this.current = this.context[index];
        this.backtrack = this.context.slice(0, index);
        this.lookahead = this.context.slice(index + 1);
      };
      ContextParams.prototype.get = function(offset) {
        switch (true) {
          case offset === 0:
            return this.current;
          case (offset < 0 && Math.abs(offset) <= this.backtrack.length):
            return this.backtrack.slice(offset)[0];
          case (offset > 0 && offset <= this.lookahead.length):
            return this.lookahead[offset - 1];
          default:
            return null;
        }
      };
      Tokenizer.prototype.rangeToText = function(range) {
        if (range instanceof ContextRange) {
          return this.getRangeTokens(range).map(function(token) {
            return token.char;
          }).join("");
        }
      };
      Tokenizer.prototype.getText = function() {
        return this.tokens.map(function(token) {
          return token.char;
        }).join("");
      };
      Tokenizer.prototype.getContext = function(contextName) {
        var context = this.registeredContexts[contextName];
        return !!context ? context : null;
      };
      Tokenizer.prototype.on = function(eventName, eventHandler) {
        var event = this.events[eventName];
        if (!!event) {
          return event.subscribe(eventHandler);
        } else {
          return null;
        }
      };
      Tokenizer.prototype.dispatch = function(eventName, args) {
        var this$1 = this;
        var event = this.events[eventName];
        if (event instanceof Event) {
          event.subscribers.forEach(function(subscriber) {
            subscriber.apply(this$1, args || []);
          });
        }
      };
      Tokenizer.prototype.registerContextChecker = function(contextName, contextStartCheck, contextEndCheck) {
        if (!!this.getContext(contextName)) {
          return {
            FAIL: "context name '" + contextName + "' is already registered."
          };
        }
        if (typeof contextStartCheck !== "function") {
          return {
            FAIL: "missing context start check."
          };
        }
        if (typeof contextEndCheck !== "function") {
          return {
            FAIL: "missing context end check."
          };
        }
        var contextCheckers = new ContextChecker(contextName, contextStartCheck, contextEndCheck);
        this.registeredContexts[contextName] = contextCheckers;
        this.contextCheckers.push(contextCheckers);
        return contextCheckers;
      };
      Tokenizer.prototype.getRangeTokens = function(range) {
        var endIndex = range.startIndex + range.endOffset;
        return [].concat(this.tokens.slice(range.startIndex, endIndex));
      };
      Tokenizer.prototype.getContextRanges = function(contextName) {
        var context = this.getContext(contextName);
        if (!!context) {
          return context.ranges;
        } else {
          return {FAIL: "context checker '" + contextName + "' is not registered."};
        }
      };
      Tokenizer.prototype.resetContextsRanges = function() {
        var registeredContexts = this.registeredContexts;
        for (var contextName in registeredContexts) {
          if (registeredContexts.hasOwnProperty(contextName)) {
            var context = registeredContexts[contextName];
            context.ranges = [];
          }
        }
      };
      Tokenizer.prototype.updateContextsRanges = function() {
        this.resetContextsRanges();
        var chars = this.tokens.map(function(token) {
          return token.char;
        });
        for (var i = 0; i < chars.length; i++) {
          var contextParams = new ContextParams(chars, i);
          this.runContextCheck(contextParams);
        }
        this.dispatch("updateContextsRanges", [this.registeredContexts]);
      };
      Tokenizer.prototype.setEndOffset = function(offset, contextName) {
        var startIndex = this.getContext(contextName).openRange.startIndex;
        var range = new ContextRange(startIndex, offset, contextName);
        var ranges = this.getContext(contextName).ranges;
        range.rangeId = contextName + "." + ranges.length;
        ranges.push(range);
        this.getContext(contextName).openRange = null;
        return range;
      };
      Tokenizer.prototype.runContextCheck = function(contextParams) {
        var this$1 = this;
        var index = contextParams.index;
        this.contextCheckers.forEach(function(contextChecker) {
          var contextName = contextChecker.contextName;
          var openRange = this$1.getContext(contextName).openRange;
          if (!openRange && contextChecker.checkStart(contextParams)) {
            openRange = new ContextRange(index, null, contextName);
            this$1.getContext(contextName).openRange = openRange;
            this$1.dispatch("contextStart", [contextName, index]);
          }
          if (!!openRange && contextChecker.checkEnd(contextParams)) {
            var offset = index - openRange.startIndex + 1;
            var range = this$1.setEndOffset(offset, contextName);
            this$1.dispatch("contextEnd", [contextName, range]);
          }
        });
      };
      Tokenizer.prototype.tokenize = function(text) {
        this.tokens = [];
        this.resetContextsRanges();
        var chars = Array.from(text);
        this.dispatch("start");
        for (var i = 0; i < chars.length; i++) {
          var char = chars[i];
          var contextParams = new ContextParams(chars, i);
          this.dispatch("next", [contextParams]);
          this.runContextCheck(contextParams);
          var token = new Token(char);
          this.tokens.push(token);
          this.dispatch("newToken", [token, contextParams]);
        }
        this.dispatch("end", [this.tokens]);
        return this.tokens;
      };
      function isArabicChar(c) {
        return /[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(c);
      }
      function isIsolatedArabicChar(char) {
        return /[\u0630\u0690\u0621\u0631\u0661\u0671\u0622\u0632\u0672\u0692\u06C2\u0623\u0673\u0693\u06C3\u0624\u0694\u06C4\u0625\u0675\u0695\u06C5\u06E5\u0676\u0696\u06C6\u0627\u0677\u0697\u06C7\u0648\u0688\u0698\u06C8\u0689\u0699\u06C9\u068A\u06CA\u066B\u068B\u06CB\u068C\u068D\u06CD\u06FD\u068E\u06EE\u06FE\u062F\u068F\u06CF\u06EF]/.test(char);
      }
      function isTashkeelArabicChar(char) {
        return /[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(char);
      }
      function isLatinChar(c) {
        return /[A-z]/.test(c);
      }
      function isWhiteSpace(c) {
        return /\s/.test(c);
      }
      function FeatureQuery(font) {
        this.font = font;
        this.features = {};
      }
      function SubstitutionAction(action) {
        this.id = action.id;
        this.tag = action.tag;
        this.substitution = action.substitution;
      }
      function lookupCoverage(glyphIndex, coverage) {
        if (!glyphIndex) {
          return -1;
        }
        switch (coverage.format) {
          case 1:
            return coverage.glyphs.indexOf(glyphIndex);
          case 2:
            var ranges = coverage.ranges;
            for (var i = 0; i < ranges.length; i++) {
              var range = ranges[i];
              if (glyphIndex >= range.start && glyphIndex <= range.end) {
                var offset = glyphIndex - range.start;
                return range.index + offset;
              }
            }
            break;
          default:
            return -1;
        }
        return -1;
      }
      function singleSubstitutionFormat1(glyphIndex, subtable) {
        var substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);
        if (substituteIndex === -1) {
          return null;
        }
        return glyphIndex + subtable.deltaGlyphId;
      }
      function singleSubstitutionFormat2(glyphIndex, subtable) {
        var substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);
        if (substituteIndex === -1) {
          return null;
        }
        return subtable.substitute[substituteIndex];
      }
      function lookupCoverageList(coverageList, contextParams) {
        var lookupList = [];
        for (var i = 0; i < coverageList.length; i++) {
          var coverage = coverageList[i];
          var glyphIndex = contextParams.current;
          glyphIndex = Array.isArray(glyphIndex) ? glyphIndex[0] : glyphIndex;
          var lookupIndex = lookupCoverage(glyphIndex, coverage);
          if (lookupIndex !== -1) {
            lookupList.push(lookupIndex);
          }
        }
        if (lookupList.length !== coverageList.length) {
          return -1;
        }
        return lookupList;
      }
      function chainingSubstitutionFormat3(contextParams, subtable) {
        var lookupsCount = subtable.inputCoverage.length + subtable.lookaheadCoverage.length + subtable.backtrackCoverage.length;
        if (contextParams.context.length < lookupsCount) {
          return [];
        }
        var inputLookups = lookupCoverageList(subtable.inputCoverage, contextParams);
        if (inputLookups === -1) {
          return [];
        }
        var lookaheadOffset = subtable.inputCoverage.length - 1;
        if (contextParams.lookahead.length < subtable.lookaheadCoverage.length) {
          return [];
        }
        var lookaheadContext = contextParams.lookahead.slice(lookaheadOffset);
        while (lookaheadContext.length && isTashkeelArabicChar(lookaheadContext[0].char)) {
          lookaheadContext.shift();
        }
        var lookaheadParams = new ContextParams(lookaheadContext, 0);
        var lookaheadLookups = lookupCoverageList(subtable.lookaheadCoverage, lookaheadParams);
        var backtrackContext = [].concat(contextParams.backtrack);
        backtrackContext.reverse();
        while (backtrackContext.length && isTashkeelArabicChar(backtrackContext[0].char)) {
          backtrackContext.shift();
        }
        if (backtrackContext.length < subtable.backtrackCoverage.length) {
          return [];
        }
        var backtrackParams = new ContextParams(backtrackContext, 0);
        var backtrackLookups = lookupCoverageList(subtable.backtrackCoverage, backtrackParams);
        var contextRulesMatch = inputLookups.length === subtable.inputCoverage.length && lookaheadLookups.length === subtable.lookaheadCoverage.length && backtrackLookups.length === subtable.backtrackCoverage.length;
        var substitutions = [];
        if (contextRulesMatch) {
          for (var i = 0; i < subtable.lookupRecords.length; i++) {
            var lookupRecord = subtable.lookupRecords[i];
            var lookupListIndex = lookupRecord.lookupListIndex;
            var lookupTable = this.getLookupByIndex(lookupListIndex);
            for (var s = 0; s < lookupTable.subtables.length; s++) {
              var subtable$1 = lookupTable.subtables[s];
              var lookup = this.getLookupMethod(lookupTable, subtable$1);
              var substitutionType = this.getSubstitutionType(lookupTable, subtable$1);
              if (substitutionType === "12") {
                for (var n = 0; n < inputLookups.length; n++) {
                  var glyphIndex = contextParams.get(n);
                  var substitution = lookup(glyphIndex);
                  if (substitution) {
                    substitutions.push(substitution);
                  }
                }
              }
            }
          }
        }
        return substitutions;
      }
      function ligatureSubstitutionFormat1(contextParams, subtable) {
        var glyphIndex = contextParams.current;
        var ligSetIndex = lookupCoverage(glyphIndex, subtable.coverage);
        if (ligSetIndex === -1) {
          return null;
        }
        var ligature;
        var ligatureSet = subtable.ligatureSets[ligSetIndex];
        for (var s = 0; s < ligatureSet.length; s++) {
          ligature = ligatureSet[s];
          for (var l = 0; l < ligature.components.length; l++) {
            var lookaheadItem = contextParams.lookahead[l];
            var component = ligature.components[l];
            if (lookaheadItem !== component) {
              break;
            }
            if (l === ligature.components.length - 1) {
              return ligature;
            }
          }
        }
        return null;
      }
      function decompositionSubstitutionFormat1(glyphIndex, subtable) {
        var substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);
        if (substituteIndex === -1) {
          return null;
        }
        return subtable.sequences[substituteIndex];
      }
      FeatureQuery.prototype.getDefaultScriptFeaturesIndexes = function() {
        var scripts = this.font.tables.gsub.scripts;
        for (var s = 0; s < scripts.length; s++) {
          var script = scripts[s];
          if (script.tag === "DFLT") {
            return script.script.defaultLangSys.featureIndexes;
          }
        }
        return [];
      };
      FeatureQuery.prototype.getScriptFeaturesIndexes = function(scriptTag) {
        var tables = this.font.tables;
        if (!tables.gsub) {
          return [];
        }
        if (!scriptTag) {
          return this.getDefaultScriptFeaturesIndexes();
        }
        var scripts = this.font.tables.gsub.scripts;
        for (var i = 0; i < scripts.length; i++) {
          var script = scripts[i];
          if (script.tag === scriptTag && script.script.defaultLangSys) {
            return script.script.defaultLangSys.featureIndexes;
          } else {
            var langSysRecords = script.langSysRecords;
            if (!!langSysRecords) {
              for (var j = 0; j < langSysRecords.length; j++) {
                var langSysRecord = langSysRecords[j];
                if (langSysRecord.tag === scriptTag) {
                  var langSys = langSysRecord.langSys;
                  return langSys.featureIndexes;
                }
              }
            }
          }
        }
        return this.getDefaultScriptFeaturesIndexes();
      };
      FeatureQuery.prototype.mapTagsToFeatures = function(features, scriptTag) {
        var tags = {};
        for (var i = 0; i < features.length; i++) {
          var tag = features[i].tag;
          var feature = features[i].feature;
          tags[tag] = feature;
        }
        this.features[scriptTag].tags = tags;
      };
      FeatureQuery.prototype.getScriptFeatures = function(scriptTag) {
        var features = this.features[scriptTag];
        if (this.features.hasOwnProperty(scriptTag)) {
          return features;
        }
        var featuresIndexes = this.getScriptFeaturesIndexes(scriptTag);
        if (!featuresIndexes) {
          return null;
        }
        var gsub2 = this.font.tables.gsub;
        features = featuresIndexes.map(function(index) {
          return gsub2.features[index];
        });
        this.features[scriptTag] = features;
        this.mapTagsToFeatures(features, scriptTag);
        return features;
      };
      FeatureQuery.prototype.getSubstitutionType = function(lookupTable, subtable) {
        var lookupType = lookupTable.lookupType.toString();
        var substFormat = subtable.substFormat.toString();
        return lookupType + substFormat;
      };
      FeatureQuery.prototype.getLookupMethod = function(lookupTable, subtable) {
        var this$1 = this;
        var substitutionType = this.getSubstitutionType(lookupTable, subtable);
        switch (substitutionType) {
          case "11":
            return function(glyphIndex) {
              return singleSubstitutionFormat1.apply(this$1, [glyphIndex, subtable]);
            };
          case "12":
            return function(glyphIndex) {
              return singleSubstitutionFormat2.apply(this$1, [glyphIndex, subtable]);
            };
          case "63":
            return function(contextParams) {
              return chainingSubstitutionFormat3.apply(this$1, [contextParams, subtable]);
            };
          case "41":
            return function(contextParams) {
              return ligatureSubstitutionFormat1.apply(this$1, [contextParams, subtable]);
            };
          case "21":
            return function(glyphIndex) {
              return decompositionSubstitutionFormat1.apply(this$1, [glyphIndex, subtable]);
            };
          default:
            throw new Error("lookupType: " + lookupTable.lookupType + " - substFormat: " + subtable.substFormat + " is not yet supported");
        }
      };
      FeatureQuery.prototype.lookupFeature = function(query) {
        var contextParams = query.contextParams;
        var currentIndex = contextParams.index;
        var feature = this.getFeature({
          tag: query.tag,
          script: query.script
        });
        if (!feature) {
          return new Error("font '" + this.font.names.fullName.en + "' doesn't support feature '" + query.tag + "' for script '" + query.script + "'.");
        }
        var lookups = this.getFeatureLookups(feature);
        var substitutions = [].concat(contextParams.context);
        for (var l = 0; l < lookups.length; l++) {
          var lookupTable = lookups[l];
          var subtables = this.getLookupSubtables(lookupTable);
          for (var s = 0; s < subtables.length; s++) {
            var subtable = subtables[s];
            var substType = this.getSubstitutionType(lookupTable, subtable);
            var lookup = this.getLookupMethod(lookupTable, subtable);
            var substitution = void 0;
            switch (substType) {
              case "11":
                substitution = lookup(contextParams.current);
                if (substitution) {
                  substitutions.splice(currentIndex, 1, new SubstitutionAction({
                    id: 11,
                    tag: query.tag,
                    substitution
                  }));
                }
                break;
              case "12":
                substitution = lookup(contextParams.current);
                if (substitution) {
                  substitutions.splice(currentIndex, 1, new SubstitutionAction({
                    id: 12,
                    tag: query.tag,
                    substitution
                  }));
                }
                break;
              case "63":
                substitution = lookup(contextParams);
                if (Array.isArray(substitution) && substitution.length) {
                  substitutions.splice(currentIndex, 1, new SubstitutionAction({
                    id: 63,
                    tag: query.tag,
                    substitution
                  }));
                }
                break;
              case "41":
                substitution = lookup(contextParams);
                if (substitution) {
                  substitutions.splice(currentIndex, 1, new SubstitutionAction({
                    id: 41,
                    tag: query.tag,
                    substitution
                  }));
                }
                break;
              case "21":
                substitution = lookup(contextParams.current);
                if (substitution) {
                  substitutions.splice(currentIndex, 1, new SubstitutionAction({
                    id: 21,
                    tag: query.tag,
                    substitution
                  }));
                }
                break;
            }
            contextParams = new ContextParams(substitutions, currentIndex);
            if (Array.isArray(substitution) && !substitution.length) {
              continue;
            }
            substitution = null;
          }
        }
        return substitutions.length ? substitutions : null;
      };
      FeatureQuery.prototype.supports = function(query) {
        if (!query.script) {
          return false;
        }
        this.getScriptFeatures(query.script);
        var supportedScript = this.features.hasOwnProperty(query.script);
        if (!query.tag) {
          return supportedScript;
        }
        var supportedFeature = this.features[query.script].some(function(feature) {
          return feature.tag === query.tag;
        });
        return supportedScript && supportedFeature;
      };
      FeatureQuery.prototype.getLookupSubtables = function(lookupTable) {
        return lookupTable.subtables || null;
      };
      FeatureQuery.prototype.getLookupByIndex = function(index) {
        var lookups = this.font.tables.gsub.lookups;
        return lookups[index] || null;
      };
      FeatureQuery.prototype.getFeatureLookups = function(feature) {
        return feature.lookupListIndexes.map(this.getLookupByIndex.bind(this));
      };
      FeatureQuery.prototype.getFeature = function getFeature(query) {
        if (!this.font) {
          return {FAIL: "No font was found"};
        }
        if (!this.features.hasOwnProperty(query.script)) {
          this.getScriptFeatures(query.script);
        }
        var scriptFeatures = this.features[query.script];
        if (!scriptFeatures) {
          return {FAIL: "No feature for script " + query.script};
        }
        if (!scriptFeatures.tags[query.tag]) {
          return null;
        }
        return this.features[query.script].tags[query.tag];
      };
      function arabicWordStartCheck(contextParams) {
        var char = contextParams.current;
        var prevChar = contextParams.get(-1);
        return prevChar === null && isArabicChar(char) || !isArabicChar(prevChar) && isArabicChar(char);
      }
      function arabicWordEndCheck(contextParams) {
        var nextChar = contextParams.get(1);
        return nextChar === null || !isArabicChar(nextChar);
      }
      var arabicWordCheck = {
        startCheck: arabicWordStartCheck,
        endCheck: arabicWordEndCheck
      };
      function arabicSentenceStartCheck(contextParams) {
        var char = contextParams.current;
        var prevChar = contextParams.get(-1);
        return (isArabicChar(char) || isTashkeelArabicChar(char)) && !isArabicChar(prevChar);
      }
      function arabicSentenceEndCheck(contextParams) {
        var nextChar = contextParams.get(1);
        switch (true) {
          case nextChar === null:
            return true;
          case (!isArabicChar(nextChar) && !isTashkeelArabicChar(nextChar)):
            var nextIsWhitespace = isWhiteSpace(nextChar);
            if (!nextIsWhitespace) {
              return true;
            }
            if (nextIsWhitespace) {
              var arabicCharAhead = false;
              arabicCharAhead = contextParams.lookahead.some(function(c) {
                return isArabicChar(c) || isTashkeelArabicChar(c);
              });
              if (!arabicCharAhead) {
                return true;
              }
            }
            break;
          default:
            return false;
        }
      }
      var arabicSentenceCheck = {
        startCheck: arabicSentenceStartCheck,
        endCheck: arabicSentenceEndCheck
      };
      function singleSubstitutionFormat1$1(action, tokens, index) {
        tokens[index].setState(action.tag, action.substitution);
      }
      function singleSubstitutionFormat2$1(action, tokens, index) {
        tokens[index].setState(action.tag, action.substitution);
      }
      function chainingSubstitutionFormat3$1(action, tokens, index) {
        action.substitution.forEach(function(subst, offset) {
          var token = tokens[index + offset];
          token.setState(action.tag, subst);
        });
      }
      function ligatureSubstitutionFormat1$1(action, tokens, index) {
        var token = tokens[index];
        token.setState(action.tag, action.substitution.ligGlyph);
        var compsCount = action.substitution.components.length;
        for (var i = 0; i < compsCount; i++) {
          token = tokens[index + i + 1];
          token.setState("deleted", true);
        }
      }
      var SUBSTITUTIONS = {
        11: singleSubstitutionFormat1$1,
        12: singleSubstitutionFormat2$1,
        63: chainingSubstitutionFormat3$1,
        41: ligatureSubstitutionFormat1$1
      };
      function applySubstitution(action, tokens, index) {
        if (action instanceof SubstitutionAction && SUBSTITUTIONS[action.id]) {
          SUBSTITUTIONS[action.id](action, tokens, index);
        }
      }
      function willConnectPrev(charContextParams) {
        var backtrack = [].concat(charContextParams.backtrack);
        for (var i = backtrack.length - 1; i >= 0; i--) {
          var prevChar = backtrack[i];
          var isolated = isIsolatedArabicChar(prevChar);
          var tashkeel = isTashkeelArabicChar(prevChar);
          if (!isolated && !tashkeel) {
            return true;
          }
          if (isolated) {
            return false;
          }
        }
        return false;
      }
      function willConnectNext(charContextParams) {
        if (isIsolatedArabicChar(charContextParams.current)) {
          return false;
        }
        for (var i = 0; i < charContextParams.lookahead.length; i++) {
          var nextChar = charContextParams.lookahead[i];
          var tashkeel = isTashkeelArabicChar(nextChar);
          if (!tashkeel) {
            return true;
          }
        }
        return false;
      }
      function arabicPresentationForms(range) {
        var this$1 = this;
        var script = "arab";
        var tags = this.featuresTags[script];
        var tokens = this.tokenizer.getRangeTokens(range);
        if (tokens.length === 1) {
          return;
        }
        var contextParams = new ContextParams(tokens.map(function(token) {
          return token.getState("glyphIndex");
        }), 0);
        var charContextParams = new ContextParams(tokens.map(function(token) {
          return token.char;
        }), 0);
        tokens.forEach(function(token, index) {
          if (isTashkeelArabicChar(token.char)) {
            return;
          }
          contextParams.setCurrentIndex(index);
          charContextParams.setCurrentIndex(index);
          var CONNECT = 0;
          if (willConnectPrev(charContextParams)) {
            CONNECT |= 1;
          }
          if (willConnectNext(charContextParams)) {
            CONNECT |= 2;
          }
          var tag;
          switch (CONNECT) {
            case 1:
              tag = "fina";
              break;
            case 2:
              tag = "init";
              break;
            case 3:
              tag = "medi";
              break;
          }
          if (tags.indexOf(tag) === -1) {
            return;
          }
          var substitutions = this$1.query.lookupFeature({
            tag,
            script,
            contextParams
          });
          if (substitutions instanceof Error) {
            return console.info(substitutions.message);
          }
          substitutions.forEach(function(action, index2) {
            if (action instanceof SubstitutionAction) {
              applySubstitution(action, tokens, index2);
              contextParams.context[index2] = action.substitution;
            }
          });
        });
      }
      function getContextParams(tokens, index) {
        var context = tokens.map(function(token) {
          return token.activeState.value;
        });
        return new ContextParams(context, index || 0);
      }
      function arabicRequiredLigatures(range) {
        var this$1 = this;
        var script = "arab";
        var tokens = this.tokenizer.getRangeTokens(range);
        var contextParams = getContextParams(tokens);
        contextParams.context.forEach(function(glyphIndex, index) {
          contextParams.setCurrentIndex(index);
          var substitutions = this$1.query.lookupFeature({
            tag: "rlig",
            script,
            contextParams
          });
          if (substitutions.length) {
            substitutions.forEach(function(action) {
              return applySubstitution(action, tokens, index);
            });
            contextParams = getContextParams(tokens);
          }
        });
      }
      function latinWordStartCheck(contextParams) {
        var char = contextParams.current;
        var prevChar = contextParams.get(-1);
        return prevChar === null && isLatinChar(char) || !isLatinChar(prevChar) && isLatinChar(char);
      }
      function latinWordEndCheck(contextParams) {
        var nextChar = contextParams.get(1);
        return nextChar === null || !isLatinChar(nextChar);
      }
      var latinWordCheck = {
        startCheck: latinWordStartCheck,
        endCheck: latinWordEndCheck
      };
      function getContextParams$1(tokens, index) {
        var context = tokens.map(function(token) {
          return token.activeState.value;
        });
        return new ContextParams(context, index || 0);
      }
      function latinLigature(range) {
        var this$1 = this;
        var script = "latn";
        var tokens = this.tokenizer.getRangeTokens(range);
        var contextParams = getContextParams$1(tokens);
        contextParams.context.forEach(function(glyphIndex, index) {
          contextParams.setCurrentIndex(index);
          var substitutions = this$1.query.lookupFeature({
            tag: "liga",
            script,
            contextParams
          });
          if (substitutions.length) {
            substitutions.forEach(function(action) {
              return applySubstitution(action, tokens, index);
            });
            contextParams = getContextParams$1(tokens);
          }
        });
      }
      function Bidi(baseDir) {
        this.baseDir = baseDir || "ltr";
        this.tokenizer = new Tokenizer();
        this.featuresTags = {};
      }
      Bidi.prototype.setText = function(text) {
        this.text = text;
      };
      Bidi.prototype.contextChecks = {
        latinWordCheck,
        arabicWordCheck,
        arabicSentenceCheck
      };
      function registerContextChecker(checkId) {
        var check2 = this.contextChecks[checkId + "Check"];
        return this.tokenizer.registerContextChecker(checkId, check2.startCheck, check2.endCheck);
      }
      function tokenizeText() {
        registerContextChecker.call(this, "latinWord");
        registerContextChecker.call(this, "arabicWord");
        registerContextChecker.call(this, "arabicSentence");
        return this.tokenizer.tokenize(this.text);
      }
      function reverseArabicSentences() {
        var this$1 = this;
        var ranges = this.tokenizer.getContextRanges("arabicSentence");
        ranges.forEach(function(range) {
          var rangeTokens = this$1.tokenizer.getRangeTokens(range);
          this$1.tokenizer.replaceRange(range.startIndex, range.endOffset, rangeTokens.reverse());
        });
      }
      Bidi.prototype.registerFeatures = function(script, tags) {
        var this$1 = this;
        var supportedTags = tags.filter(function(tag) {
          return this$1.query.supports({script, tag});
        });
        if (!this.featuresTags.hasOwnProperty(script)) {
          this.featuresTags[script] = supportedTags;
        } else {
          this.featuresTags[script] = this.featuresTags[script].concat(supportedTags);
        }
      };
      Bidi.prototype.applyFeatures = function(font, features) {
        if (!font) {
          throw new Error("No valid font was provided to apply features");
        }
        if (!this.query) {
          this.query = new FeatureQuery(font);
        }
        for (var f = 0; f < features.length; f++) {
          var feature = features[f];
          if (!this.query.supports({script: feature.script})) {
            continue;
          }
          this.registerFeatures(feature.script, feature.tags);
        }
      };
      Bidi.prototype.registerModifier = function(modifierId, condition, modifier) {
        this.tokenizer.registerModifier(modifierId, condition, modifier);
      };
      function checkGlyphIndexStatus() {
        if (this.tokenizer.registeredModifiers.indexOf("glyphIndex") === -1) {
          throw new Error("glyphIndex modifier is required to apply arabic presentation features.");
        }
      }
      function applyArabicPresentationForms() {
        var this$1 = this;
        var script = "arab";
        if (!this.featuresTags.hasOwnProperty(script)) {
          return;
        }
        checkGlyphIndexStatus.call(this);
        var ranges = this.tokenizer.getContextRanges("arabicWord");
        ranges.forEach(function(range) {
          arabicPresentationForms.call(this$1, range);
        });
      }
      function applyArabicRequireLigatures() {
        var this$1 = this;
        var script = "arab";
        if (!this.featuresTags.hasOwnProperty(script)) {
          return;
        }
        var tags = this.featuresTags[script];
        if (tags.indexOf("rlig") === -1) {
          return;
        }
        checkGlyphIndexStatus.call(this);
        var ranges = this.tokenizer.getContextRanges("arabicWord");
        ranges.forEach(function(range) {
          arabicRequiredLigatures.call(this$1, range);
        });
      }
      function applyLatinLigatures() {
        var this$1 = this;
        var script = "latn";
        if (!this.featuresTags.hasOwnProperty(script)) {
          return;
        }
        var tags = this.featuresTags[script];
        if (tags.indexOf("liga") === -1) {
          return;
        }
        checkGlyphIndexStatus.call(this);
        var ranges = this.tokenizer.getContextRanges("latinWord");
        ranges.forEach(function(range) {
          latinLigature.call(this$1, range);
        });
      }
      Bidi.prototype.checkContextReady = function(contextId) {
        return !!this.tokenizer.getContext(contextId);
      };
      Bidi.prototype.applyFeaturesToContexts = function() {
        if (this.checkContextReady("arabicWord")) {
          applyArabicPresentationForms.call(this);
          applyArabicRequireLigatures.call(this);
        }
        if (this.checkContextReady("latinWord")) {
          applyLatinLigatures.call(this);
        }
        if (this.checkContextReady("arabicSentence")) {
          reverseArabicSentences.call(this);
        }
      };
      Bidi.prototype.processText = function(text) {
        if (!this.text || this.text !== text) {
          this.setText(text);
          tokenizeText.call(this);
          this.applyFeaturesToContexts();
        }
      };
      Bidi.prototype.getBidiText = function(text) {
        this.processText(text);
        return this.tokenizer.getText();
      };
      Bidi.prototype.getTextGlyphs = function(text) {
        this.processText(text);
        var indexes = [];
        for (var i = 0; i < this.tokenizer.tokens.length; i++) {
          var token = this.tokenizer.tokens[i];
          if (token.state.deleted) {
            continue;
          }
          var index = token.activeState.value;
          indexes.push(Array.isArray(index) ? index[0] : index);
        }
        return indexes;
      };
      function Font(options) {
        options = options || {};
        options.tables = options.tables || {};
        if (!options.empty) {
          checkArgument(options.familyName, "When creating a new Font object, familyName is required.");
          checkArgument(options.styleName, "When creating a new Font object, styleName is required.");
          checkArgument(options.unitsPerEm, "When creating a new Font object, unitsPerEm is required.");
          checkArgument(options.ascender, "When creating a new Font object, ascender is required.");
          checkArgument(options.descender <= 0, "When creating a new Font object, negative descender value is required.");
          this.names = {
            fontFamily: {en: options.familyName || " "},
            fontSubfamily: {en: options.styleName || " "},
            fullName: {en: options.fullName || options.familyName + " " + options.styleName},
            postScriptName: {en: options.postScriptName || (options.familyName + options.styleName).replace(/\s/g, "")},
            designer: {en: options.designer || " "},
            designerURL: {en: options.designerURL || " "},
            manufacturer: {en: options.manufacturer || " "},
            manufacturerURL: {en: options.manufacturerURL || " "},
            license: {en: options.license || " "},
            licenseURL: {en: options.licenseURL || " "},
            version: {en: options.version || "Version 0.1"},
            description: {en: options.description || " "},
            copyright: {en: options.copyright || " "},
            trademark: {en: options.trademark || " "}
          };
          this.unitsPerEm = options.unitsPerEm || 1e3;
          this.ascender = options.ascender;
          this.descender = options.descender;
          this.createdTimestamp = options.createdTimestamp;
          this.tables = Object.assign(options.tables, {
            os2: Object.assign({
              usWeightClass: options.weightClass || this.usWeightClasses.MEDIUM,
              usWidthClass: options.widthClass || this.usWidthClasses.MEDIUM,
              fsSelection: options.fsSelection || this.fsSelectionValues.REGULAR
            }, options.tables.os2)
          });
        }
        this.supported = true;
        this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);
        this.encoding = new DefaultEncoding(this);
        this.position = new Position(this);
        this.substitution = new Substitution(this);
        this.tables = this.tables || {};
        this._push = null;
        this._hmtxTableData = {};
        Object.defineProperty(this, "hinting", {
          get: function() {
            if (this._hinting) {
              return this._hinting;
            }
            if (this.outlinesFormat === "truetype") {
              return this._hinting = new Hinting(this);
            }
          }
        });
      }
      Font.prototype.hasChar = function(c) {
        return this.encoding.charToGlyphIndex(c) !== null;
      };
      Font.prototype.charToGlyphIndex = function(s) {
        return this.encoding.charToGlyphIndex(s);
      };
      Font.prototype.charToGlyph = function(c) {
        var glyphIndex = this.charToGlyphIndex(c);
        var glyph = this.glyphs.get(glyphIndex);
        if (!glyph) {
          glyph = this.glyphs.get(0);
        }
        return glyph;
      };
      Font.prototype.updateFeatures = function(options) {
        return this.defaultRenderOptions.features.map(function(feature) {
          if (feature.script === "latn") {
            return {
              script: "latn",
              tags: feature.tags.filter(function(tag) {
                return options[tag];
              })
            };
          } else {
            return feature;
          }
        });
      };
      Font.prototype.stringToGlyphs = function(s, options) {
        var this$1 = this;
        var bidi = new Bidi();
        var charToGlyphIndexMod = function(token) {
          return this$1.charToGlyphIndex(token.char);
        };
        bidi.registerModifier("glyphIndex", null, charToGlyphIndexMod);
        var features = options ? this.updateFeatures(options.features) : this.defaultRenderOptions.features;
        bidi.applyFeatures(this, features);
        var indexes = bidi.getTextGlyphs(s);
        var length = indexes.length;
        var glyphs = new Array(length);
        var notdef = this.glyphs.get(0);
        for (var i = 0; i < length; i += 1) {
          glyphs[i] = this.glyphs.get(indexes[i]) || notdef;
        }
        return glyphs;
      };
      Font.prototype.nameToGlyphIndex = function(name) {
        return this.glyphNames.nameToGlyphIndex(name);
      };
      Font.prototype.nameToGlyph = function(name) {
        var glyphIndex = this.nameToGlyphIndex(name);
        var glyph = this.glyphs.get(glyphIndex);
        if (!glyph) {
          glyph = this.glyphs.get(0);
        }
        return glyph;
      };
      Font.prototype.glyphIndexToName = function(gid) {
        if (!this.glyphNames.glyphIndexToName) {
          return "";
        }
        return this.glyphNames.glyphIndexToName(gid);
      };
      Font.prototype.getKerningValue = function(leftGlyph, rightGlyph) {
        leftGlyph = leftGlyph.index || leftGlyph;
        rightGlyph = rightGlyph.index || rightGlyph;
        var gposKerning = this.position.defaultKerningTables;
        if (gposKerning) {
          return this.position.getKerningValue(gposKerning, leftGlyph, rightGlyph);
        }
        return this.kerningPairs[leftGlyph + "," + rightGlyph] || 0;
      };
      Font.prototype.defaultRenderOptions = {
        kerning: true,
        features: [
          {script: "arab", tags: ["init", "medi", "fina", "rlig"]},
          {script: "latn", tags: ["liga", "rlig"]}
        ]
      };
      Font.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {
        x = x !== void 0 ? x : 0;
        y = y !== void 0 ? y : 0;
        fontSize = fontSize !== void 0 ? fontSize : 72;
        options = Object.assign({}, this.defaultRenderOptions, options);
        var fontScale = 1 / this.unitsPerEm * fontSize;
        var glyphs = this.stringToGlyphs(text, options);
        var kerningLookups;
        if (options.kerning) {
          var script = options.script || this.position.getDefaultScriptName();
          kerningLookups = this.position.getKerningTables(script, options.language);
        }
        for (var i = 0; i < glyphs.length; i += 1) {
          var glyph = glyphs[i];
          callback.call(this, glyph, x, y, fontSize, options);
          if (glyph.advanceWidth) {
            x += glyph.advanceWidth * fontScale;
          }
          if (options.kerning && i < glyphs.length - 1) {
            var kerningValue = kerningLookups ? this.position.getKerningValue(kerningLookups, glyph.index, glyphs[i + 1].index) : this.getKerningValue(glyph, glyphs[i + 1]);
            x += kerningValue * fontScale;
          }
          if (options.letterSpacing) {
            x += options.letterSpacing * fontSize;
          } else if (options.tracking) {
            x += options.tracking / 1e3 * fontSize;
          }
        }
        return x;
      };
      Font.prototype.getPath = function(text, x, y, fontSize, options) {
        var fullPath = new Path();
        this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {
          var glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);
          fullPath.extend(glyphPath);
        });
        return fullPath;
      };
      Font.prototype.getPaths = function(text, x, y, fontSize, options) {
        var glyphPaths = [];
        this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {
          var glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);
          glyphPaths.push(glyphPath);
        });
        return glyphPaths;
      };
      Font.prototype.getAdvanceWidth = function(text, fontSize, options) {
        return this.forEachGlyph(text, 0, 0, fontSize, options, function() {
        });
      };
      Font.prototype.draw = function(ctx, text, x, y, fontSize, options) {
        this.getPath(text, x, y, fontSize, options).draw(ctx);
      };
      Font.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {
        this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {
          glyph.drawPoints(ctx, gX, gY, gFontSize);
        });
      };
      Font.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {
        this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {
          glyph.drawMetrics(ctx, gX, gY, gFontSize);
        });
      };
      Font.prototype.getEnglishName = function(name) {
        var translations = this.names[name];
        if (translations) {
          return translations.en;
        }
      };
      Font.prototype.validate = function() {
        var _this = this;
        function assert(predicate, message) {
        }
        function assertNamePresent(name) {
          var englishName = _this.getEnglishName(name);
          assert(englishName && englishName.trim().length > 0);
        }
        assertNamePresent("fontFamily");
        assertNamePresent("weightName");
        assertNamePresent("manufacturer");
        assertNamePresent("copyright");
        assertNamePresent("version");
        assert(this.unitsPerEm > 0);
      };
      Font.prototype.toTables = function() {
        return sfnt.fontToTable(this);
      };
      Font.prototype.toBuffer = function() {
        console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.");
        return this.toArrayBuffer();
      };
      Font.prototype.toArrayBuffer = function() {
        var sfntTable = this.toTables();
        var bytes = sfntTable.encode();
        var buffer = new ArrayBuffer(bytes.length);
        var intArray = new Uint8Array(buffer);
        for (var i = 0; i < bytes.length; i++) {
          intArray[i] = bytes[i];
        }
        return buffer;
      };
      Font.prototype.download = function(fileName) {
        var familyName = this.getEnglishName("fontFamily");
        var styleName = this.getEnglishName("fontSubfamily");
        fileName = fileName || familyName.replace(/\s/g, "") + "-" + styleName + ".otf";
        var arrayBuffer = this.toArrayBuffer();
        if (isBrowser()) {
          window.URL = window.URL || window.webkitURL;
          if (window.URL) {
            var dataView = new DataView(arrayBuffer);
            var blob = new Blob([dataView], {type: "font/opentype"});
            var link = document.createElement("a");
            link.href = window.URL.createObjectURL(blob);
            link.download = fileName;
            var event = document.createEvent("MouseEvents");
            event.initEvent("click", true, false);
            link.dispatchEvent(event);
          } else {
            console.warn("Font file could not be downloaded. Try using a different browser.");
          }
        } else {
          var fs = require_fs();
          var buffer = arrayBufferToNodeBuffer(arrayBuffer);
          fs.writeFileSync(fileName, buffer);
        }
      };
      Font.prototype.fsSelectionValues = {
        ITALIC: 1,
        UNDERSCORE: 2,
        NEGATIVE: 4,
        OUTLINED: 8,
        STRIKEOUT: 16,
        BOLD: 32,
        REGULAR: 64,
        USER_TYPO_METRICS: 128,
        WWS: 256,
        OBLIQUE: 512
      };
      Font.prototype.usWidthClasses = {
        ULTRA_CONDENSED: 1,
        EXTRA_CONDENSED: 2,
        CONDENSED: 3,
        SEMI_CONDENSED: 4,
        MEDIUM: 5,
        SEMI_EXPANDED: 6,
        EXPANDED: 7,
        EXTRA_EXPANDED: 8,
        ULTRA_EXPANDED: 9
      };
      Font.prototype.usWeightClasses = {
        THIN: 100,
        EXTRA_LIGHT: 200,
        LIGHT: 300,
        NORMAL: 400,
        MEDIUM: 500,
        SEMI_BOLD: 600,
        BOLD: 700,
        EXTRA_BOLD: 800,
        BLACK: 900
      };
      function addName(name, names) {
        var nameString = JSON.stringify(name);
        var nameID = 256;
        for (var nameKey in names) {
          var n = parseInt(nameKey);
          if (!n || n < 256) {
            continue;
          }
          if (JSON.stringify(names[nameKey]) === nameString) {
            return n;
          }
          if (nameID <= n) {
            nameID = n + 1;
          }
        }
        names[nameID] = name;
        return nameID;
      }
      function makeFvarAxis(n, axis, names) {
        var nameID = addName(axis.name, names);
        return [
          {name: "tag_" + n, type: "TAG", value: axis.tag},
          {name: "minValue_" + n, type: "FIXED", value: axis.minValue << 16},
          {name: "defaultValue_" + n, type: "FIXED", value: axis.defaultValue << 16},
          {name: "maxValue_" + n, type: "FIXED", value: axis.maxValue << 16},
          {name: "flags_" + n, type: "USHORT", value: 0},
          {name: "nameID_" + n, type: "USHORT", value: nameID}
        ];
      }
      function parseFvarAxis(data, start, names) {
        var axis = {};
        var p = new parse.Parser(data, start);
        axis.tag = p.parseTag();
        axis.minValue = p.parseFixed();
        axis.defaultValue = p.parseFixed();
        axis.maxValue = p.parseFixed();
        p.skip("uShort", 1);
        axis.name = names[p.parseUShort()] || {};
        return axis;
      }
      function makeFvarInstance(n, inst, axes, names) {
        var nameID = addName(inst.name, names);
        var fields = [
          {name: "nameID_" + n, type: "USHORT", value: nameID},
          {name: "flags_" + n, type: "USHORT", value: 0}
        ];
        for (var i = 0; i < axes.length; ++i) {
          var axisTag = axes[i].tag;
          fields.push({
            name: "axis_" + n + " " + axisTag,
            type: "FIXED",
            value: inst.coordinates[axisTag] << 16
          });
        }
        return fields;
      }
      function parseFvarInstance(data, start, axes, names) {
        var inst = {};
        var p = new parse.Parser(data, start);
        inst.name = names[p.parseUShort()] || {};
        p.skip("uShort", 1);
        inst.coordinates = {};
        for (var i = 0; i < axes.length; ++i) {
          inst.coordinates[axes[i].tag] = p.parseFixed();
        }
        return inst;
      }
      function makeFvarTable(fvar2, names) {
        var result = new table.Table("fvar", [
          {name: "version", type: "ULONG", value: 65536},
          {name: "offsetToData", type: "USHORT", value: 0},
          {name: "countSizePairs", type: "USHORT", value: 2},
          {name: "axisCount", type: "USHORT", value: fvar2.axes.length},
          {name: "axisSize", type: "USHORT", value: 20},
          {name: "instanceCount", type: "USHORT", value: fvar2.instances.length},
          {name: "instanceSize", type: "USHORT", value: 4 + fvar2.axes.length * 4}
        ]);
        result.offsetToData = result.sizeOf();
        for (var i = 0; i < fvar2.axes.length; i++) {
          result.fields = result.fields.concat(makeFvarAxis(i, fvar2.axes[i], names));
        }
        for (var j = 0; j < fvar2.instances.length; j++) {
          result.fields = result.fields.concat(makeFvarInstance(j, fvar2.instances[j], fvar2.axes, names));
        }
        return result;
      }
      function parseFvarTable(data, start, names) {
        var p = new parse.Parser(data, start);
        var tableVersion = p.parseULong();
        check.argument(tableVersion === 65536, "Unsupported fvar table version.");
        var offsetToData = p.parseOffset16();
        p.skip("uShort", 1);
        var axisCount = p.parseUShort();
        var axisSize = p.parseUShort();
        var instanceCount = p.parseUShort();
        var instanceSize = p.parseUShort();
        var axes = [];
        for (var i = 0; i < axisCount; i++) {
          axes.push(parseFvarAxis(data, start + offsetToData + i * axisSize, names));
        }
        var instances = [];
        var instanceStart = start + offsetToData + axisCount * axisSize;
        for (var j = 0; j < instanceCount; j++) {
          instances.push(parseFvarInstance(data, instanceStart + j * instanceSize, axes, names));
        }
        return {axes, instances};
      }
      var fvar = {make: makeFvarTable, parse: parseFvarTable};
      var attachList = function() {
        return {
          coverage: this.parsePointer(Parser.coverage),
          attachPoints: this.parseList(Parser.pointer(Parser.uShortList))
        };
      };
      var caretValue = function() {
        var format = this.parseUShort();
        check.argument(format === 1 || format === 2 || format === 3, "Unsupported CaretValue table version.");
        if (format === 1) {
          return {coordinate: this.parseShort()};
        } else if (format === 2) {
          return {pointindex: this.parseShort()};
        } else if (format === 3) {
          return {coordinate: this.parseShort()};
        }
      };
      var ligGlyph = function() {
        return this.parseList(Parser.pointer(caretValue));
      };
      var ligCaretList = function() {
        return {
          coverage: this.parsePointer(Parser.coverage),
          ligGlyphs: this.parseList(Parser.pointer(ligGlyph))
        };
      };
      var markGlyphSets = function() {
        this.parseUShort();
        return this.parseList(Parser.pointer(Parser.coverage));
      };
      function parseGDEFTable(data, start) {
        start = start || 0;
        var p = new Parser(data, start);
        var tableVersion = p.parseVersion(1);
        check.argument(tableVersion === 1 || tableVersion === 1.2 || tableVersion === 1.3, "Unsupported GDEF table version.");
        var gdef2 = {
          version: tableVersion,
          classDef: p.parsePointer(Parser.classDef),
          attachList: p.parsePointer(attachList),
          ligCaretList: p.parsePointer(ligCaretList),
          markAttachClassDef: p.parsePointer(Parser.classDef)
        };
        if (tableVersion >= 1.2) {
          gdef2.markGlyphSets = p.parsePointer(markGlyphSets);
        }
        return gdef2;
      }
      var gdef = {parse: parseGDEFTable};
      var subtableParsers$1 = new Array(10);
      subtableParsers$1[1] = function parseLookup1() {
        var start = this.offset + this.relativeOffset;
        var posformat = this.parseUShort();
        if (posformat === 1) {
          return {
            posFormat: 1,
            coverage: this.parsePointer(Parser.coverage),
            value: this.parseValueRecord()
          };
        } else if (posformat === 2) {
          return {
            posFormat: 2,
            coverage: this.parsePointer(Parser.coverage),
            values: this.parseValueRecordList()
          };
        }
        check.assert(false, "0x" + start.toString(16) + ": GPOS lookup type 1 format must be 1 or 2.");
      };
      subtableParsers$1[2] = function parseLookup2() {
        var start = this.offset + this.relativeOffset;
        var posFormat = this.parseUShort();
        check.assert(posFormat === 1 || posFormat === 2, "0x" + start.toString(16) + ": GPOS lookup type 2 format must be 1 or 2.");
        var coverage = this.parsePointer(Parser.coverage);
        var valueFormat1 = this.parseUShort();
        var valueFormat2 = this.parseUShort();
        if (posFormat === 1) {
          return {
            posFormat,
            coverage,
            valueFormat1,
            valueFormat2,
            pairSets: this.parseList(Parser.pointer(Parser.list(function() {
              return {
                secondGlyph: this.parseUShort(),
                value1: this.parseValueRecord(valueFormat1),
                value2: this.parseValueRecord(valueFormat2)
              };
            })))
          };
        } else if (posFormat === 2) {
          var classDef1 = this.parsePointer(Parser.classDef);
          var classDef2 = this.parsePointer(Parser.classDef);
          var class1Count = this.parseUShort();
          var class2Count = this.parseUShort();
          return {
            posFormat,
            coverage,
            valueFormat1,
            valueFormat2,
            classDef1,
            classDef2,
            class1Count,
            class2Count,
            classRecords: this.parseList(class1Count, Parser.list(class2Count, function() {
              return {
                value1: this.parseValueRecord(valueFormat1),
                value2: this.parseValueRecord(valueFormat2)
              };
            }))
          };
        }
      };
      subtableParsers$1[3] = function parseLookup3() {
        return {error: "GPOS Lookup 3 not supported"};
      };
      subtableParsers$1[4] = function parseLookup4() {
        return {error: "GPOS Lookup 4 not supported"};
      };
      subtableParsers$1[5] = function parseLookup5() {
        return {error: "GPOS Lookup 5 not supported"};
      };
      subtableParsers$1[6] = function parseLookup6() {
        return {error: "GPOS Lookup 6 not supported"};
      };
      subtableParsers$1[7] = function parseLookup7() {
        return {error: "GPOS Lookup 7 not supported"};
      };
      subtableParsers$1[8] = function parseLookup8() {
        return {error: "GPOS Lookup 8 not supported"};
      };
      subtableParsers$1[9] = function parseLookup9() {
        return {error: "GPOS Lookup 9 not supported"};
      };
      function parseGposTable(data, start) {
        start = start || 0;
        var p = new Parser(data, start);
        var tableVersion = p.parseVersion(1);
        check.argument(tableVersion === 1 || tableVersion === 1.1, "Unsupported GPOS table version " + tableVersion);
        if (tableVersion === 1) {
          return {
            version: tableVersion,
            scripts: p.parseScriptList(),
            features: p.parseFeatureList(),
            lookups: p.parseLookupList(subtableParsers$1)
          };
        } else {
          return {
            version: tableVersion,
            scripts: p.parseScriptList(),
            features: p.parseFeatureList(),
            lookups: p.parseLookupList(subtableParsers$1),
            variations: p.parseFeatureVariationsList()
          };
        }
      }
      var subtableMakers$1 = new Array(10);
      function makeGposTable(gpos2) {
        return new table.Table("GPOS", [
          {name: "version", type: "ULONG", value: 65536},
          {name: "scripts", type: "TABLE", value: new table.ScriptList(gpos2.scripts)},
          {name: "features", type: "TABLE", value: new table.FeatureList(gpos2.features)},
          {name: "lookups", type: "TABLE", value: new table.LookupList(gpos2.lookups, subtableMakers$1)}
        ]);
      }
      var gpos = {parse: parseGposTable, make: makeGposTable};
      function parseWindowsKernTable(p) {
        var pairs = {};
        p.skip("uShort");
        var subtableVersion = p.parseUShort();
        check.argument(subtableVersion === 0, "Unsupported kern sub-table version.");
        p.skip("uShort", 2);
        var nPairs = p.parseUShort();
        p.skip("uShort", 3);
        for (var i = 0; i < nPairs; i += 1) {
          var leftIndex = p.parseUShort();
          var rightIndex = p.parseUShort();
          var value = p.parseShort();
          pairs[leftIndex + "," + rightIndex] = value;
        }
        return pairs;
      }
      function parseMacKernTable(p) {
        var pairs = {};
        p.skip("uShort");
        var nTables = p.parseULong();
        if (nTables > 1) {
          console.warn("Only the first kern subtable is supported.");
        }
        p.skip("uLong");
        var coverage = p.parseUShort();
        var subtableVersion = coverage & 255;
        p.skip("uShort");
        if (subtableVersion === 0) {
          var nPairs = p.parseUShort();
          p.skip("uShort", 3);
          for (var i = 0; i < nPairs; i += 1) {
            var leftIndex = p.parseUShort();
            var rightIndex = p.parseUShort();
            var value = p.parseShort();
            pairs[leftIndex + "," + rightIndex] = value;
          }
        }
        return pairs;
      }
      function parseKernTable(data, start) {
        var p = new parse.Parser(data, start);
        var tableVersion = p.parseUShort();
        if (tableVersion === 0) {
          return parseWindowsKernTable(p);
        } else if (tableVersion === 1) {
          return parseMacKernTable(p);
        } else {
          throw new Error("Unsupported kern table version (" + tableVersion + ").");
        }
      }
      var kern = {parse: parseKernTable};
      function parseLocaTable(data, start, numGlyphs, shortVersion) {
        var p = new parse.Parser(data, start);
        var parseFn = shortVersion ? p.parseUShort : p.parseULong;
        var glyphOffsets = [];
        for (var i = 0; i < numGlyphs + 1; i += 1) {
          var glyphOffset = parseFn.call(p);
          if (shortVersion) {
            glyphOffset *= 2;
          }
          glyphOffsets.push(glyphOffset);
        }
        return glyphOffsets;
      }
      var loca = {parse: parseLocaTable};
      function loadFromFile(path, callback) {
        var fs = require_fs();
        fs.readFile(path, function(err, buffer) {
          if (err) {
            return callback(err.message);
          }
          callback(null, nodeBufferToArrayBuffer(buffer));
        });
      }
      function loadFromUrl(url, callback) {
        var request = new XMLHttpRequest();
        request.open("get", url, true);
        request.responseType = "arraybuffer";
        request.onload = function() {
          if (request.response) {
            return callback(null, request.response);
          } else {
            return callback("Font could not be loaded: " + request.statusText);
          }
        };
        request.onerror = function() {
          callback("Font could not be loaded");
        };
        request.send();
      }
      function parseOpenTypeTableEntries(data, numTables) {
        var tableEntries = [];
        var p = 12;
        for (var i = 0; i < numTables; i += 1) {
          var tag = parse.getTag(data, p);
          var checksum = parse.getULong(data, p + 4);
          var offset = parse.getULong(data, p + 8);
          var length = parse.getULong(data, p + 12);
          tableEntries.push({tag, checksum, offset, length, compression: false});
          p += 16;
        }
        return tableEntries;
      }
      function parseWOFFTableEntries(data, numTables) {
        var tableEntries = [];
        var p = 44;
        for (var i = 0; i < numTables; i += 1) {
          var tag = parse.getTag(data, p);
          var offset = parse.getULong(data, p + 4);
          var compLength = parse.getULong(data, p + 8);
          var origLength = parse.getULong(data, p + 12);
          var compression = void 0;
          if (compLength < origLength) {
            compression = "WOFF";
          } else {
            compression = false;
          }
          tableEntries.push({
            tag,
            offset,
            compression,
            compressedLength: compLength,
            length: origLength
          });
          p += 20;
        }
        return tableEntries;
      }
      function uncompressTable(data, tableEntry) {
        if (tableEntry.compression === "WOFF") {
          var inBuffer = new Uint8Array(data.buffer, tableEntry.offset + 2, tableEntry.compressedLength - 2);
          var outBuffer = new Uint8Array(tableEntry.length);
          tinyInflate(inBuffer, outBuffer);
          if (outBuffer.byteLength !== tableEntry.length) {
            throw new Error("Decompression error: " + tableEntry.tag + " decompressed length doesn't match recorded length");
          }
          var view = new DataView(outBuffer.buffer, 0);
          return {data: view, offset: 0};
        } else {
          return {data, offset: tableEntry.offset};
        }
      }
      function parseBuffer(buffer, opt) {
        opt = opt === void 0 || opt === null ? {} : opt;
        var indexToLocFormat;
        var ltagTable;
        var font = new Font({empty: true});
        var data = new DataView(buffer, 0);
        var numTables;
        var tableEntries = [];
        var signature = parse.getTag(data, 0);
        if (signature === String.fromCharCode(0, 1, 0, 0) || signature === "true" || signature === "typ1") {
          font.outlinesFormat = "truetype";
          numTables = parse.getUShort(data, 4);
          tableEntries = parseOpenTypeTableEntries(data, numTables);
        } else if (signature === "OTTO") {
          font.outlinesFormat = "cff";
          numTables = parse.getUShort(data, 4);
          tableEntries = parseOpenTypeTableEntries(data, numTables);
        } else if (signature === "wOFF") {
          var flavor = parse.getTag(data, 4);
          if (flavor === String.fromCharCode(0, 1, 0, 0)) {
            font.outlinesFormat = "truetype";
          } else if (flavor === "OTTO") {
            font.outlinesFormat = "cff";
          } else {
            throw new Error("Unsupported OpenType flavor " + signature);
          }
          numTables = parse.getUShort(data, 12);
          tableEntries = parseWOFFTableEntries(data, numTables);
        } else {
          throw new Error("Unsupported OpenType signature " + signature);
        }
        var cffTableEntry;
        var fvarTableEntry;
        var glyfTableEntry;
        var gdefTableEntry;
        var gposTableEntry;
        var gsubTableEntry;
        var hmtxTableEntry;
        var kernTableEntry;
        var locaTableEntry;
        var nameTableEntry;
        var metaTableEntry;
        var p;
        for (var i = 0; i < numTables; i += 1) {
          var tableEntry = tableEntries[i];
          var table2 = void 0;
          switch (tableEntry.tag) {
            case "cmap":
              table2 = uncompressTable(data, tableEntry);
              font.tables.cmap = cmap.parse(table2.data, table2.offset);
              font.encoding = new CmapEncoding(font.tables.cmap);
              break;
            case "cvt ":
              table2 = uncompressTable(data, tableEntry);
              p = new parse.Parser(table2.data, table2.offset);
              font.tables.cvt = p.parseShortList(tableEntry.length / 2);
              break;
            case "fvar":
              fvarTableEntry = tableEntry;
              break;
            case "fpgm":
              table2 = uncompressTable(data, tableEntry);
              p = new parse.Parser(table2.data, table2.offset);
              font.tables.fpgm = p.parseByteList(tableEntry.length);
              break;
            case "head":
              table2 = uncompressTable(data, tableEntry);
              font.tables.head = head.parse(table2.data, table2.offset);
              font.unitsPerEm = font.tables.head.unitsPerEm;
              indexToLocFormat = font.tables.head.indexToLocFormat;
              break;
            case "hhea":
              table2 = uncompressTable(data, tableEntry);
              font.tables.hhea = hhea.parse(table2.data, table2.offset);
              font.ascender = font.tables.hhea.ascender;
              font.descender = font.tables.hhea.descender;
              font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;
              break;
            case "hmtx":
              hmtxTableEntry = tableEntry;
              break;
            case "ltag":
              table2 = uncompressTable(data, tableEntry);
              ltagTable = ltag.parse(table2.data, table2.offset);
              break;
            case "maxp":
              table2 = uncompressTable(data, tableEntry);
              font.tables.maxp = maxp.parse(table2.data, table2.offset);
              font.numGlyphs = font.tables.maxp.numGlyphs;
              break;
            case "name":
              nameTableEntry = tableEntry;
              break;
            case "OS/2":
              table2 = uncompressTable(data, tableEntry);
              font.tables.os2 = os2.parse(table2.data, table2.offset);
              break;
            case "post":
              table2 = uncompressTable(data, tableEntry);
              font.tables.post = post.parse(table2.data, table2.offset);
              font.glyphNames = new GlyphNames(font.tables.post);
              break;
            case "prep":
              table2 = uncompressTable(data, tableEntry);
              p = new parse.Parser(table2.data, table2.offset);
              font.tables.prep = p.parseByteList(tableEntry.length);
              break;
            case "glyf":
              glyfTableEntry = tableEntry;
              break;
            case "loca":
              locaTableEntry = tableEntry;
              break;
            case "CFF ":
              cffTableEntry = tableEntry;
              break;
            case "kern":
              kernTableEntry = tableEntry;
              break;
            case "GDEF":
              gdefTableEntry = tableEntry;
              break;
            case "GPOS":
              gposTableEntry = tableEntry;
              break;
            case "GSUB":
              gsubTableEntry = tableEntry;
              break;
            case "meta":
              metaTableEntry = tableEntry;
              break;
          }
        }
        var nameTable = uncompressTable(data, nameTableEntry);
        font.tables.name = _name.parse(nameTable.data, nameTable.offset, ltagTable);
        font.names = font.tables.name;
        if (glyfTableEntry && locaTableEntry) {
          var shortVersion = indexToLocFormat === 0;
          var locaTable = uncompressTable(data, locaTableEntry);
          var locaOffsets = loca.parse(locaTable.data, locaTable.offset, font.numGlyphs, shortVersion);
          var glyfTable = uncompressTable(data, glyfTableEntry);
          font.glyphs = glyf.parse(glyfTable.data, glyfTable.offset, locaOffsets, font, opt);
        } else if (cffTableEntry) {
          var cffTable = uncompressTable(data, cffTableEntry);
          cff.parse(cffTable.data, cffTable.offset, font, opt);
        } else {
          throw new Error("Font doesn't contain TrueType or CFF outlines.");
        }
        var hmtxTable = uncompressTable(data, hmtxTableEntry);
        hmtx.parse(font, hmtxTable.data, hmtxTable.offset, font.numberOfHMetrics, font.numGlyphs, font.glyphs, opt);
        addGlyphNames(font, opt);
        if (kernTableEntry) {
          var kernTable = uncompressTable(data, kernTableEntry);
          font.kerningPairs = kern.parse(kernTable.data, kernTable.offset);
        } else {
          font.kerningPairs = {};
        }
        if (gdefTableEntry) {
          var gdefTable = uncompressTable(data, gdefTableEntry);
          font.tables.gdef = gdef.parse(gdefTable.data, gdefTable.offset);
        }
        if (gposTableEntry) {
          var gposTable = uncompressTable(data, gposTableEntry);
          font.tables.gpos = gpos.parse(gposTable.data, gposTable.offset);
          font.position.init();
        }
        if (gsubTableEntry) {
          var gsubTable = uncompressTable(data, gsubTableEntry);
          font.tables.gsub = gsub.parse(gsubTable.data, gsubTable.offset);
        }
        if (fvarTableEntry) {
          var fvarTable = uncompressTable(data, fvarTableEntry);
          font.tables.fvar = fvar.parse(fvarTable.data, fvarTable.offset, font.names);
        }
        if (metaTableEntry) {
          var metaTable = uncompressTable(data, metaTableEntry);
          font.tables.meta = meta.parse(metaTable.data, metaTable.offset);
          font.metas = font.tables.meta;
        }
        return font;
      }
      function load(url, callback, opt) {
        opt = opt === void 0 || opt === null ? {} : opt;
        var isNode = typeof window === "undefined";
        var loadFn = isNode && !opt.isUrl ? loadFromFile : loadFromUrl;
        return new Promise(function(resolve, reject) {
          loadFn(url, function(err, arrayBuffer) {
            if (err) {
              if (callback) {
                return callback(err);
              } else {
                reject(err);
              }
            }
            var font;
            try {
              font = parseBuffer(arrayBuffer, opt);
            } catch (e) {
              if (callback) {
                return callback(e, null);
              } else {
                reject(e);
              }
            }
            if (callback) {
              return callback(null, font);
            } else {
              resolve(font);
            }
          });
        });
      }
      function loadSync(url, opt) {
        var fs = require_fs();
        var buffer = fs.readFileSync(url);
        return parseBuffer(nodeBufferToArrayBuffer(buffer), opt);
      }
      var opentype = /* @__PURE__ */ Object.freeze({
        __proto__: null,
        Font,
        Glyph,
        Path,
        BoundingBox,
        _parse: parse,
        parse: parseBuffer,
        load,
        loadSync
      });
      exports2.BoundingBox = BoundingBox;
      exports2.Font = Font;
      exports2.Glyph = Glyph;
      exports2.Path = Path;
      exports2._parse = parse;
      exports2.default = opentype;
      exports2.load = load;
      exports2.loadSync = loadSync;
      exports2.parse = parseBuffer;
      Object.defineProperty(exports2, "__esModule", {value: true});
    });
  });

  // lib/utilities/svg.js
  var require_svg = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get default() {
        return _default;
      },
      get svgFromCodePoint() {
        return svgFromCodePoint;
      }
    });
    var _opentype = require_opentype();
    function svgFromCodePoint(codePoint, arrayBuffer) {
      var font = (0, _opentype.parse)(arrayBuffer), character = String.fromCodePoint(codePoint), glyph = font.charToGlyph(character), path = glyph.getPath(0, 0, 1e3), pathData = path.toPathData(), boundingBox = path.getBoundingBox();
      var x1 = boundingBox.x1, y1 = boundingBox.y1, x2 = boundingBox.x2, y2 = boundingBox.y2, x = x1, y = y1, width = x2 - x1, height = y2 - y1, viewBox = "".concat(x, " ").concat(y, " ").concat(width, " ").concat(height), d = pathData;
      return /* @__PURE__ */ React.createElement("svg", {
        viewBox
      }, /* @__PURE__ */ React.createElement("path", {
        d
      }));
    }
    var _default = {
      svgFromCodePoint
    };
  });

  // lib/style/stix.js
  var require_stix = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var stixStyle = '\n\n  @font-face {\n    src: url("font/STIXTwoMath-Regular.woff2");\n    font-family: "STIXTwoMath";\n    font-weight: normal;\n    font-style: normal;\n  }\n    \n  @font-face {\n    src: url("font/STIXTwoText-Regular.woff2");\n    font-family: "STIXTwoText";\n    font-weight: normal;\n    font-style: normal;\n  }\n    \n  @font-face {\n    src: url("font/STIXTwoText-Bold.woff2");\n    font-family: "STIXTwoText";\n    font-weight: bold;\n    font-style: normal;\n  }\n    \n  @font-face {\n    src: url("font/STIXTwoText-Italic.woff2");\n    font-family: "STIXTwoText";\n    font-weight: normal;\n    font-style: italic;\n  }\n    \n  @font-face {\n    src: url("font/STIXTwoText-BoldItalic.woff2");\n    font-family: "STIXTwoText";\n    font-weight: bold;\n    font-style: italic;\n  }      \n      \n';
    var _default = stixStyle;
  });

  // lib/constants.js
  var require_constants7 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "FONT", {
      enumerable: true,
      get: function() {
        return FONT;
      }
    });
    var FONT = "font";
  });

  // lib/getFontDirectoryPath.js
  var require_getFontDirectoryPath = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return getFontDirectoryPath;
      }
    });
    var _necessary = require_browser();
    var _constants = require_constants7();
    var second = _necessary.arrayUtilities.second;
    var concatenatePaths = _necessary.pathUtilities.concatenatePaths;
    function getFontDirectoryPath() {
      var matches = __dirname.match(/^(.+)[\/\\]lib$/), secondMatch = second(matches), packageDirectoryPath = secondMatch, fontDirectoryPath = concatenatePaths(packageDirectoryPath, _constants.FONT);
      return fontDirectoryPath;
    }
  });

  // lib/index.js
  var require_lib8 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, {
          enumerable: true,
          get: Object.getOwnPropertyDescriptor(all, name).get
        });
    }
    _export(exports, {
      get alphaNumericCharacterMaps() {
        return _alphaNumeric.default;
      },
      get getFontDirectoryPath() {
        return _getFontDirectoryPath.default;
      },
      get stixStyle() {
        return _stix.default;
      },
      get svgUtilities() {
        return _svg.default;
      },
      get symbolicCharacterMap() {
        return _symbolic.default;
      },
      get symbolicCharacterMaps() {
        return _symbolic1.default;
      }
    });
    var _symbolic = /* @__PURE__ */ _interop_require_default(require_symbolic());
    var _symbolic1 = /* @__PURE__ */ _interop_require_default(require_symbolic2());
    var _alphaNumeric = /* @__PURE__ */ _interop_require_default(require_alphaNumeric());
    var _svg = /* @__PURE__ */ _interop_require_default(require_svg());
    var _stix = /* @__PURE__ */ _interop_require_default(require_stix());
    var _getFontDirectoryPath = /* @__PURE__ */ _interop_require_default(require_getFontDirectoryPath());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  });

  // lib/example/style/juliaMono.js
  var require_juliaMono = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var juliaMonoStyle = '\n\n  @font-face {\n    src: url("font/JuliaMono-Regular.woff2");\n    font-family: "JuliaMono";\n    font-weight: normal;\n  }\n  \n';
    var _default = juliaMonoStyle;
  });

  // lib/example/view.js
  var require_view = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return View;
      }
    });
    var _easy = require_lib();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _is_native_function(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _wrap_native_super(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrap_native_super = function wrapNativeSuper(Class2) {
        if (Class2 === null || !_is_native_function(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _get_prototype_of(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _set_prototype_of(Wrapper, Class2);
      };
      return _wrap_native_super(Class);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var View = /* @__PURE__ */ function(Element) {
      _inherits(View2, Element);
      function View2() {
        _class_call_check(this, View2);
        return _call_super(this, View2, arguments);
      }
      return View2;
    }(_wrap_native_super(_easy.Element));
    _define_property(View, "tagName", "div");
    _define_property(View, "defaultProperties", {
      className: "view"
    });
  });

  // lib/example/view/glyphsAsSVGs.js
  var require_glyphsAsSVGs = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return GlyphsAsSVGsView;
      }
    });
    var _index = require_lib8();
    var _necessary = require_browser();
    var _view = /* @__PURE__ */ _interop_require_default(require_view());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var get = _necessary.ajaxUtilities.get;
    var svgFromCodePoint = _index.svgUtilities.svgFromCodePoint;
    var GlyphsAsSVGsView = /* @__PURE__ */ function(View) {
      _inherits(GlyphsAsSVGsView2, View);
      function GlyphsAsSVGsView2() {
        _class_call_check(this, GlyphsAsSVGsView2);
        return _call_super(this, GlyphsAsSVGsView2, arguments);
      }
      _create_class(GlyphsAsSVGsView2, [
        {
          key: "didMount",
          value: function didMount() {
            var _this = this;
            var codePoint = 120120, fontName = "STIXTwoMath-Regular.otf", host = "http://localhost:8888/", uri = "ttf/".concat(fontName), query = {}, headers = {
              accept: "font/ttf"
            }, responseType = "arraybuffer";
            get(host, uri, query, headers, responseType, function(arrayBuffer) {
              var svg = svgFromCodePoint(codePoint, arrayBuffer);
              _this.mount(svg);
            });
          }
        },
        {
          key: "willUnmount",
          value: function willUnmount() {
          }
        }
      ]);
      return GlyphsAsSVGsView2;
    }(_view.default);
    _define_property(GlyphsAsSVGsView, "defaultProperties", {
      className: "glyphs-as-svgs"
    });
  });

  // lib/example/view/tableCell.js
  var require_tableCell = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return TableCell;
      }
    });
    var _easy = require_lib();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _is_native_function(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _wrap_native_super(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrap_native_super = function wrapNativeSuper(Class2) {
        if (Class2 === null || !_is_native_function(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _get_prototype_of(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _set_prototype_of(Wrapper, Class2);
      };
      return _wrap_native_super(Class);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var TableCell = /* @__PURE__ */ function(Element) {
      _inherits(TableCell2, Element);
      function TableCell2() {
        _class_call_check(this, TableCell2);
        return _call_super(this, TableCell2, arguments);
      }
      return TableCell2;
    }(_wrap_native_super(_easy.Element));
    _define_property(TableCell, "tagName", "td");
  });

  // lib/example/view/span.js
  var require_span = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _easywithstyle = /* @__PURE__ */ _interop_require_default(require_lib7());
    var _easy = require_lib();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _is_native_function(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _tagged_template_literal(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _wrap_native_super(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrap_native_super = function wrapNativeSuper(Class2) {
        if (Class2 === null || !_is_native_function(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _get_prototype_of(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _set_prototype_of(Wrapper, Class2);
      };
      return _wrap_native_super(Class);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    function _templateObject() {
      var data = _tagged_template_literal([
        "\n\n  width: 5rem;\n  height: 5rem;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: center;\n\n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var Span = /* @__PURE__ */ function(Element) {
      _inherits(Span2, Element);
      function Span2() {
        _class_call_check(this, Span2);
        return _call_super(this, Span2, arguments);
      }
      return Span2;
    }(_wrap_native_super(_easy.Element));
    _define_property(Span, "tagName", "span");
    var _default = (0, _easywithstyle.default)(Span)(_templateObject());
  });

  // lib/example/view/span/codePoint.js
  var require_codePoint = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _easywithstyle = /* @__PURE__ */ _interop_require_default(require_lib7());
    var _span = /* @__PURE__ */ _interop_require_default(require_span());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _tagged_template_literal(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    function _templateObject() {
      var data = _tagged_template_literal([
        "\n\n  width: 12rem;\n  font-size: 2rem;\n  padding-right: 1rem;\n  font-family: monospace;\n  justify-content: flex-end;\n  \n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var CodePointSpan = /* @__PURE__ */ function(Span) {
      _inherits(CodePointSpan2, Span);
      function CodePointSpan2() {
        _class_call_check(this, CodePointSpan2);
        return _call_super(this, CodePointSpan2, arguments);
      }
      _create_class(CodePointSpan2, [
        {
          key: "childElements",
          value: function childElements() {
            var codePoint = this.properties.codePoint, hexCodePoint = codePoint.toString(16), childElements2 = "0x".concat(hexCodePoint);
            return childElements2;
          }
        }
      ]);
      return CodePointSpan2;
    }(_span.default);
    _define_property(CodePointSpan, "ignoredProperties", [
      "codePoint"
    ]);
    _define_property(CodePointSpan, "defaultProperties", {
      className: "code-point"
    });
    var _default = (0, _easywithstyle.default)(CodePointSpan)(_templateObject());
  });

  // lib/example/view/tableCell/codePoint.js
  var require_codePoint2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CodePointTableCell;
      }
    });
    var _tableCell = /* @__PURE__ */ _interop_require_default(require_tableCell());
    var _codePoint = /* @__PURE__ */ _interop_require_default(require_codePoint());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var CodePointTableCell = /* @__PURE__ */ function(TableCell) {
      _inherits(CodePointTableCell2, TableCell);
      function CodePointTableCell2() {
        _class_call_check(this, CodePointTableCell2);
        return _call_super(this, CodePointTableCell2, arguments);
      }
      _create_class(CodePointTableCell2, [
        {
          key: "childElements",
          value: function childElements() {
            var codePoint = this.properties.codePoint;
            return /* @__PURE__ */ React.createElement(_codePoint.default, {
              codePoint
            });
          }
        }
      ]);
      return CodePointTableCell2;
    }(_tableCell.default);
    _define_property(CodePointTableCell, "ignoredProperties", [
      "codePoint"
    ]);
    _define_property(CodePointTableCell, "defaultProperties", {
      className: "code-point"
    });
  });

  // lib/example/view/span/character.js
  var require_character = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _easywithstyle = /* @__PURE__ */ _interop_require_default(require_lib7());
    var _span = /* @__PURE__ */ _interop_require_default(require_span());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _tagged_template_literal(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    function _templateObject() {
      var data = _tagged_template_literal([
        "\n\n  width: 64rem;\n  font-size: 2rem;\n  white-space: nowrap;\n  justify-content: flex-start;\n  \n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var CharacterSpan = /* @__PURE__ */ function(Span) {
      _inherits(CharacterSpan2, Span);
      function CharacterSpan2() {
        _class_call_check(this, CharacterSpan2);
        return _call_super(this, CharacterSpan2, arguments);
      }
      _create_class(CharacterSpan2, [
        {
          key: "childElements",
          value: function childElements() {
            var character = this.properties.character, childElements2 = character;
            return childElements2;
          }
        }
      ]);
      return CharacterSpan2;
    }(_span.default);
    _define_property(CharacterSpan, "ignoredProperties", [
      "character"
    ]);
    _define_property(CharacterSpan, "defaultProperties", {
      className: "character"
    });
    var _default = (0, _easywithstyle.default)(CharacterSpan)(_templateObject());
  });

  // lib/example/view/tableCell/character.js
  var require_character2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CharacterTableCell;
      }
    });
    var _tableCell = /* @__PURE__ */ _interop_require_default(require_tableCell());
    var _character = /* @__PURE__ */ _interop_require_default(require_character());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var CharacterTableCell = /* @__PURE__ */ function(TableCell) {
      _inherits(CharacterTableCell2, TableCell);
      function CharacterTableCell2() {
        _class_call_check(this, CharacterTableCell2);
        return _call_super(this, CharacterTableCell2, arguments);
      }
      _create_class(CharacterTableCell2, [
        {
          key: "childElements",
          value: function childElements() {
            var character = this.properties.character;
            return /* @__PURE__ */ React.createElement(_character.default, {
              character
            });
          }
        }
      ]);
      return CharacterTableCell2;
    }(_tableCell.default);
    _define_property(CharacterTableCell, "ignoredProperties", [
      "character"
    ]);
    _define_property(CharacterTableCell, "defaultProperties", {
      className: "character"
    });
  });

  // lib/example/view/span/glyph.js
  var require_glyph = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return GlyphSpan;
      }
    });
    var _span = /* @__PURE__ */ _interop_require_default(require_span());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var GlyphSpan = /* @__PURE__ */ function(Span) {
      _inherits(GlyphSpan2, Span);
      function GlyphSpan2() {
        _class_call_check(this, GlyphSpan2);
        return _call_super(this, GlyphSpan2, arguments);
      }
      _create_class(GlyphSpan2, [
        {
          key: "childElements",
          value: function childElements() {
            var codePoint = this.properties.codePoint, string = String.fromCodePoint(codePoint), childElements2 = string;
            return childElements2;
          }
        }
      ]);
      return GlyphSpan2;
    }(_span.default);
    _define_property(GlyphSpan, "ignoredProperties", [
      "codePoint"
    ]);
    _define_property(GlyphSpan, "defaultProperties", {
      className: "glyph"
    });
  });

  // lib/example/view/span/glyph/stix.js
  var require_stix2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _easywithstyle = /* @__PURE__ */ _interop_require_default(require_lib7());
    var _glyph = /* @__PURE__ */ _interop_require_default(require_glyph());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _tagged_template_literal(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    function _templateObject() {
      var data = _tagged_template_literal([
        '\n\n  font-size: 3rem;\n  font-style: normal;\n  font-weight: normal;\n  font-family: "STIXTwoText STIXTwoMath";\n  font-kerning: none;\n  font-synthesis: none;\n  font-variant-ligatures: none;  \n\n  .italic {\n    font-style: italic;\n  }\n\n  .bold {\n    font-weight: bold;\n  }\n  \n'
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var STIXGlyphSpan = /* @__PURE__ */ function(GlyphSpan) {
      _inherits(STIXGlyphSpan2, GlyphSpan);
      function STIXGlyphSpan2() {
        _class_call_check(this, STIXGlyphSpan2);
        return _call_super(this, STIXGlyphSpan2, arguments);
      }
      return STIXGlyphSpan2;
    }(_glyph.default);
    _define_property(STIXGlyphSpan, "defaultProperties", {
      className: "stix"
    });
    var _default = (0, _easywithstyle.default)(STIXGlyphSpan)(_templateObject());
  });

  // lib/example/view/tableCell/glyph.js
  var require_glyph2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return GlyphTableCell;
      }
    });
    var _tableCell = /* @__PURE__ */ _interop_require_default(require_tableCell());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var GlyphTableCell = /* @__PURE__ */ function(TableCell) {
      _inherits(GlyphTableCell2, TableCell);
      function GlyphTableCell2() {
        _class_call_check(this, GlyphTableCell2);
        return _call_super(this, GlyphTableCell2, arguments);
      }
      return GlyphTableCell2;
    }(_tableCell.default);
    _define_property(GlyphTableCell, "ignoredProperties", [
      "codePoint"
    ]);
    _define_property(GlyphTableCell, "defaultProperties", {
      className: "glyph"
    });
  });

  // lib/example/view/tableCell/glyph/stix.js
  var require_stix3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return StixGlyphTableCell;
      }
    });
    var _stix = /* @__PURE__ */ _interop_require_default(require_stix2());
    var _glyph = /* @__PURE__ */ _interop_require_default(require_glyph2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var StixGlyphTableCell = /* @__PURE__ */ function(GlyphTableCell) {
      _inherits(StixGlyphTableCell2, GlyphTableCell);
      function StixGlyphTableCell2() {
        _class_call_check(this, StixGlyphTableCell2);
        return _call_super(this, StixGlyphTableCell2, arguments);
      }
      _create_class(StixGlyphTableCell2, [
        {
          key: "childElements",
          value: function childElements() {
            var codePoint = this.properties.codePoint;
            return /* @__PURE__ */ React.createElement(_stix.default, {
              codePoint
            });
          }
        }
      ]);
      return StixGlyphTableCell2;
    }(_glyph.default);
    _define_property(StixGlyphTableCell, "defaultProperties", {
      className: "stix"
    });
  });

  // lib/example/view/span/glyph/juliaMono.js
  var require_juliaMono2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _easywithstyle = /* @__PURE__ */ _interop_require_default(require_lib7());
    var _glyph = /* @__PURE__ */ _interop_require_default(require_glyph());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _tagged_template_literal(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    function _templateObject() {
      var data = _tagged_template_literal([
        '\n\n  color: white;\n  font-size: 3rem;\n  font-style: normal;\n  font-weight: normal;\n  background-color: black;\n  \n  font-family: "JuliaMono";\n  font-kerning: none;\n  font-synthesis: none;\n  font-variant-ligatures: none;  \n\n'
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var JuliaMonoGlyphSpan = /* @__PURE__ */ function(GlyphSpan) {
      _inherits(JuliaMonoGlyphSpan2, GlyphSpan);
      function JuliaMonoGlyphSpan2() {
        _class_call_check(this, JuliaMonoGlyphSpan2);
        return _call_super(this, JuliaMonoGlyphSpan2, arguments);
      }
      return JuliaMonoGlyphSpan2;
    }(_glyph.default);
    _define_property(JuliaMonoGlyphSpan, "defaultProperties", {
      className: "julia-mono"
    });
    var _default = (0, _easywithstyle.default)(JuliaMonoGlyphSpan)(_templateObject());
  });

  // lib/example/view/tableCell/glyph/juliaMono.js
  var require_juliaMono3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return JuliaMonoGlyphTableCell;
      }
    });
    var _glyph = /* @__PURE__ */ _interop_require_default(require_glyph2());
    var _juliaMono = /* @__PURE__ */ _interop_require_default(require_juliaMono2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var JuliaMonoGlyphTableCell = /* @__PURE__ */ function(GlyphTableCell) {
      _inherits(JuliaMonoGlyphTableCell2, GlyphTableCell);
      function JuliaMonoGlyphTableCell2() {
        _class_call_check(this, JuliaMonoGlyphTableCell2);
        return _call_super(this, JuliaMonoGlyphTableCell2, arguments);
      }
      _create_class(JuliaMonoGlyphTableCell2, [
        {
          key: "childElements",
          value: function childElements() {
            var codePoint = this.properties.codePoint;
            return /* @__PURE__ */ React.createElement(_juliaMono.default, {
              codePoint
            });
          }
        }
      ]);
      return JuliaMonoGlyphTableCell2;
    }(_glyph.default);
    _define_property(JuliaMonoGlyphTableCell, "defaultProperties", {
      className: "julia-mono"
    });
  });

  // lib/example/view/tableRow/glyphs.js
  var require_glyphs = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return GlyphsTableRow;
      }
    });
    var _easy = require_lib();
    var _codePoint = /* @__PURE__ */ _interop_require_default(require_codePoint2());
    var _character = /* @__PURE__ */ _interop_require_default(require_character2());
    var _stix = /* @__PURE__ */ _interop_require_default(require_stix3());
    var _juliaMono = /* @__PURE__ */ _interop_require_default(require_juliaMono3());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _is_native_function(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _wrap_native_super(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrap_native_super = function wrapNativeSuper(Class2) {
        if (Class2 === null || !_is_native_function(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _get_prototype_of(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _set_prototype_of(Wrapper, Class2);
      };
      return _wrap_native_super(Class);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var GlyphsTableRow = /* @__PURE__ */ function(Element) {
      _inherits(GlyphsTableRow2, Element);
      function GlyphsTableRow2() {
        _class_call_check(this, GlyphsTableRow2);
        return _call_super(this, GlyphsTableRow2, arguments);
      }
      _create_class(GlyphsTableRow2, [
        {
          key: "childElements",
          value: function childElements() {
            var _this_properties = this.properties, showCharacter = _this_properties.showCharacter, characterMap = _this_properties.characterMap, character = _this_properties.character, codePoint = characterMap[character], childElements2 = [
              /* @__PURE__ */ React.createElement(_codePoint.default, {
                codePoint
              }),
              /* @__PURE__ */ React.createElement(_juliaMono.default, {
                codePoint
              }),
              /* @__PURE__ */ React.createElement(_stix.default, {
                codePoint
              })
            ];
            if (showCharacter) {
              childElements2.unshift(/* @__PURE__ */ React.createElement(_character.default, {
                character
              }));
            }
            return childElements2;
          }
        }
      ]);
      return GlyphsTableRow2;
    }(_wrap_native_super(_easy.Element));
    _define_property(GlyphsTableRow, "tagName", "tr");
    _define_property(GlyphsTableRow, "ignoredProperties", [
      "character",
      "characterMap",
      "showCharacter"
    ]);
    _define_property(GlyphsTableRow, "defaultProperties", {
      className: "glyphs"
    });
  });

  // lib/example/view/table/glyphs.js
  var require_glyphs2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _easywithstyle = /* @__PURE__ */ _interop_require_default(require_lib7());
    var _easy = require_lib();
    var _glyphs = /* @__PURE__ */ _interop_require_default(require_glyphs());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _construct(Parent, args, Class) {
      if (_is_native_reflect_construct()) {
        _construct = Reflect.construct;
      } else {
        _construct = function construct(Parent2, args2, Class2) {
          var a = [
            null
          ];
          a.push.apply(a, args2);
          var Constructor = Function.bind.apply(Parent2, a);
          var instance = new Constructor();
          if (Class2)
            _set_prototype_of(instance, Class2.prototype);
          return instance;
        };
      }
      return _construct.apply(null, arguments);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _is_native_function(fn) {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _tagged_template_literal(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _wrap_native_super(Class) {
      var _cache = typeof Map === "function" ? new Map() : void 0;
      _wrap_native_super = function wrapNativeSuper(Class2) {
        if (Class2 === null || !_is_native_function(Class2))
          return Class2;
        if (typeof Class2 !== "function") {
          throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
          if (_cache.has(Class2))
            return _cache.get(Class2);
          _cache.set(Class2, Wrapper);
        }
        function Wrapper() {
          return _construct(Class2, arguments, _get_prototype_of(this).constructor);
        }
        Wrapper.prototype = Object.create(Class2.prototype, {
          constructor: {
            value: Wrapper,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        return _set_prototype_of(Wrapper, Class2);
      };
      return _wrap_native_super(Class);
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    function _templateObject() {
      var data = _tagged_template_literal([
        "\n\n  margin: 2rem;\n  border-collapse: collapse;\n  \n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var GlyphsTable = /* @__PURE__ */ function(Element) {
      _inherits(GlyphsTable2, Element);
      function GlyphsTable2() {
        _class_call_check(this, GlyphsTable2);
        return _call_super(this, GlyphsTable2, arguments);
      }
      _create_class(GlyphsTable2, [
        {
          key: "childElements",
          value: function childElements() {
            var _this_properties = this.properties, characterMap = _this_properties.characterMap, showCharacter = _this_properties.showCharacter, characters = Object.keys(characterMap), glyphsTableRows = characters.map(function(character) {
              return /* @__PURE__ */ React.createElement(_glyphs.default, {
                showCharacter,
                characterMap,
                character
              });
            }), childElements2 = glyphsTableRows;
            return childElements2;
          }
        }
      ]);
      return GlyphsTable2;
    }(_wrap_native_super(_easy.Element));
    _define_property(GlyphsTable, "tagName", "table");
    _define_property(GlyphsTable, "ignoredProperties", [
      "characterMap",
      "showCharacter"
    ]);
    _define_property(GlyphsTable, "defaultProperties", {
      className: "glyphs"
    });
    var _default = (0, _easywithstyle.default)(GlyphsTable)(_templateObject());
  });

  // lib/example/view/characters.js
  var require_characters2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CharactersView;
      }
    });
    var _necessary = require_browser();
    var _view = /* @__PURE__ */ _interop_require_default(require_view());
    var _glyphs = /* @__PURE__ */ _interop_require_default(require_glyphs2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var first = _necessary.arrayUtilities.first;
    var CharactersView = /* @__PURE__ */ function(View) {
      _inherits(CharactersView2, View);
      function CharactersView2() {
        _class_call_check(this, CharactersView2);
        var _this;
        _this = _call_super(this, CharactersView2, arguments), _define_property(_this, "selectChangeHandler", function(event, element) {
          var charactersSelect = element, charactersName = charactersSelect.getCharactersName();
          _this.unmountGlyphTable();
          _this.mountGlyphTable(charactersName);
        });
        return _this;
      }
      _create_class(CharactersView2, [
        {
          key: "mountGlyphTable",
          value: function mountGlyphTable(charactersName) {
            var _this_constructor = this.constructor, characterMaps = _this_constructor.characterMaps, showCharacter = _this_constructor.showCharacter, characterMap = characterMaps[charactersName], glyphTable = /* @__PURE__ */ React.createElement(_glyphs.default, {
              characterMap,
              showCharacter
            });
            this.mount(glyphTable);
          }
        },
        {
          key: "unmountGlyphTable",
          value: function unmountGlyphTable() {
            var glyphsTable = this.getGlyphsTable();
            if (glyphsTable !== null) {
              this.unmount(glyphsTable);
            }
          }
        },
        {
          key: "getGlyphsTable",
          value: function getGlyphsTable() {
            var glyphTable = null;
            var glyphsTableChildElements = this.getChildElements("table.glyphs"), glyphsTableChildElementsLength = glyphsTableChildElements.length;
            if (glyphsTableChildElementsLength > 0) {
              var firstGlyphsTableChildElement = first(glyphsTableChildElements);
              glyphTable = firstGlyphsTableChildElement;
            }
            return glyphTable;
          }
        },
        {
          key: "didMount",
          value: function didMount() {
            var characterMaps = this.constructor.characterMaps, charactersNames = Object.keys(characterMaps), firstCharactersName = first(charactersNames), charactersName = firstCharactersName;
            this.mountGlyphTable(charactersName);
          }
        },
        {
          key: "willUnmount",
          value: function willUnmount() {
          }
        },
        {
          key: "childElements",
          value: function childElements() {
            var CharactersSelect = this.constructor.CharactersSelect;
            return /* @__PURE__ */ React.createElement(CharactersSelect, {
              onChange: this.selectChangeHandler
            });
          }
        }
      ]);
      return CharactersView2;
    }(_view.default);
    _define_property(CharactersView, "defaultProperties", {
      className: "characters"
    });
  });

  // lib/example/view/select.js
  var require_select2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _default;
      }
    });
    var _easywithstyle = /* @__PURE__ */ _interop_require_default(require_lib7());
    var _easy = require_lib();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _tagged_template_literal(strings, raw) {
      if (!raw) {
        raw = strings.slice(0);
      }
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    }
    function _templateObject() {
      var data = _tagged_template_literal([
        "\n\n  width: 32rem;\n  margin: 1rem;\n  border: 1px solid black;\n  font-size: 2rem;\n  font-family: serif;\n  \n"
      ]);
      _templateObject = function _templateObject2() {
        return data;
      };
      return data;
    }
    var _default = (0, _easywithstyle.default)(_easy.Select)(_templateObject());
  });

  // lib/example/utilities/case.js
  var require_case = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "camelCaseToPlainEnglish", {
      enumerable: true,
      get: function() {
        return camelCaseToPlainEnglish;
      }
    });
    function camelCaseToPlainEnglish(camelCaseString) {
      var camelCaseStringWithSpaces = camelCaseString.replace(/([A-Z])/g, " $1"), lowercaseStringWithSpaces = camelCaseStringWithSpaces.toLowerCase(), firstCharacter = lowercaseStringWithSpaces.charAt(0), remainingCharacters = lowercaseStringWithSpaces.slice(1), upperCaseFirstCharacter = firstCharacter.toUpperCase(), plainEnglishString = upperCaseFirstCharacter + remainingCharacters;
      return plainEnglishString;
    }
  });

  // lib/example/view/select/characters.js
  var require_characters3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return CharactersSelect;
      }
    });
    var _select = /* @__PURE__ */ _interop_require_default(require_select2());
    var _case = require_case();
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var CharactersSelect = /* @__PURE__ */ function(Select) {
      _inherits(CharactersSelect2, Select);
      function CharactersSelect2() {
        _class_call_check(this, CharactersSelect2);
        return _call_super(this, CharactersSelect2, arguments);
      }
      _create_class(CharactersSelect2, [
        {
          key: "getCharactersName",
          value: function getCharactersName() {
            var value = this.getValue(), charactersName = value;
            return charactersName;
          }
        },
        {
          key: "childElements",
          value: function childElements() {
            var characterMaps = this.constructor.characterMaps, charactersNames = Object.keys(characterMaps), options = charactersNames.map(function(charactersName, index) {
              var camelCaseString = charactersName, plainEnglishString = (0, _case.camelCaseToPlainEnglish)(camelCaseString), value = charactersName, name = plainEnglishString;
              return /* @__PURE__ */ React.createElement("option", {
                value
              }, name);
            }), childElements2 = options;
            return childElements2;
          }
        }
      ]);
      return CharactersSelect2;
    }(_select.default);
    _define_property(CharactersSelect, "defaultProperties", {
      className: "characters"
    });
  });

  // lib/example/view/select/characters/symbolic.js
  var require_symbolic3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return SymbolicCharactersSelect;
      }
    });
    var _index = require_lib8();
    var _characters = /* @__PURE__ */ _interop_require_default(require_characters3());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var SymbolicCharactersSelect = /* @__PURE__ */ function(CharactersSelect) {
      _inherits(SymbolicCharactersSelect2, CharactersSelect);
      function SymbolicCharactersSelect2() {
        _class_call_check(this, SymbolicCharactersSelect2);
        return _call_super(this, SymbolicCharactersSelect2, arguments);
      }
      return SymbolicCharactersSelect2;
    }(_characters.default);
    _define_property(SymbolicCharactersSelect, "characterMaps", _index.symbolicCharacterMaps);
    _define_property(SymbolicCharactersSelect, "defaultProperties", {
      className: "symbolicC"
    });
  });

  // lib/example/view/characters/symbolic.js
  var require_symbolic4 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return SymbolicCharactersView;
      }
    });
    var _index = require_lib8();
    var _characters = /* @__PURE__ */ _interop_require_default(require_characters2());
    var _symbolic = /* @__PURE__ */ _interop_require_default(require_symbolic3());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var SymbolicCharactersView = /* @__PURE__ */ function(CharactersView) {
      _inherits(SymbolicCharactersView2, CharactersView);
      function SymbolicCharactersView2() {
        _class_call_check(this, SymbolicCharactersView2);
        return _call_super(this, SymbolicCharactersView2, arguments);
      }
      return SymbolicCharactersView2;
    }(_characters.default);
    _define_property(SymbolicCharactersView, "CharactersSelect", _symbolic.default);
    _define_property(SymbolicCharactersView, "characterMaps", _index.symbolicCharacterMaps);
    _define_property(SymbolicCharactersView, "showCharacter", true);
  });

  // lib/example/view/select/characters/alphaNumeric.js
  var require_alphaNumeric2 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return AlphaNumericCharactersSelect;
      }
    });
    var _index = require_lib8();
    var _characters = /* @__PURE__ */ _interop_require_default(require_characters3());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var AlphaNumericCharactersSelect = /* @__PURE__ */ function(CharactersSelect) {
      _inherits(AlphaNumericCharactersSelect2, CharactersSelect);
      function AlphaNumericCharactersSelect2() {
        _class_call_check(this, AlphaNumericCharactersSelect2);
        return _call_super(this, AlphaNumericCharactersSelect2, arguments);
      }
      return AlphaNumericCharactersSelect2;
    }(_characters.default);
    _define_property(AlphaNumericCharactersSelect, "characterMaps", _index.alphaNumericCharacterMaps);
    _define_property(AlphaNumericCharactersSelect, "defaultProperties", {
      className: "alpha-numeric"
    });
  });

  // lib/example/view/characters/alphaNumeric.js
  var require_alphaNumeric3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return AlphaNumericCharactersView;
      }
    });
    var _index = require_lib8();
    var _characters = /* @__PURE__ */ _interop_require_default(require_characters2());
    var _alphaNumeric = /* @__PURE__ */ _interop_require_default(require_alphaNumeric2());
    function _assert_this_initialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _call_super(_this, derived, args) {
      derived = _get_prototype_of(derived);
      return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
    }
    function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _define_property(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _get_prototype_of(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        _set_prototype_of(subClass, superClass);
    }
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _possible_constructor_return(self2, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assert_this_initialized(self2);
    }
    function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _set_prototype_of(o, p);
    }
    function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
    }
    function _is_native_reflect_construct() {
      try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (_) {
      }
      return (_is_native_reflect_construct = function() {
        return !!result;
      })();
    }
    var AlphaNumericCharactersView = /* @__PURE__ */ function(CharactersView) {
      _inherits(AlphaNumericCharactersView2, CharactersView);
      function AlphaNumericCharactersView2() {
        _class_call_check(this, AlphaNumericCharactersView2);
        return _call_super(this, AlphaNumericCharactersView2, arguments);
      }
      return AlphaNumericCharactersView2;
    }(_characters.default);
    _define_property(AlphaNumericCharactersView, "CharactersSelect", _alphaNumeric.default);
    _define_property(AlphaNumericCharactersView, "characterMaps", _index.alphaNumericCharacterMaps);
    _define_property(AlphaNumericCharactersView, "showCharacter", false);
  });

  // lib/example.js
  var require_example = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    require_lib2();
    var _easywithstyle = /* @__PURE__ */ _interop_require_default(require_lib7());
    var _easy = require_lib();
    var _index = require_lib8();
    var _juliaMono = /* @__PURE__ */ _interop_require_default(require_juliaMono());
    var _glyphsAsSVGs = /* @__PURE__ */ _interop_require_default(require_glyphsAsSVGs());
    var _symbolic = /* @__PURE__ */ _interop_require_default(require_symbolic4());
    var _alphaNumeric = /* @__PURE__ */ _interop_require_default(require_alphaNumeric3());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var renderStyle = _easywithstyle.default.renderStyle;
    var renderStyles = _easywithstyle.default.renderStyles;
    var body = new _easy.Body();
    var example = window.location.search.substring(1);
    var View;
    switch (example) {
      case "glyphs-as-svgs":
        View = _glyphsAsSVGs.default;
        break;
      case "symbolic-characters":
        View = _symbolic.default;
        break;
      case "alpha-numeric-characters":
        View = _alphaNumeric.default;
        break;
    }
    renderStyles();
    renderStyle(_index.stixStyle);
    renderStyle(_juliaMono.default);
    body.mount(/* @__PURE__ */ React.createElement(View, null));
  });
  require_example();
})();
//# sourceMappingURL=data:application/json;base64,
