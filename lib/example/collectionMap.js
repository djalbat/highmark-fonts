"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get collectionNames () {
        return collectionNames;
    },
    get default () {
        return _default;
    }
});
var _characterMap = require("../characterMap");
var collectionMap = {
    shapeCharacter: {
        title: "Shapes",
        characterMap: _characterMap.shapeCharacterMap
    },
    angleCharacter: {
        title: "Angles",
        characterMap: _characterMap.angleCharacterMap
    },
    arrowCharacter: {
        title: "Arrows",
        characterMap: _characterMap.arrowCharacterMap
    },
    harpoonCharacter: {
        title: "Harpoons",
        characterMap: _characterMap.harpoonCharacterMap
    },
    equalityCharacter: {
        title: "Equality",
        characterMap: _characterMap.equalityCharacterMap
    },
    orderingCharacter: {
        title: "Ordering",
        characterMap: _characterMap.orderingCharacterMap
    },
    calculusCharacter: {
        title: "Calculus",
        characterMap: _characterMap.calculusCharacterMap
    },
    relationalCharacter: {
        title: "Relational",
        characterMap: _characterMap.relationalCharacterMap
    },
    arithmeticCharacter: {
        title: "Arithmetic",
        characterMap: _characterMap.arithmeticCharacterMap
    },
    headedArrowCharacter: {
        title: "Headed Arrows",
        characterMap: _characterMap.headedArrowCharacterMap
    },
    greekLetterCharacter: {
        title: "Greek Letters",
        characterMap: _characterMap.greekLetterCharacterMap
    },
    miscellaneousCharacter: {
        title: "Miscellaneous",
        characterMap: _characterMap.miscellaneousCharacterMap
    },
    scriptLettersCharacter: {
        title: "Script Letters",
        characterMap: _characterMap.scriptLettersCharacterMap
    },
    circleCircledCharacter: {
        title: "Circles and Circled",
        characterMap: _characterMap.circleCircledCharacterMap
    },
    tackTurnstileCharacter: {
        title: "Tacks and Turnstiles",
        characterMap: _characterMap.tackTurnstileCharacterMap
    },
    frakturLettersCharacter: {
        title: "Fraktur Letters",
        characterMap: _characterMap.frakturLettersCharacterMap
    },
    classTheoreticCharacter: {
        title: "Class Theoretic",
        characterMap: _characterMap.classTheoreticCharacterMap
    },
    logicalOperatorCharacter: {
        title: "Logical Operators",
        characterMap: _characterMap.logicalOperatorCharacterMap
    },
    doubleTripleArrowCharacter: {
        title: "Double and Triple Arrows",
        characterMap: _characterMap.doubleTripleArrowCharacterMap
    },
    parenthesisBracketCharacter: {
        title: "Parentheses and brackets",
        characterMap: _characterMap.parenthesisBracketCharacterMap
    },
    doubleStruckLettersCharacter: {
        title: "Double Struck Letters",
        characterMap: _characterMap.doubleStruckLettersCharacterMap
    },
    superscriptSubscriptCharacter: {
        title: "Superscripts and Subscripts",
        characterMap: _characterMap.superscriptSubscriptCharacterMap
    }
};
var _default = collectionMap;
var collectionNames = Object.keys(collectionMap);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9leGFtcGxlL2NvbGxlY3Rpb25NYXAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHNoYXBlQ2hhcmFjdGVyTWFwLFxuICAgICAgICAgYW5nbGVDaGFyYWN0ZXJNYXAsXG4gICAgICAgICBhcnJvd0NoYXJhY3Rlck1hcCxcbiAgICAgICAgIGhhcnBvb25DaGFyYWN0ZXJNYXAsXG4gICAgICAgICBlcXVhbGl0eUNoYXJhY3Rlck1hcCxcbiAgICAgICAgIG9yZGVyaW5nQ2hhcmFjdGVyTWFwLFxuICAgICAgICAgY2FsY3VsdXNDaGFyYWN0ZXJNYXAsXG4gICAgICAgICByZWxhdGlvbmFsQ2hhcmFjdGVyTWFwLFxuICAgICAgICAgYXJpdGhtZXRpY0NoYXJhY3Rlck1hcCxcbiAgICAgICAgIGhlYWRlZEFycm93Q2hhcmFjdGVyTWFwLFxuICAgICAgICAgZ3JlZWtMZXR0ZXJDaGFyYWN0ZXJNYXAsXG4gICAgICAgICBtaXNjZWxsYW5lb3VzQ2hhcmFjdGVyTWFwLFxuICAgICAgICAgc2NyaXB0TGV0dGVyc0NoYXJhY3Rlck1hcCxcbiAgICAgICAgIGNpcmNsZUNpcmNsZWRDaGFyYWN0ZXJNYXAsXG4gICAgICAgICB0YWNrVHVybnN0aWxlQ2hhcmFjdGVyTWFwLFxuICAgICAgICAgZnJha3R1ckxldHRlcnNDaGFyYWN0ZXJNYXAsXG4gICAgICAgICBjbGFzc1RoZW9yZXRpY0NoYXJhY3Rlck1hcCxcbiAgICAgICAgIGxvZ2ljYWxPcGVyYXRvckNoYXJhY3Rlck1hcCxcbiAgICAgICAgIGRvdWJsZVRyaXBsZUFycm93Q2hhcmFjdGVyTWFwLFxuICAgICAgICAgcGFyZW50aGVzaXNCcmFja2V0Q2hhcmFjdGVyTWFwLFxuICAgICAgICAgZG91YmxlU3RydWNrTGV0dGVyc0NoYXJhY3Rlck1hcCxcbiAgICAgICAgIHN1cGVyc2NyaXB0U3Vic2NyaXB0Q2hhcmFjdGVyTWFwIH0gZnJvbSBcIi4uL2NoYXJhY3Rlck1hcFwiO1xuXG5jb25zdCBjb2xsZWN0aW9uTWFwID0ge1xuICBzaGFwZUNoYXJhY3Rlcjoge1xuICAgIHRpdGxlOiBcIlNoYXBlc1wiLFxuICAgIGNoYXJhY3Rlck1hcDogc2hhcGVDaGFyYWN0ZXJNYXBcbiAgfSxcbiAgYW5nbGVDaGFyYWN0ZXI6IHtcbiAgICB0aXRsZTogXCJBbmdsZXNcIixcbiAgICBjaGFyYWN0ZXJNYXA6IGFuZ2xlQ2hhcmFjdGVyTWFwXG4gIH0sXG4gIGFycm93Q2hhcmFjdGVyOiB7XG4gICAgdGl0bGU6IFwiQXJyb3dzXCIsXG4gICAgY2hhcmFjdGVyTWFwOiBhcnJvd0NoYXJhY3Rlck1hcFxuICB9LFxuICBoYXJwb29uQ2hhcmFjdGVyOiB7XG4gICAgdGl0bGU6IFwiSGFycG9vbnNcIixcbiAgICBjaGFyYWN0ZXJNYXA6IGhhcnBvb25DaGFyYWN0ZXJNYXBcbiAgfSxcbiAgZXF1YWxpdHlDaGFyYWN0ZXI6IHtcbiAgICB0aXRsZTogXCJFcXVhbGl0eVwiLFxuICAgIGNoYXJhY3Rlck1hcDogZXF1YWxpdHlDaGFyYWN0ZXJNYXBcbiAgfSxcbiAgb3JkZXJpbmdDaGFyYWN0ZXI6IHtcbiAgICB0aXRsZTogXCJPcmRlcmluZ1wiLFxuICAgIGNoYXJhY3Rlck1hcDogb3JkZXJpbmdDaGFyYWN0ZXJNYXBcbiAgfSxcbiAgY2FsY3VsdXNDaGFyYWN0ZXI6IHtcbiAgICB0aXRsZTogXCJDYWxjdWx1c1wiLFxuICAgIGNoYXJhY3Rlck1hcDogY2FsY3VsdXNDaGFyYWN0ZXJNYXBcbiAgfSxcbiAgcmVsYXRpb25hbENoYXJhY3Rlcjoge1xuICAgIHRpdGxlOiBcIlJlbGF0aW9uYWxcIixcbiAgICBjaGFyYWN0ZXJNYXA6IHJlbGF0aW9uYWxDaGFyYWN0ZXJNYXBcbiAgfSxcbiAgYXJpdGhtZXRpY0NoYXJhY3Rlcjoge1xuICAgIHRpdGxlOiBcIkFyaXRobWV0aWNcIixcbiAgICBjaGFyYWN0ZXJNYXA6IGFyaXRobWV0aWNDaGFyYWN0ZXJNYXBcbiAgfSxcbiAgaGVhZGVkQXJyb3dDaGFyYWN0ZXI6IHtcbiAgICB0aXRsZTogXCJIZWFkZWQgQXJyb3dzXCIsXG4gICAgY2hhcmFjdGVyTWFwOiBoZWFkZWRBcnJvd0NoYXJhY3Rlck1hcFxuICB9LFxuICBncmVla0xldHRlckNoYXJhY3Rlcjoge1xuICAgIHRpdGxlOiBcIkdyZWVrIExldHRlcnNcIixcbiAgICBjaGFyYWN0ZXJNYXA6IGdyZWVrTGV0dGVyQ2hhcmFjdGVyTWFwXG4gIH0sXG4gIG1pc2NlbGxhbmVvdXNDaGFyYWN0ZXI6IHtcbiAgICB0aXRsZTogXCJNaXNjZWxsYW5lb3VzXCIsXG4gICAgY2hhcmFjdGVyTWFwOiBtaXNjZWxsYW5lb3VzQ2hhcmFjdGVyTWFwXG4gIH0sXG4gIHNjcmlwdExldHRlcnNDaGFyYWN0ZXI6IHtcbiAgICB0aXRsZTogXCJTY3JpcHQgTGV0dGVyc1wiLFxuICAgIGNoYXJhY3Rlck1hcDogc2NyaXB0TGV0dGVyc0NoYXJhY3Rlck1hcFxuICB9LFxuICBjaXJjbGVDaXJjbGVkQ2hhcmFjdGVyOiB7XG4gICAgdGl0bGU6IFwiQ2lyY2xlcyBhbmQgQ2lyY2xlZFwiLFxuICAgIGNoYXJhY3Rlck1hcDogY2lyY2xlQ2lyY2xlZENoYXJhY3Rlck1hcFxuICB9LFxuICB0YWNrVHVybnN0aWxlQ2hhcmFjdGVyOiB7XG4gICAgdGl0bGU6IFwiVGFja3MgYW5kIFR1cm5zdGlsZXNcIixcbiAgICBjaGFyYWN0ZXJNYXA6IHRhY2tUdXJuc3RpbGVDaGFyYWN0ZXJNYXBcbiAgfSxcbiAgZnJha3R1ckxldHRlcnNDaGFyYWN0ZXI6IHtcbiAgICB0aXRsZTogXCJGcmFrdHVyIExldHRlcnNcIixcbiAgICBjaGFyYWN0ZXJNYXA6IGZyYWt0dXJMZXR0ZXJzQ2hhcmFjdGVyTWFwXG4gIH0sXG4gIGNsYXNzVGhlb3JldGljQ2hhcmFjdGVyOiB7XG4gICAgdGl0bGU6IFwiQ2xhc3MgVGhlb3JldGljXCIsXG4gICAgY2hhcmFjdGVyTWFwOiBjbGFzc1RoZW9yZXRpY0NoYXJhY3Rlck1hcFxuICB9LFxuICBsb2dpY2FsT3BlcmF0b3JDaGFyYWN0ZXI6IHtcbiAgICB0aXRsZTogXCJMb2dpY2FsIE9wZXJhdG9yc1wiLFxuICAgIGNoYXJhY3Rlck1hcDogbG9naWNhbE9wZXJhdG9yQ2hhcmFjdGVyTWFwXG4gIH0sXG4gIGRvdWJsZVRyaXBsZUFycm93Q2hhcmFjdGVyOiB7XG4gICAgdGl0bGU6IFwiRG91YmxlIGFuZCBUcmlwbGUgQXJyb3dzXCIsXG4gICAgY2hhcmFjdGVyTWFwOiBkb3VibGVUcmlwbGVBcnJvd0NoYXJhY3Rlck1hcFxuICB9LFxuICBwYXJlbnRoZXNpc0JyYWNrZXRDaGFyYWN0ZXI6IHtcbiAgICB0aXRsZTogXCJQYXJlbnRoZXNlcyBhbmQgYnJhY2tldHNcIixcbiAgICBjaGFyYWN0ZXJNYXA6IHBhcmVudGhlc2lzQnJhY2tldENoYXJhY3Rlck1hcFxuICB9LFxuICBkb3VibGVTdHJ1Y2tMZXR0ZXJzQ2hhcmFjdGVyOiB7XG4gICAgdGl0bGU6IFwiRG91YmxlIFN0cnVjayBMZXR0ZXJzXCIsXG4gICAgY2hhcmFjdGVyTWFwOiBkb3VibGVTdHJ1Y2tMZXR0ZXJzQ2hhcmFjdGVyTWFwXG4gIH0sXG4gIHN1cGVyc2NyaXB0U3Vic2NyaXB0Q2hhcmFjdGVyOiB7XG4gICAgdGl0bGU6IFwiU3VwZXJzY3JpcHRzIGFuZCBTdWJzY3JpcHRzXCIsXG4gICAgY2hhcmFjdGVyTWFwOiBzdXBlcnNjcmlwdFN1YnNjcmlwdENoYXJhY3Rlck1hcFxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb2xsZWN0aW9uTWFwO1xuXG5leHBvcnQgY29uc3QgY29sbGVjdGlvbk5hbWVzID0gT2JqZWN0LmtleXMoY29sbGVjdGlvbk1hcCk7XG4iXSwibmFtZXMiOlsiY29sbGVjdGlvbk5hbWVzIiwiY29sbGVjdGlvbk1hcCIsInNoYXBlQ2hhcmFjdGVyIiwidGl0bGUiLCJjaGFyYWN0ZXJNYXAiLCJzaGFwZUNoYXJhY3Rlck1hcCIsImFuZ2xlQ2hhcmFjdGVyIiwiYW5nbGVDaGFyYWN0ZXJNYXAiLCJhcnJvd0NoYXJhY3RlciIsImFycm93Q2hhcmFjdGVyTWFwIiwiaGFycG9vbkNoYXJhY3RlciIsImhhcnBvb25DaGFyYWN0ZXJNYXAiLCJlcXVhbGl0eUNoYXJhY3RlciIsImVxdWFsaXR5Q2hhcmFjdGVyTWFwIiwib3JkZXJpbmdDaGFyYWN0ZXIiLCJvcmRlcmluZ0NoYXJhY3Rlck1hcCIsImNhbGN1bHVzQ2hhcmFjdGVyIiwiY2FsY3VsdXNDaGFyYWN0ZXJNYXAiLCJyZWxhdGlvbmFsQ2hhcmFjdGVyIiwicmVsYXRpb25hbENoYXJhY3Rlck1hcCIsImFyaXRobWV0aWNDaGFyYWN0ZXIiLCJhcml0aG1ldGljQ2hhcmFjdGVyTWFwIiwiaGVhZGVkQXJyb3dDaGFyYWN0ZXIiLCJoZWFkZWRBcnJvd0NoYXJhY3Rlck1hcCIsImdyZWVrTGV0dGVyQ2hhcmFjdGVyIiwiZ3JlZWtMZXR0ZXJDaGFyYWN0ZXJNYXAiLCJtaXNjZWxsYW5lb3VzQ2hhcmFjdGVyIiwibWlzY2VsbGFuZW91c0NoYXJhY3Rlck1hcCIsInNjcmlwdExldHRlcnNDaGFyYWN0ZXIiLCJzY3JpcHRMZXR0ZXJzQ2hhcmFjdGVyTWFwIiwiY2lyY2xlQ2lyY2xlZENoYXJhY3RlciIsImNpcmNsZUNpcmNsZWRDaGFyYWN0ZXJNYXAiLCJ0YWNrVHVybnN0aWxlQ2hhcmFjdGVyIiwidGFja1R1cm5zdGlsZUNoYXJhY3Rlck1hcCIsImZyYWt0dXJMZXR0ZXJzQ2hhcmFjdGVyIiwiZnJha3R1ckxldHRlcnNDaGFyYWN0ZXJNYXAiLCJjbGFzc1RoZW9yZXRpY0NoYXJhY3RlciIsImNsYXNzVGhlb3JldGljQ2hhcmFjdGVyTWFwIiwibG9naWNhbE9wZXJhdG9yQ2hhcmFjdGVyIiwibG9naWNhbE9wZXJhdG9yQ2hhcmFjdGVyTWFwIiwiZG91YmxlVHJpcGxlQXJyb3dDaGFyYWN0ZXIiLCJkb3VibGVUcmlwbGVBcnJvd0NoYXJhY3Rlck1hcCIsInBhcmVudGhlc2lzQnJhY2tldENoYXJhY3RlciIsInBhcmVudGhlc2lzQnJhY2tldENoYXJhY3Rlck1hcCIsImRvdWJsZVN0cnVja0xldHRlcnNDaGFyYWN0ZXIiLCJkb3VibGVTdHJ1Y2tMZXR0ZXJzQ2hhcmFjdGVyTWFwIiwic3VwZXJzY3JpcHRTdWJzY3JpcHRDaGFyYWN0ZXIiLCJzdXBlcnNjcmlwdFN1YnNjcmlwdENoYXJhY3Rlck1hcCIsIk9iamVjdCIsImtleXMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztRQXNIYUE7ZUFBQUE7O1FBRmI7ZUFBQTs7OzRCQTdGaUQ7QUFFakQsSUFBTUMsZ0JBQWdCO0lBQ3BCQyxnQkFBZ0I7UUFDZEMsT0FBTztRQUNQQyxjQUFjQywrQkFBaUI7SUFDakM7SUFDQUMsZ0JBQWdCO1FBQ2RILE9BQU87UUFDUEMsY0FBY0csK0JBQWlCO0lBQ2pDO0lBQ0FDLGdCQUFnQjtRQUNkTCxPQUFPO1FBQ1BDLGNBQWNLLCtCQUFpQjtJQUNqQztJQUNBQyxrQkFBa0I7UUFDaEJQLE9BQU87UUFDUEMsY0FBY08saUNBQW1CO0lBQ25DO0lBQ0FDLG1CQUFtQjtRQUNqQlQsT0FBTztRQUNQQyxjQUFjUyxrQ0FBb0I7SUFDcEM7SUFDQUMsbUJBQW1CO1FBQ2pCWCxPQUFPO1FBQ1BDLGNBQWNXLGtDQUFvQjtJQUNwQztJQUNBQyxtQkFBbUI7UUFDakJiLE9BQU87UUFDUEMsY0FBY2Esa0NBQW9CO0lBQ3BDO0lBQ0FDLHFCQUFxQjtRQUNuQmYsT0FBTztRQUNQQyxjQUFjZSxvQ0FBc0I7SUFDdEM7SUFDQUMscUJBQXFCO1FBQ25CakIsT0FBTztRQUNQQyxjQUFjaUIsb0NBQXNCO0lBQ3RDO0lBQ0FDLHNCQUFzQjtRQUNwQm5CLE9BQU87UUFDUEMsY0FBY21CLHFDQUF1QjtJQUN2QztJQUNBQyxzQkFBc0I7UUFDcEJyQixPQUFPO1FBQ1BDLGNBQWNxQixxQ0FBdUI7SUFDdkM7SUFDQUMsd0JBQXdCO1FBQ3RCdkIsT0FBTztRQUNQQyxjQUFjdUIsdUNBQXlCO0lBQ3pDO0lBQ0FDLHdCQUF3QjtRQUN0QnpCLE9BQU87UUFDUEMsY0FBY3lCLHVDQUF5QjtJQUN6QztJQUNBQyx3QkFBd0I7UUFDdEIzQixPQUFPO1FBQ1BDLGNBQWMyQix1Q0FBeUI7SUFDekM7SUFDQUMsd0JBQXdCO1FBQ3RCN0IsT0FBTztRQUNQQyxjQUFjNkIsdUNBQXlCO0lBQ3pDO0lBQ0FDLHlCQUF5QjtRQUN2Qi9CLE9BQU87UUFDUEMsY0FBYytCLHdDQUEwQjtJQUMxQztJQUNBQyx5QkFBeUI7UUFDdkJqQyxPQUFPO1FBQ1BDLGNBQWNpQyx3Q0FBMEI7SUFDMUM7SUFDQUMsMEJBQTBCO1FBQ3hCbkMsT0FBTztRQUNQQyxjQUFjbUMseUNBQTJCO0lBQzNDO0lBQ0FDLDRCQUE0QjtRQUMxQnJDLE9BQU87UUFDUEMsY0FBY3FDLDJDQUE2QjtJQUM3QztJQUNBQyw2QkFBNkI7UUFDM0J2QyxPQUFPO1FBQ1BDLGNBQWN1Qyw0Q0FBOEI7SUFDOUM7SUFDQUMsOEJBQThCO1FBQzVCekMsT0FBTztRQUNQQyxjQUFjeUMsNkNBQStCO0lBQy9DO0lBQ0FDLCtCQUErQjtRQUM3QjNDLE9BQU87UUFDUEMsY0FBYzJDLDhDQUFnQztJQUNoRDtBQUNGO0lBRUEsV0FBZTlDO0FBRVIsSUFBTUQsa0JBQWtCZ0QsT0FBT0MsSUFBSSxDQUFDaEQifQ==